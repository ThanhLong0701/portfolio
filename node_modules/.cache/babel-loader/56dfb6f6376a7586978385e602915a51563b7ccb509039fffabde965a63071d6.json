{
  "ast": null,
  "code": "/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2023 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = root.pdfjsLib = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], () => {\n    return root.pdfjsLib = factory();\n  });else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(globalThis, () => {\n  return (/******/(() => {\n      // webpackBootstrap\n      /******/\n      \"use strict\";\n\n      /******/\n      var __webpack_modules__ = [\n        /* 0 */\n      , /* 1 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.RenderingIntentFlag = exports.PromiseCapability = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.MAX_IMAGE_SIZE_TO_CACHE = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.BASELINE_FACTOR = exports.AnnotationType = exports.AnnotationReplyType = exports.AnnotationPrefix = exports.AnnotationMode = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n        exports.assert = assert;\n        exports.bytesToString = bytesToString;\n        exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n        exports.getModificationDate = getModificationDate;\n        exports.getUuid = getUuid;\n        exports.getVerbosityLevel = getVerbosityLevel;\n        exports.info = info;\n        exports.isArrayBuffer = isArrayBuffer;\n        exports.isArrayEqual = isArrayEqual;\n        exports.isNodeJS = void 0;\n        exports.normalizeUnicode = normalizeUnicode;\n        exports.objectFromMap = objectFromMap;\n        exports.objectSize = objectSize;\n        exports.setVerbosityLevel = setVerbosityLevel;\n        exports.shadow = shadow;\n        exports.string32 = string32;\n        exports.stringToBytes = stringToBytes;\n        exports.stringToPDFString = stringToPDFString;\n        exports.stringToUTF8String = stringToUTF8String;\n        exports.unreachable = unreachable;\n        exports.utf8StringToString = utf8StringToString;\n        exports.warn = warn;\n        const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n        exports.isNodeJS = isNodeJS;\n        const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n        exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n        const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n        exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n        const MAX_IMAGE_SIZE_TO_CACHE = 10e6;\n        exports.MAX_IMAGE_SIZE_TO_CACHE = MAX_IMAGE_SIZE_TO_CACHE;\n        const LINE_FACTOR = 1.35;\n        exports.LINE_FACTOR = LINE_FACTOR;\n        const LINE_DESCENT_FACTOR = 0.35;\n        exports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\n        const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n        exports.BASELINE_FACTOR = BASELINE_FACTOR;\n        const RenderingIntentFlag = {\n          ANY: 0x01,\n          DISPLAY: 0x02,\n          PRINT: 0x04,\n          SAVE: 0x08,\n          ANNOTATIONS_FORMS: 0x10,\n          ANNOTATIONS_STORAGE: 0x20,\n          ANNOTATIONS_DISABLE: 0x40,\n          OPLIST: 0x100\n        };\n        exports.RenderingIntentFlag = RenderingIntentFlag;\n        const AnnotationMode = {\n          DISABLE: 0,\n          ENABLE: 1,\n          ENABLE_FORMS: 2,\n          ENABLE_STORAGE: 3\n        };\n        exports.AnnotationMode = AnnotationMode;\n        const AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n        exports.AnnotationEditorPrefix = AnnotationEditorPrefix;\n        const AnnotationEditorType = {\n          DISABLE: -1,\n          NONE: 0,\n          FREETEXT: 3,\n          STAMP: 13,\n          INK: 15\n        };\n        exports.AnnotationEditorType = AnnotationEditorType;\n        const AnnotationEditorParamsType = {\n          RESIZE: 1,\n          CREATE: 2,\n          FREETEXT_SIZE: 11,\n          FREETEXT_COLOR: 12,\n          FREETEXT_OPACITY: 13,\n          INK_COLOR: 21,\n          INK_THICKNESS: 22,\n          INK_OPACITY: 23\n        };\n        exports.AnnotationEditorParamsType = AnnotationEditorParamsType;\n        const PermissionFlag = {\n          PRINT: 0x04,\n          MODIFY_CONTENTS: 0x08,\n          COPY: 0x10,\n          MODIFY_ANNOTATIONS: 0x20,\n          FILL_INTERACTIVE_FORMS: 0x100,\n          COPY_FOR_ACCESSIBILITY: 0x200,\n          ASSEMBLE: 0x400,\n          PRINT_HIGH_QUALITY: 0x800\n        };\n        exports.PermissionFlag = PermissionFlag;\n        const TextRenderingMode = {\n          FILL: 0,\n          STROKE: 1,\n          FILL_STROKE: 2,\n          INVISIBLE: 3,\n          FILL_ADD_TO_PATH: 4,\n          STROKE_ADD_TO_PATH: 5,\n          FILL_STROKE_ADD_TO_PATH: 6,\n          ADD_TO_PATH: 7,\n          FILL_STROKE_MASK: 3,\n          ADD_TO_PATH_FLAG: 4\n        };\n        exports.TextRenderingMode = TextRenderingMode;\n        const ImageKind = {\n          GRAYSCALE_1BPP: 1,\n          RGB_24BPP: 2,\n          RGBA_32BPP: 3\n        };\n        exports.ImageKind = ImageKind;\n        const AnnotationType = {\n          TEXT: 1,\n          LINK: 2,\n          FREETEXT: 3,\n          LINE: 4,\n          SQUARE: 5,\n          CIRCLE: 6,\n          POLYGON: 7,\n          POLYLINE: 8,\n          HIGHLIGHT: 9,\n          UNDERLINE: 10,\n          SQUIGGLY: 11,\n          STRIKEOUT: 12,\n          STAMP: 13,\n          CARET: 14,\n          INK: 15,\n          POPUP: 16,\n          FILEATTACHMENT: 17,\n          SOUND: 18,\n          MOVIE: 19,\n          WIDGET: 20,\n          SCREEN: 21,\n          PRINTERMARK: 22,\n          TRAPNET: 23,\n          WATERMARK: 24,\n          THREED: 25,\n          REDACT: 26\n        };\n        exports.AnnotationType = AnnotationType;\n        const AnnotationReplyType = {\n          GROUP: \"Group\",\n          REPLY: \"R\"\n        };\n        exports.AnnotationReplyType = AnnotationReplyType;\n        const AnnotationFlag = {\n          INVISIBLE: 0x01,\n          HIDDEN: 0x02,\n          PRINT: 0x04,\n          NOZOOM: 0x08,\n          NOROTATE: 0x10,\n          NOVIEW: 0x20,\n          READONLY: 0x40,\n          LOCKED: 0x80,\n          TOGGLENOVIEW: 0x100,\n          LOCKEDCONTENTS: 0x200\n        };\n        exports.AnnotationFlag = AnnotationFlag;\n        const AnnotationFieldFlag = {\n          READONLY: 0x0000001,\n          REQUIRED: 0x0000002,\n          NOEXPORT: 0x0000004,\n          MULTILINE: 0x0001000,\n          PASSWORD: 0x0002000,\n          NOTOGGLETOOFF: 0x0004000,\n          RADIO: 0x0008000,\n          PUSHBUTTON: 0x0010000,\n          COMBO: 0x0020000,\n          EDIT: 0x0040000,\n          SORT: 0x0080000,\n          FILESELECT: 0x0100000,\n          MULTISELECT: 0x0200000,\n          DONOTSPELLCHECK: 0x0400000,\n          DONOTSCROLL: 0x0800000,\n          COMB: 0x1000000,\n          RICHTEXT: 0x2000000,\n          RADIOSINUNISON: 0x2000000,\n          COMMITONSELCHANGE: 0x4000000\n        };\n        exports.AnnotationFieldFlag = AnnotationFieldFlag;\n        const AnnotationBorderStyleType = {\n          SOLID: 1,\n          DASHED: 2,\n          BEVELED: 3,\n          INSET: 4,\n          UNDERLINE: 5\n        };\n        exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n        const AnnotationActionEventType = {\n          E: \"Mouse Enter\",\n          X: \"Mouse Exit\",\n          D: \"Mouse Down\",\n          U: \"Mouse Up\",\n          Fo: \"Focus\",\n          Bl: \"Blur\",\n          PO: \"PageOpen\",\n          PC: \"PageClose\",\n          PV: \"PageVisible\",\n          PI: \"PageInvisible\",\n          K: \"Keystroke\",\n          F: \"Format\",\n          V: \"Validate\",\n          C: \"Calculate\"\n        };\n        exports.AnnotationActionEventType = AnnotationActionEventType;\n        const DocumentActionEventType = {\n          WC: \"WillClose\",\n          WS: \"WillSave\",\n          DS: \"DidSave\",\n          WP: \"WillPrint\",\n          DP: \"DidPrint\"\n        };\n        exports.DocumentActionEventType = DocumentActionEventType;\n        const PageActionEventType = {\n          O: \"PageOpen\",\n          C: \"PageClose\"\n        };\n        exports.PageActionEventType = PageActionEventType;\n        const VerbosityLevel = {\n          ERRORS: 0,\n          WARNINGS: 1,\n          INFOS: 5\n        };\n        exports.VerbosityLevel = VerbosityLevel;\n        const CMapCompressionType = {\n          NONE: 0,\n          BINARY: 1\n        };\n        exports.CMapCompressionType = CMapCompressionType;\n        const OPS = {\n          dependency: 1,\n          setLineWidth: 2,\n          setLineCap: 3,\n          setLineJoin: 4,\n          setMiterLimit: 5,\n          setDash: 6,\n          setRenderingIntent: 7,\n          setFlatness: 8,\n          setGState: 9,\n          save: 10,\n          restore: 11,\n          transform: 12,\n          moveTo: 13,\n          lineTo: 14,\n          curveTo: 15,\n          curveTo2: 16,\n          curveTo3: 17,\n          closePath: 18,\n          rectangle: 19,\n          stroke: 20,\n          closeStroke: 21,\n          fill: 22,\n          eoFill: 23,\n          fillStroke: 24,\n          eoFillStroke: 25,\n          closeFillStroke: 26,\n          closeEOFillStroke: 27,\n          endPath: 28,\n          clip: 29,\n          eoClip: 30,\n          beginText: 31,\n          endText: 32,\n          setCharSpacing: 33,\n          setWordSpacing: 34,\n          setHScale: 35,\n          setLeading: 36,\n          setFont: 37,\n          setTextRenderingMode: 38,\n          setTextRise: 39,\n          moveText: 40,\n          setLeadingMoveText: 41,\n          setTextMatrix: 42,\n          nextLine: 43,\n          showText: 44,\n          showSpacedText: 45,\n          nextLineShowText: 46,\n          nextLineSetSpacingShowText: 47,\n          setCharWidth: 48,\n          setCharWidthAndBounds: 49,\n          setStrokeColorSpace: 50,\n          setFillColorSpace: 51,\n          setStrokeColor: 52,\n          setStrokeColorN: 53,\n          setFillColor: 54,\n          setFillColorN: 55,\n          setStrokeGray: 56,\n          setFillGray: 57,\n          setStrokeRGBColor: 58,\n          setFillRGBColor: 59,\n          setStrokeCMYKColor: 60,\n          setFillCMYKColor: 61,\n          shadingFill: 62,\n          beginInlineImage: 63,\n          beginImageData: 64,\n          endInlineImage: 65,\n          paintXObject: 66,\n          markPoint: 67,\n          markPointProps: 68,\n          beginMarkedContent: 69,\n          beginMarkedContentProps: 70,\n          endMarkedContent: 71,\n          beginCompat: 72,\n          endCompat: 73,\n          paintFormXObjectBegin: 74,\n          paintFormXObjectEnd: 75,\n          beginGroup: 76,\n          endGroup: 77,\n          beginAnnotation: 80,\n          endAnnotation: 81,\n          paintImageMaskXObject: 83,\n          paintImageMaskXObjectGroup: 84,\n          paintImageXObject: 85,\n          paintInlineImageXObject: 86,\n          paintInlineImageXObjectGroup: 87,\n          paintImageXObjectRepeat: 88,\n          paintImageMaskXObjectRepeat: 89,\n          paintSolidColorImageMask: 90,\n          constructPath: 91\n        };\n        exports.OPS = OPS;\n        const PasswordResponses = {\n          NEED_PASSWORD: 1,\n          INCORRECT_PASSWORD: 2\n        };\n        exports.PasswordResponses = PasswordResponses;\n        let verbosity = VerbosityLevel.WARNINGS;\n        function setVerbosityLevel(level) {\n          if (Number.isInteger(level)) {\n            verbosity = level;\n          }\n        }\n        function getVerbosityLevel() {\n          return verbosity;\n        }\n        function info(msg) {\n          if (verbosity >= VerbosityLevel.INFOS) {\n            console.log(`Info: ${msg}`);\n          }\n        }\n        function warn(msg) {\n          if (verbosity >= VerbosityLevel.WARNINGS) {\n            console.log(`Warning: ${msg}`);\n          }\n        }\n        function unreachable(msg) {\n          throw new Error(msg);\n        }\n        function assert(cond, msg) {\n          if (!cond) {\n            unreachable(msg);\n          }\n        }\n        function _isValidProtocol(url) {\n          switch (url?.protocol) {\n            case \"http:\":\n            case \"https:\":\n            case \"ftp:\":\n            case \"mailto:\":\n            case \"tel:\":\n              return true;\n            default:\n              return false;\n          }\n        }\n        function createValidAbsoluteUrl(url) {\n          let baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n          if (!url) {\n            return null;\n          }\n          try {\n            if (options && typeof url === \"string\") {\n              if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n                const dots = url.match(/\\./g);\n                if (dots?.length >= 2) {\n                  url = `http://${url}`;\n                }\n              }\n              if (options.tryConvertEncoding) {\n                try {\n                  url = stringToUTF8String(url);\n                } catch {}\n              }\n            }\n            const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            if (_isValidProtocol(absoluteUrl)) {\n              return absoluteUrl;\n            }\n          } catch {}\n          return null;\n        }\n        function shadow(obj, prop, value) {\n          let nonSerializable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          Object.defineProperty(obj, prop, {\n            value,\n            enumerable: !nonSerializable,\n            configurable: true,\n            writable: false\n          });\n          return value;\n        }\n        const BaseException = function BaseExceptionClosure() {\n          function BaseException(message, name) {\n            if (this.constructor === BaseException) {\n              unreachable(\"Cannot initialize BaseException.\");\n            }\n            this.message = message;\n            this.name = name;\n          }\n          BaseException.prototype = new Error();\n          BaseException.constructor = BaseException;\n          return BaseException;\n        }();\n        exports.BaseException = BaseException;\n        class PasswordException extends BaseException {\n          constructor(msg, code) {\n            super(msg, \"PasswordException\");\n            this.code = code;\n          }\n        }\n        exports.PasswordException = PasswordException;\n        class UnknownErrorException extends BaseException {\n          constructor(msg, details) {\n            super(msg, \"UnknownErrorException\");\n            this.details = details;\n          }\n        }\n        exports.UnknownErrorException = UnknownErrorException;\n        class InvalidPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"InvalidPDFException\");\n          }\n        }\n        exports.InvalidPDFException = InvalidPDFException;\n        class MissingPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"MissingPDFException\");\n          }\n        }\n        exports.MissingPDFException = MissingPDFException;\n        class UnexpectedResponseException extends BaseException {\n          constructor(msg, status) {\n            super(msg, \"UnexpectedResponseException\");\n            this.status = status;\n          }\n        }\n        exports.UnexpectedResponseException = UnexpectedResponseException;\n        class FormatError extends BaseException {\n          constructor(msg) {\n            super(msg, \"FormatError\");\n          }\n        }\n        exports.FormatError = FormatError;\n        class AbortException extends BaseException {\n          constructor(msg) {\n            super(msg, \"AbortException\");\n          }\n        }\n        exports.AbortException = AbortException;\n        function bytesToString(bytes) {\n          if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n            unreachable(\"Invalid argument for bytesToString\");\n          }\n          const length = bytes.length;\n          const MAX_ARGUMENT_COUNT = 8192;\n          if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n          }\n          const strBuf = [];\n          for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            const chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n          }\n          return strBuf.join(\"\");\n        }\n        function stringToBytes(str) {\n          if (typeof str !== \"string\") {\n            unreachable(\"Invalid argument for stringToBytes\");\n          }\n          const length = str.length;\n          const bytes = new Uint8Array(length);\n          for (let i = 0; i < length; ++i) {\n            bytes[i] = str.charCodeAt(i) & 0xff;\n          }\n          return bytes;\n        }\n        function string32(value) {\n          return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n        }\n        function objectSize(obj) {\n          return Object.keys(obj).length;\n        }\n        function objectFromMap(map) {\n          const obj = Object.create(null);\n          for (const [key, value] of map) {\n            obj[key] = value;\n          }\n          return obj;\n        }\n        function isLittleEndian() {\n          const buffer8 = new Uint8Array(4);\n          buffer8[0] = 1;\n          const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n          return view32[0] === 1;\n        }\n        function isEvalSupported() {\n          try {\n            new Function(\"\");\n            return true;\n          } catch {\n            return false;\n          }\n        }\n        class FeatureTest {\n          static get isLittleEndian() {\n            return shadow(this, \"isLittleEndian\", isLittleEndian());\n          }\n          static get isEvalSupported() {\n            return shadow(this, \"isEvalSupported\", isEvalSupported());\n          }\n          static get isOffscreenCanvasSupported() {\n            return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n          }\n          static get platform() {\n            if (typeof navigator === \"undefined\") {\n              return shadow(this, \"platform\", {\n                isWin: false,\n                isMac: false\n              });\n            }\n            return shadow(this, \"platform\", {\n              isWin: navigator.platform.includes(\"Win\"),\n              isMac: navigator.platform.includes(\"Mac\")\n            });\n          }\n          static get isCSSRoundSupported() {\n            return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n          }\n        }\n        exports.FeatureTest = FeatureTest;\n        const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n        class Util {\n          static makeHexColor(r, g, b) {\n            return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n          }\n          static scaleMinMax(transform, minMax) {\n            let temp;\n            if (transform[0]) {\n              if (transform[0] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n              minMax[0] *= transform[0];\n              minMax[1] *= transform[0];\n              if (transform[3] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n              minMax[2] *= transform[3];\n              minMax[3] *= transform[3];\n            } else {\n              temp = minMax[0];\n              minMax[0] = minMax[2];\n              minMax[2] = temp;\n              temp = minMax[1];\n              minMax[1] = minMax[3];\n              minMax[3] = temp;\n              if (transform[1] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n              minMax[2] *= transform[1];\n              minMax[3] *= transform[1];\n              if (transform[2] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n              minMax[0] *= transform[2];\n              minMax[1] *= transform[2];\n            }\n            minMax[0] += transform[4];\n            minMax[1] += transform[4];\n            minMax[2] += transform[5];\n            minMax[3] += transform[5];\n          }\n          static transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n          static applyTransform(p, m) {\n            const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n          static applyInverseTransform(p, m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n          static getAxialAlignedBoundingBox(r, m) {\n            const p1 = this.applyTransform(r, m);\n            const p2 = this.applyTransform(r.slice(2, 4), m);\n            const p3 = this.applyTransform([r[0], r[3]], m);\n            const p4 = this.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n          static inverseTransform(m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n          static singularValueDecompose2dScale(m) {\n            const transpose = [m[0], m[2], m[1], m[3]];\n            const a = m[0] * transpose[0] + m[1] * transpose[2];\n            const b = m[0] * transpose[1] + m[1] * transpose[3];\n            const c = m[2] * transpose[0] + m[3] * transpose[2];\n            const d = m[2] * transpose[1] + m[3] * transpose[3];\n            const first = (a + d) / 2;\n            const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n            const sx = first + second || 1;\n            const sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n          static normalizeRect(rect) {\n            const r = rect.slice(0);\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n            return r;\n          }\n          static intersect(rect1, rect2) {\n            const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n            const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n            if (xLow > xHigh) {\n              return null;\n            }\n            const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n            const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n            if (yLow > yHigh) {\n              return null;\n            }\n            return [xLow, yLow, xHigh, yHigh];\n          }\n          static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n            const tvalues = [],\n              bounds = [[], []];\n            let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n            for (let i = 0; i < 2; ++i) {\n              if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n              } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n              }\n              if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                  continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                  tvalues.push(t);\n                }\n                continue;\n              }\n              b2ac = b * b - 4 * c * a;\n              sqrtb2ac = Math.sqrt(b2ac);\n              if (b2ac < 0) {\n                continue;\n              }\n              t1 = (-b + sqrtb2ac) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n              }\n              t2 = (-b - sqrtb2ac) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n              }\n            }\n            let j = tvalues.length,\n              mt;\n            const jlen = j;\n            while (j--) {\n              t = tvalues[j];\n              mt = 1 - t;\n              bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n              bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            }\n            bounds[0][jlen] = x0;\n            bounds[1][jlen] = y0;\n            bounds[0][jlen + 1] = x3;\n            bounds[1][jlen + 1] = y3;\n            bounds[0].length = bounds[1].length = jlen + 2;\n            return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n          }\n        }\n        exports.Util = Util;\n        const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n        function stringToPDFString(str) {\n          if (str[0] >= \"\\xEF\") {\n            let encoding;\n            if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n              encoding = \"utf-16be\";\n            } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n              encoding = \"utf-16le\";\n            } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n              encoding = \"utf-8\";\n            }\n            if (encoding) {\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = stringToBytes(str);\n                return decoder.decode(buffer);\n              } catch (ex) {\n                warn(`stringToPDFString: \"${ex}\".`);\n              }\n            }\n          }\n          const strBuf = [];\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n          return strBuf.join(\"\");\n        }\n        function stringToUTF8String(str) {\n          return decodeURIComponent(escape(str));\n        }\n        function utf8StringToString(str) {\n          return unescape(encodeURIComponent(str));\n        }\n        function isArrayBuffer(v) {\n          return typeof v === \"object\" && v?.byteLength !== undefined;\n        }\n        function isArrayEqual(arr1, arr2) {\n          if (arr1.length !== arr2.length) {\n            return false;\n          }\n          for (let i = 0, ii = arr1.length; i < ii; i++) {\n            if (arr1[i] !== arr2[i]) {\n              return false;\n            }\n          }\n          return true;\n        }\n        function getModificationDate() {\n          let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n          const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n          return buffer.join(\"\");\n        }\n        class PromiseCapability {\n          #settled = false;\n          constructor() {\n            this.promise = new Promise((resolve, reject) => {\n              this.resolve = data => {\n                this.#settled = true;\n                resolve(data);\n              };\n              this.reject = reason => {\n                this.#settled = true;\n                reject(reason);\n              };\n            });\n          }\n          get settled() {\n            return this.#settled;\n          }\n        }\n        exports.PromiseCapability = PromiseCapability;\n        let NormalizeRegex = null;\n        let NormalizationMap = null;\n        function normalizeUnicode(str) {\n          if (!NormalizeRegex) {\n            NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n            NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n          }\n          return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n            return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n          });\n        }\n        function getUuid() {\n          if (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\") {\n            return crypto.randomUUID();\n          }\n          const buf = new Uint8Array(32);\n          if (typeof crypto !== \"undefined\" && typeof crypto?.getRandomValues === \"function\") {\n            crypto.getRandomValues(buf);\n          } else {\n            for (let i = 0; i < 32; i++) {\n              buf[i] = Math.floor(Math.random() * 255);\n            }\n          }\n          return bytesToString(buf);\n        }\n        const AnnotationPrefix = \"pdfjs_internal_id_\";\n        exports.AnnotationPrefix = AnnotationPrefix;\n\n        /***/\n      }, /* 2 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultFilterFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _displaySvg.SVGGraphics;\n          }\n        });\n        exports.build = void 0;\n        exports.getDocument = getDocument;\n        exports.version = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _annotation_storage = __w_pdfjs_require__(3);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _font_loader = __w_pdfjs_require__(9);\n        var _displayNode_utils = __w_pdfjs_require__(10);\n        var _canvas = __w_pdfjs_require__(11);\n        var _worker_options = __w_pdfjs_require__(14);\n        var _message_handler = __w_pdfjs_require__(15);\n        var _metadata = __w_pdfjs_require__(16);\n        var _optional_content_config = __w_pdfjs_require__(17);\n        var _transport_stream = __w_pdfjs_require__(18);\n        var _displayFetch_stream = __w_pdfjs_require__(19);\n        var _displayNetwork = __w_pdfjs_require__(22);\n        var _displayNode_stream = __w_pdfjs_require__(23);\n        var _displaySvg = __w_pdfjs_require__(24);\n        var _xfa_text = __w_pdfjs_require__(25);\n        const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n        const RENDERING_CANCELLED_TIMEOUT = 100;\n        const DELAYED_CLEANUP_TIMEOUT = 5000;\n        const DefaultCanvasFactory = _util.isNodeJS ? _displayNode_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory;\n        const DefaultCMapReaderFactory = _util.isNodeJS ? _displayNode_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n        const DefaultFilterFactory = _util.isNodeJS ? _displayNode_utils.NodeFilterFactory : _display_utils.DOMFilterFactory;\n        exports.DefaultFilterFactory = DefaultFilterFactory;\n        const DefaultStandardFontDataFactory = _util.isNodeJS ? _displayNode_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\n        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n        function getDocument(src) {\n          if (typeof src === \"string\" || src instanceof URL) {\n            src = {\n              url: src\n            };\n          } else if ((0, _util.isArrayBuffer)(src)) {\n            src = {\n              data: src\n            };\n          }\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n          }\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n          const task = new PDFDocumentLoadingTask();\n          const {\n            docId\n          } = task;\n          const url = src.url ? getUrlProp(src.url) : null;\n          const data = src.data ? getDataProp(src.data) : null;\n          const httpHeaders = src.httpHeaders || null;\n          const withCredentials = src.withCredentials === true;\n          const password = src.password ?? null;\n          const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n          const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : DEFAULT_RANGE_CHUNK_SIZE;\n          let worker = src.worker instanceof PDFWorker ? src.worker : null;\n          const verbosity = src.verbosity;\n          const docBaseUrl = typeof src.docBaseUrl === \"string\" && !(0, _display_utils.isDataScheme)(src.docBaseUrl) ? src.docBaseUrl : null;\n          const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n          const cMapPacked = src.cMapPacked !== false;\n          const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n          const standardFontDataUrl = typeof src.standardFontDataUrl === \"string\" ? src.standardFontDataUrl : null;\n          const StandardFontDataFactory = src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n          const ignoreErrors = src.stopAtErrors !== true;\n          const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n          const isEvalSupported = src.isEvalSupported !== false;\n          const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !_util.isNodeJS;\n          const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n          const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : _util.isNodeJS;\n          const fontExtraProperties = src.fontExtraProperties === true;\n          const enableXfa = src.enableXfa === true;\n          const ownerDocument = src.ownerDocument || globalThis.document;\n          const disableRange = src.disableRange === true;\n          const disableStream = src.disableStream === true;\n          const disableAutoFetch = src.disableAutoFetch === true;\n          const pdfBug = src.pdfBug === true;\n          const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n          const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !_util.isNodeJS && !disableFontFace;\n          const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : CMapReaderFactory === _display_utils.DOMCMapReaderFactory && StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory && cMapUrl && standardFontDataUrl && (0, _display_utils.isValidFetchUrl)(cMapUrl, document.baseURI) && (0, _display_utils.isValidFetchUrl)(standardFontDataUrl, document.baseURI);\n          const canvasFactory = src.canvasFactory || new DefaultCanvasFactory({\n            ownerDocument\n          });\n          const filterFactory = src.filterFactory || new DefaultFilterFactory({\n            docId,\n            ownerDocument\n          });\n          const styleElement = null;\n          (0, _util.setVerbosityLevel)(verbosity);\n          const transportFactory = {\n            canvasFactory,\n            filterFactory\n          };\n          if (!useWorkerFetch) {\n            transportFactory.cMapReaderFactory = new CMapReaderFactory({\n              baseUrl: cMapUrl,\n              isCompressed: cMapPacked\n            });\n            transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n              baseUrl: standardFontDataUrl\n            });\n          }\n          if (!worker) {\n            const workerParams = {\n              verbosity,\n              port: _worker_options.GlobalWorkerOptions.workerPort\n            };\n            worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n            task._worker = worker;\n          }\n          const fetchDocParams = {\n            docId,\n            apiVersion: '3.11.174',\n            data,\n            password,\n            disableAutoFetch,\n            rangeChunkSize,\n            length,\n            docBaseUrl,\n            enableXfa,\n            evaluatorOptions: {\n              maxImageSize,\n              disableFontFace,\n              ignoreErrors,\n              isEvalSupported,\n              isOffscreenCanvasSupported,\n              canvasMaxAreaInBytes,\n              fontExtraProperties,\n              useSystemFonts,\n              cMapUrl: useWorkerFetch ? cMapUrl : null,\n              standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null\n            }\n          };\n          const transportParams = {\n            ignoreErrors,\n            isEvalSupported,\n            disableFontFace,\n            fontExtraProperties,\n            enableXfa,\n            ownerDocument,\n            disableAutoFetch,\n            pdfBug,\n            styleElement\n          };\n          worker.promise.then(function () {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n            const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n            const networkStreamPromise = new Promise(function (resolve) {\n              let networkStream;\n              if (rangeTransport) {\n                networkStream = new _transport_stream.PDFDataTransportStream({\n                  length,\n                  initialData: rangeTransport.initialData,\n                  progressiveDone: rangeTransport.progressiveDone,\n                  contentDispositionFilename: rangeTransport.contentDispositionFilename,\n                  disableRange,\n                  disableStream\n                }, rangeTransport);\n              } else if (!data) {\n                const createPDFNetworkStream = params => {\n                  if (_util.isNodeJS) {\n                    return new _displayNode_stream.PDFNodeStream(params);\n                  }\n                  return (0, _display_utils.isValidFetchUrl)(params.url) ? new _displayFetch_stream.PDFFetchStream(params) : new _displayNetwork.PDFNetworkStream(params);\n                };\n                networkStream = createPDFNetworkStream({\n                  url,\n                  length,\n                  httpHeaders,\n                  withCredentials,\n                  rangeChunkSize,\n                  disableRange,\n                  disableStream\n                });\n              }\n              resolve(networkStream);\n            });\n            return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n              let [workerId, networkStream] = _ref;\n              if (task.destroyed) {\n                throw new Error(\"Loading aborted\");\n              }\n              const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n              const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);\n              task._transport = transport;\n              messageHandler.send(\"Ready\", null);\n            });\n          }).catch(task._capability.reject);\n          return task;\n        }\n        async function _fetchDocument(worker, source) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n          const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", source, source.data ? [source.data.buffer] : null);\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n          return workerId;\n        }\n        function getUrlProp(val) {\n          if (val instanceof URL) {\n            return val.href;\n          }\n          try {\n            return new URL(val, window.location).href;\n          } catch {\n            if (_util.isNodeJS && typeof val === \"string\") {\n              return val;\n            }\n          }\n          throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n        }\n        function getDataProp(val) {\n          if (_util.isNodeJS && typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n            throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n          }\n          if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n            return val;\n          }\n          if (typeof val === \"string\") {\n            return (0, _util.stringToBytes)(val);\n          }\n          if (typeof val === \"object\" && !isNaN(val?.length) || (0, _util.isArrayBuffer)(val)) {\n            return new Uint8Array(val);\n          }\n          throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n        }\n        class PDFDocumentLoadingTask {\n          static #docId = 0;\n          constructor() {\n            this._capability = new _util.PromiseCapability();\n            this._transport = null;\n            this._worker = null;\n            this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n          }\n          get promise() {\n            return this._capability.promise;\n          }\n          async destroy() {\n            this.destroyed = true;\n            try {\n              if (this._worker?.port) {\n                this._worker._pendingDestroy = true;\n              }\n              await this._transport?.destroy();\n            } catch (ex) {\n              if (this._worker?.port) {\n                delete this._worker._pendingDestroy;\n              }\n              throw ex;\n            }\n            this._transport = null;\n            if (this._worker) {\n              this._worker.destroy();\n              this._worker = null;\n            }\n          }\n        }\n        exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n        class PDFDataRangeTransport {\n          constructor(length, initialData) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this.length = length;\n            this.initialData = initialData;\n            this.progressiveDone = progressiveDone;\n            this.contentDispositionFilename = contentDispositionFilename;\n            this._rangeListeners = [];\n            this._progressListeners = [];\n            this._progressiveReadListeners = [];\n            this._progressiveDoneListeners = [];\n            this._readyCapability = new _util.PromiseCapability();\n          }\n          addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n          addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n          addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n          addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n          onDataRange(begin, chunk) {\n            for (const listener of this._rangeListeners) {\n              listener(begin, chunk);\n            }\n          }\n          onDataProgress(loaded, total) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressListeners) {\n                listener(loaded, total);\n              }\n            });\n          }\n          onDataProgressiveRead(chunk) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveReadListeners) {\n                listener(chunk);\n              }\n            });\n          }\n          onDataProgressiveDone() {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveDoneListeners) {\n                listener();\n              }\n            });\n          }\n          transportReady() {\n            this._readyCapability.resolve();\n          }\n          requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n          abort() {}\n        }\n        exports.PDFDataRangeTransport = PDFDataRangeTransport;\n        class PDFDocumentProxy {\n          constructor(pdfInfo, transport) {\n            this._pdfInfo = pdfInfo;\n            this._transport = transport;\n            Object.defineProperty(this, \"getJavaScript\", {\n              value: () => {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getJavaScript`, \" + \"please use `PDFDocumentProxy.getJSActions` instead.\");\n                return this.getJSActions().then(js => {\n                  if (!js) {\n                    return js;\n                  }\n                  const jsArr = [];\n                  for (const name in js) {\n                    jsArr.push(...js[name]);\n                  }\n                  return jsArr;\n                });\n              }\n            });\n          }\n          get annotationStorage() {\n            return this._transport.annotationStorage;\n          }\n          get filterFactory() {\n            return this._transport.filterFactory;\n          }\n          get numPages() {\n            return this._pdfInfo.numPages;\n          }\n          get fingerprints() {\n            return this._pdfInfo.fingerprints;\n          }\n          get isPureXfa() {\n            return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n          }\n          get allXfaHtml() {\n            return this._transport._htmlForXfa;\n          }\n          getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n          getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n          getDestinations() {\n            return this._transport.getDestinations();\n          }\n          getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n          getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n          getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n          getPageMode() {\n            return this._transport.getPageMode();\n          }\n          getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n          getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n          getAttachments() {\n            return this._transport.getAttachments();\n          }\n          getJSActions() {\n            return this._transport.getDocJSActions();\n          }\n          getOutline() {\n            return this._transport.getOutline();\n          }\n          getOptionalContentConfig() {\n            return this._transport.getOptionalContentConfig();\n          }\n          getPermissions() {\n            return this._transport.getPermissions();\n          }\n          getMetadata() {\n            return this._transport.getMetadata();\n          }\n          getMarkInfo() {\n            return this._transport.getMarkInfo();\n          }\n          getData() {\n            return this._transport.getData();\n          }\n          saveDocument() {\n            return this._transport.saveDocument();\n          }\n          getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n          cleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n          }\n          destroy() {\n            return this.loadingTask.destroy();\n          }\n          get loadingParams() {\n            return this._transport.loadingParams;\n          }\n          get loadingTask() {\n            return this._transport.loadingTask;\n          }\n          getFieldObjects() {\n            return this._transport.getFieldObjects();\n          }\n          hasJSActions() {\n            return this._transport.hasJSActions();\n          }\n          getCalculationOrderIds() {\n            return this._transport.getCalculationOrderIds();\n          }\n        }\n        exports.PDFDocumentProxy = PDFDocumentProxy;\n        class PDFPageProxy {\n          #delayedCleanupTimeout = null;\n          #pendingCleanup = false;\n          constructor(pageIndex, pageInfo, transport) {\n            let pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            this._pageIndex = pageIndex;\n            this._pageInfo = pageInfo;\n            this._transport = transport;\n            this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n            this._pdfBug = pdfBug;\n            this.commonObjs = transport.commonObjs;\n            this.objs = new PDFObjects();\n            this._maybeCleanupAfterRender = false;\n            this._intentStates = new Map();\n            this.destroyed = false;\n          }\n          get pageNumber() {\n            return this._pageIndex + 1;\n          }\n          get rotate() {\n            return this._pageInfo.rotate;\n          }\n          get ref() {\n            return this._pageInfo.ref;\n          }\n          get userUnit() {\n            return this._pageInfo.userUnit;\n          }\n          get view() {\n            return this._pageInfo.view;\n          }\n          getViewport() {\n            let {\n              scale,\n              rotation = this.rotate,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n          getAnnotations() {\n            let {\n              intent = \"display\"\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const intentArgs = this._transport.getRenderingIntent(intent);\n            return this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n          }\n          getJSActions() {\n            return this._transport.getPageJSActions(this._pageIndex);\n          }\n          get filterFactory() {\n            return this._transport.filterFactory;\n          }\n          get isPureXfa() {\n            return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n          }\n          async getXfa() {\n            return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n          }\n          render(_ref2) {\n            let {\n              canvasContext,\n              viewport,\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              transform = null,\n              background = null,\n              optionalContentConfigPromise = null,\n              annotationCanvasMap = null,\n              pageColors = null,\n              printAnnotationStorage = null\n            } = _ref2;\n            this._stats?.time(\"Overall\");\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n            this.#pendingCleanup = false;\n            this.#abortDelayedCleanup();\n            if (!optionalContentConfigPromise) {\n              optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n            }\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n            if (!intentState) {\n              intentState = Object.create(null);\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = new _util.PromiseCapability();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              this._stats?.time(\"Page Request\");\n              this._pumpOperatorList(intentArgs);\n            }\n            const complete = error => {\n              intentState.renderTasks.delete(internalRenderTask);\n              if (this._maybeCleanupAfterRender || intentPrint) {\n                this.#pendingCleanup = true;\n              }\n              this.#tryCleanup(!intentPrint);\n              if (error) {\n                internalRenderTask.capability.reject(error);\n                this._abortOperatorList({\n                  intentState,\n                  reason: error instanceof Error ? error : new Error(error)\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n              this._stats?.timeEnd(\"Rendering\");\n              this._stats?.timeEnd(\"Overall\");\n            };\n            const internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext,\n                viewport,\n                transform,\n                background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              annotationCanvasMap,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: this._transport.canvasFactory,\n              filterFactory: this._transport.filterFactory,\n              useRequestAnimationFrame: !intentPrint,\n              pdfBug: this._pdfBug,\n              pageColors\n            });\n            (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n            const renderTask = internalRenderTask.task;\n            Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(_ref3 => {\n              let [transparency, optionalContentConfig] = _ref3;\n              if (this.destroyed) {\n                complete();\n                return;\n              }\n              this._stats?.time(\"Rendering\");\n              internalRenderTask.initializeGraphics({\n                transparency,\n                optionalContentConfig\n              });\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n          getOperatorList() {\n            let {\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              printAnnotationStorage = null\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                intentState.renderTasks.delete(opListTask);\n              }\n            }\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n            if (!intentState) {\n              intentState = Object.create(null);\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n            let opListTask;\n            if (!intentState.opListReadCapability) {\n              opListTask = Object.create(null);\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = new _util.PromiseCapability();\n              (intentState.renderTasks ||= new Set()).add(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              this._stats?.time(\"Page Request\");\n              this._pumpOperatorList(intentArgs);\n            }\n            return intentState.opListReadCapability.promise;\n          }\n          streamTextContent() {\n            let {\n              includeMarkedContent = false,\n              disableNormalization = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              includeMarkedContent: includeMarkedContent === true,\n              disableNormalization: disableNormalization === true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n              size(textContent) {\n                return textContent.items.length;\n              }\n            });\n          }\n          getTextContent() {\n            let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            if (this._transport._htmlForXfa) {\n              return this.getXfa().then(xfa => {\n                return _xfa_text.XfaText.textContent(xfa);\n              });\n            }\n            const readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref4) {\n                  let {\n                    value,\n                    done\n                  } = _ref4;\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n                  Object.assign(textContent.styles, value.styles);\n                  textContent.items.push(...value.items);\n                  pump();\n                }, reject);\n              }\n              const reader = readableStream.getReader();\n              const textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n          getStructTree() {\n            return this._transport.getStructTree(this._pageIndex);\n          }\n          _destroy() {\n            this.destroyed = true;\n            const waitOn = [];\n            for (const intentState of this._intentStates.values()) {\n              this._abortOperatorList({\n                intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n              if (intentState.opListReadCapability) {\n                continue;\n              }\n              for (const internalRenderTask of intentState.renderTasks) {\n                waitOn.push(internalRenderTask.completed);\n                internalRenderTask.cancel();\n              }\n            }\n            this.objs.clear();\n            this.#pendingCleanup = false;\n            this.#abortDelayedCleanup();\n            return Promise.all(waitOn);\n          }\n          cleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#pendingCleanup = true;\n            const success = this.#tryCleanup(false);\n            if (resetStats && success) {\n              this._stats &&= new _display_utils.StatTimer();\n            }\n            return success;\n          }\n          #tryCleanup() {\n            let delayed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#abortDelayedCleanup();\n            if (!this.#pendingCleanup || this.destroyed) {\n              return false;\n            }\n            if (delayed) {\n              this.#delayedCleanupTimeout = setTimeout(() => {\n                this.#delayedCleanupTimeout = null;\n                this.#tryCleanup(false);\n              }, DELAYED_CLEANUP_TIMEOUT);\n              return false;\n            }\n            for (const {\n              renderTasks,\n              operatorList\n            } of this._intentStates.values()) {\n              if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                return false;\n              }\n            }\n            this._intentStates.clear();\n            this.objs.clear();\n            this.#pendingCleanup = false;\n            return true;\n          }\n          #abortDelayedCleanup() {\n            if (this.#delayedCleanupTimeout) {\n              clearTimeout(this.#delayedCleanupTimeout);\n              this.#delayedCleanupTimeout = null;\n            }\n          }\n          _startRenderPage(transparency, cacheKey) {\n            const intentState = this._intentStates.get(cacheKey);\n            if (!intentState) {\n              return;\n            }\n            this._stats?.timeEnd(\"Page Request\");\n            intentState.displayReadyCapability?.resolve(transparency);\n          }\n          _renderPageChunk(operatorListChunk, intentState) {\n            for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n            intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            if (operatorListChunk.lastChunk) {\n              this.#tryCleanup(true);\n            }\n          }\n          _pumpOperatorList(_ref5) {\n            let {\n              renderingIntent,\n              cacheKey,\n              annotationStorageSerializable\n            } = _ref5;\n            const {\n              map,\n              transfers\n            } = annotationStorageSerializable;\n            const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              cacheKey,\n              annotationStorage: map\n            }, transfers);\n            const reader = readableStream.getReader();\n            const intentState = this._intentStates.get(cacheKey);\n            intentState.streamReader = reader;\n            const pump = () => {\n              reader.read().then(_ref6 => {\n                let {\n                  value,\n                  done\n                } = _ref6;\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n                if (this._transport.destroyed) {\n                  return;\n                }\n                this._renderPageChunk(value, intentState);\n                pump();\n              }, reason => {\n                intentState.streamReader = null;\n                if (this._transport.destroyed) {\n                  return;\n                }\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n                  for (const internalRenderTask of intentState.renderTasks) {\n                    internalRenderTask.operatorListChanged();\n                  }\n                  this.#tryCleanup(true);\n                }\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n            pump();\n          }\n          _abortOperatorList(_ref7) {\n            let {\n              intentState,\n              reason,\n              force = false\n            } = _ref7;\n            if (!intentState.streamReader) {\n              return;\n            }\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            if (!force) {\n              if (intentState.renderTasks.size > 0) {\n                return;\n              }\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                let delay = RENDERING_CANCELLED_TIMEOUT;\n                if (reason.extraDelay > 0 && reason.extraDelay < 1000) {\n                  delay += reason.extraDelay;\n                }\n                intentState.streamReaderCancelTimeout = setTimeout(() => {\n                  intentState.streamReaderCancelTimeout = null;\n                  this._abortOperatorList({\n                    intentState,\n                    reason,\n                    force: true\n                  });\n                }, delay);\n                return;\n              }\n            }\n            intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            for (const [curCacheKey, curIntentState] of this._intentStates) {\n              if (curIntentState === intentState) {\n                this._intentStates.delete(curCacheKey);\n                break;\n              }\n            }\n            this.cleanup();\n          }\n          get stats() {\n            return this._stats;\n          }\n        }\n        exports.PDFPageProxy = PDFPageProxy;\n        class LoopbackPort {\n          #listeners = new Set();\n          #deferred = Promise.resolve();\n          postMessage(obj, transfer) {\n            const event = {\n              data: structuredClone(obj, transfer ? {\n                transfer\n              } : null)\n            };\n            this.#deferred.then(() => {\n              for (const listener of this.#listeners) {\n                listener.call(this, event);\n              }\n            });\n          }\n          addEventListener(name, listener) {\n            this.#listeners.add(listener);\n          }\n          removeEventListener(name, listener) {\n            this.#listeners.delete(listener);\n          }\n          terminate() {\n            this.#listeners.clear();\n          }\n        }\n        exports.LoopbackPort = LoopbackPort;\n        const PDFWorkerUtil = {\n          isWorkerDisabled: false,\n          fallbackWorkerSrc: null,\n          fakeWorkerId: 0\n        };\n        exports.PDFWorkerUtil = PDFWorkerUtil;\n        {\n          if (_util.isNodeJS && typeof require === \"function\") {\n            PDFWorkerUtil.isWorkerDisabled = true;\n            PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n          } else if (typeof document === \"object\") {\n            const pdfjsFilePath = document?.currentScript?.src;\n            if (pdfjsFilePath) {\n              PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n            }\n          }\n          PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n            let base;\n            try {\n              base = new URL(baseUrl);\n              if (!base.origin || base.origin === \"null\") {\n                return false;\n              }\n            } catch {\n              return false;\n            }\n            const other = new URL(otherUrl, base);\n            return base.origin === other.origin;\n          };\n          PDFWorkerUtil.createCDNWrapper = function (url) {\n            const wrapper = `importScripts(\"${url}\");`;\n            return URL.createObjectURL(new Blob([wrapper]));\n          };\n        }\n        class PDFWorker {\n          static #workerPorts;\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            this.name = name;\n            this.destroyed = false;\n            this.verbosity = verbosity;\n            this._readyCapability = new _util.PromiseCapability();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n            if (port) {\n              if (PDFWorker.#workerPorts?.has(port)) {\n                throw new Error(\"Cannot use more than one PDFWorker per port.\");\n              }\n              (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n              this._initializeFromPort(port);\n              return;\n            }\n            this._initialize();\n          }\n          get promise() {\n            return this._readyCapability.promise;\n          }\n          get port() {\n            return this._port;\n          }\n          get messageHandler() {\n            return this._messageHandler;\n          }\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n            this._messageHandler.on(\"ready\", function () {});\n            this._readyCapability.resolve();\n            this._messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          }\n          _initialize() {\n            if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n              let {\n                workerSrc\n              } = PDFWorker;\n              try {\n                if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n                  workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n                    this._readyCapability.resolve();\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  try {\n                    sendTest();\n                  } catch {\n                    this._setupFakeWorker();\n                  }\n                });\n                const sendTest = () => {\n                  const testObj = new Uint8Array();\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                };\n                sendTest();\n                return;\n              } catch {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n            this._setupFakeWorker();\n          }\n          _setupFakeWorker() {\n            if (!PDFWorkerUtil.isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              PDFWorkerUtil.isWorkerDisabled = true;\n            }\n            PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                return;\n              }\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n              this._readyCapability.resolve();\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n          destroy() {\n            this.destroyed = true;\n            if (this._webWorker) {\n              this._webWorker.terminate();\n              this._webWorker = null;\n            }\n            PDFWorker.#workerPorts?.delete(this._port);\n            this._port = null;\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n              this._messageHandler = null;\n            }\n          }\n          static fromPort(params) {\n            if (!params?.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n            const cachedPort = this.#workerPorts?.get(params.port);\n            if (cachedPort) {\n              if (cachedPort._pendingDestroy) {\n                throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\n\" + \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n              }\n              return cachedPort;\n            }\n            return new PDFWorker(params);\n          }\n          static get workerSrc() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n            if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n              if (!_util.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n              return PDFWorkerUtil.fallbackWorkerSrc;\n            }\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n          static get _mainThreadWorkerMessageHandler() {\n            try {\n              return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n            } catch {\n              return null;\n            }\n          }\n          static get _setupFakeWorkerGlobal() {\n            const loader = async () => {\n              const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n              if (mainWorkerMessageHandler) {\n                return mainWorkerMessageHandler;\n              }\n              if (_util.isNodeJS && typeof require === \"function\") {\n                const worker = eval(\"require\")(this.workerSrc);\n                return worker.WorkerMessageHandler;\n              }\n              await (0, _display_utils.loadScript)(this.workerSrc);\n              return window.pdfjsWorker.WorkerMessageHandler;\n            };\n            return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n          }\n        }\n        exports.PDFWorker = PDFWorker;\n        class WorkerTransport {\n          #methodPromises = new Map();\n          #pageCache = new Map();\n          #pagePromises = new Map();\n          #passwordCapability = null;\n          constructor(messageHandler, loadingTask, networkStream, params, factory) {\n            this.messageHandler = messageHandler;\n            this.loadingTask = loadingTask;\n            this.commonObjs = new PDFObjects();\n            this.fontLoader = new _font_loader.FontLoader({\n              ownerDocument: params.ownerDocument,\n              styleElement: params.styleElement\n            });\n            this._params = params;\n            this.canvasFactory = factory.canvasFactory;\n            this.filterFactory = factory.filterFactory;\n            this.cMapReaderFactory = factory.cMapReaderFactory;\n            this.standardFontDataFactory = factory.standardFontDataFactory;\n            this.destroyed = false;\n            this.destroyCapability = null;\n            this._networkStream = networkStream;\n            this._fullReader = null;\n            this._lastProgress = null;\n            this.downloadInfoCapability = new _util.PromiseCapability();\n            this.setupMessageHandler();\n          }\n          #cacheSimpleMethod(name) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const cachedPromise = this.#methodPromises.get(name);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            const promise = this.messageHandler.sendWithPromise(name, data);\n            this.#methodPromises.set(name, promise);\n            return promise;\n          }\n          get annotationStorage() {\n            return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n          }\n          getRenderingIntent(intent) {\n            let annotationMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;\n            let printAnnotationStorage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            let isOpList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n            let annotationStorageSerializable = _annotation_storage.SerializableEmpty;\n            switch (intent) {\n              case \"any\":\n                renderingIntent = _util.RenderingIntentFlag.ANY;\n                break;\n              case \"display\":\n                break;\n              case \"print\":\n                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                break;\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n            }\n            switch (annotationMode) {\n              case _util.AnnotationMode.DISABLE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                break;\n              case _util.AnnotationMode.ENABLE:\n                break;\n              case _util.AnnotationMode.ENABLE_FORMS:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                break;\n              case _util.AnnotationMode.ENABLE_STORAGE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                const annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n                annotationStorageSerializable = annotationStorage.serializable;\n                break;\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n            }\n            if (isOpList) {\n              renderingIntent += _util.RenderingIntentFlag.OPLIST;\n            }\n            return {\n              renderingIntent,\n              cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n              annotationStorageSerializable\n            };\n          }\n          destroy() {\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n            this.destroyed = true;\n            this.destroyCapability = new _util.PromiseCapability();\n            this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            const waitOn = [];\n            for (const page of this.#pageCache.values()) {\n              waitOn.push(page._destroy());\n            }\n            this.#pageCache.clear();\n            this.#pagePromises.clear();\n            if (this.hasOwnProperty(\"annotationStorage\")) {\n              this.annotationStorage.resetModified();\n            }\n            const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(() => {\n              this.commonObjs.clear();\n              this.fontLoader.clear();\n              this.#methodPromises.clear();\n              this.filterFactory.destroy();\n              this._networkStream?.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              if (this.messageHandler) {\n                this.messageHandler.destroy();\n                this.messageHandler = null;\n              }\n              this.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n          setupMessageHandler() {\n            const {\n              messageHandler,\n              loadingTask\n            } = this;\n            messageHandler.on(\"GetReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              this._fullReader = this._networkStream.getFullReader();\n              this._fullReader.onProgress = evt => {\n                this._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n              sink.onPull = () => {\n                this._fullReader.read().then(function (_ref8) {\n                  let {\n                    value,\n                    done\n                  } = _ref8;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = reason => {\n                this._fullReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", data => {\n              const headersCapability = new _util.PromiseCapability();\n              const fullReader = this._fullReader;\n              fullReader.headersReady.then(() => {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (this._lastProgress) {\n                    loadingTask.onProgress?.(this._lastProgress);\n                  }\n                  fullReader.onProgress = evt => {\n                    loadingTask.onProgress?.({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  };\n                }\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n              const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n              sink.onPull = () => {\n                rangeReader.read().then(function (_ref9) {\n                  let {\n                    value,\n                    done\n                  } = _ref9;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = reason => {\n                rangeReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"GetDoc\", _ref10 => {\n              let {\n                pdfInfo\n              } = _ref10;\n              this._numPages = pdfInfo.numPages;\n              this._htmlForXfa = pdfInfo.htmlForXfa;\n              delete pdfInfo.htmlForXfa;\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              let reason;\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n                default:\n                  (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n              }\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", exception => {\n              this.#passwordCapability = new _util.PromiseCapability();\n              if (loadingTask.onPassword) {\n                const updatePassword = password => {\n                  if (password instanceof Error) {\n                    this.#passwordCapability.reject(password);\n                  } else {\n                    this.#passwordCapability.resolve({\n                      password\n                    });\n                  }\n                };\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  this.#passwordCapability.reject(ex);\n                }\n              } else {\n                this.#passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n              return this.#passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", data => {\n              loadingTask.onProgress?.({\n                loaded: data.length,\n                total: data.length\n              });\n              this.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", data => {\n              if (this.destroyed) {\n                return;\n              }\n              const page = this.#pageCache.get(data.pageIndex);\n              page._startRenderPage(data.transparency, data.cacheKey);\n            });\n            messageHandler.on(\"commonobj\", _ref11 => {\n              let [id, type, exportedData] = _ref11;\n              if (this.destroyed) {\n                return;\n              }\n              if (this.commonObjs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Font\":\n                  const params = this._params;\n                  if (\"error\" in exportedData) {\n                    const exportedError = exportedData.error;\n                    (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                    this.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n                  const inspectFont = params.pdfBug && globalThis.FontInspector?.enabled ? (font, url) => globalThis.FontInspector.fontAdded(font, url) : null;\n                  const font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    inspectFont\n                  });\n                  this.fontLoader.bind(font).catch(reason => {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id\n                    });\n                  }).finally(() => {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n                    this.commonObjs.resolve(id, font);\n                  });\n                  break;\n                case \"FontPath\":\n                case \"Image\":\n                case \"Pattern\":\n                  this.commonObjs.resolve(id, exportedData);\n                  break;\n                default:\n                  throw new Error(`Got unknown common object type ${type}`);\n              }\n            });\n            messageHandler.on(\"obj\", _ref12 => {\n              let [id, pageIndex, type, imageData] = _ref12;\n              if (this.destroyed) {\n                return;\n              }\n              const pageProxy = this.#pageCache.get(pageIndex);\n              if (pageProxy.objs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  if (imageData) {\n                    let length;\n                    if (imageData.bitmap) {\n                      const {\n                        width,\n                        height\n                      } = imageData;\n                      length = width * height * 4;\n                    } else {\n                      length = imageData.data?.length || 0;\n                    }\n                    if (length > _util.MAX_IMAGE_SIZE_TO_CACHE) {\n                      pageProxy._maybeCleanupAfterRender = true;\n                    }\n                  }\n                  break;\n                case \"Pattern\":\n                  pageProxy.objs.resolve(id, imageData);\n                  break;\n                default:\n                  throw new Error(`Got unknown object type ${type}`);\n              }\n            });\n            messageHandler.on(\"DocProgress\", data => {\n              if (this.destroyed) {\n                return;\n              }\n              loadingTask.onProgress?.({\n                loaded: data.loaded,\n                total: data.total\n              });\n            });\n            messageHandler.on(\"FetchBuiltInCMap\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n              if (!this.cMapReaderFactory) {\n                return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n              return this.cMapReaderFactory.fetch(data);\n            });\n            messageHandler.on(\"FetchStandardFontData\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n              if (!this.standardFontDataFactory) {\n                return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n              return this.standardFontDataFactory.fetch(data);\n            });\n          }\n          getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n          saveDocument() {\n            if (this.annotationStorage.size <= 0) {\n              (0, _util.warn)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n            }\n            const {\n              map,\n              transfers\n            } = this.annotationStorage.serializable;\n            return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n              isPureXfa: !!this._htmlForXfa,\n              numPages: this._numPages,\n              annotationStorage: map,\n              filename: this._fullReader?.filename ?? null\n            }, transfers).finally(() => {\n              this.annotationStorage.resetModified();\n            });\n          }\n          getPage(pageNumber) {\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request.\"));\n            }\n            const pageIndex = pageNumber - 1,\n              cachedPromise = this.#pagePromises.get(pageIndex);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex\n            }).then(pageInfo => {\n              if (this.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n              const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n              this.#pageCache.set(pageIndex, page);\n              return page;\n            });\n            this.#pagePromises.set(pageIndex, promise);\n            return promise;\n          }\n          getPageIndex(ref) {\n            if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n              return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              num: ref.num,\n              gen: ref.gen\n            });\n          }\n          getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex,\n              intent\n            });\n          }\n          getFieldObjects() {\n            return this.#cacheSimpleMethod(\"GetFieldObjects\");\n          }\n          hasJSActions() {\n            return this.#cacheSimpleMethod(\"HasJSActions\");\n          }\n          getCalculationOrderIds() {\n            return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n          }\n          getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n          getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id\n            });\n          }\n          getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n          getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n          getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n          getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n          getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n          getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n          getDocJSActions() {\n            return this.#cacheSimpleMethod(\"GetDocJSActions\");\n          }\n          getPageJSActions(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n              pageIndex\n            });\n          }\n          getStructTree(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n              pageIndex\n            });\n          }\n          getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n          getOptionalContentConfig() {\n            return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n              return new _optional_content_config.OptionalContentConfig(results);\n            });\n          }\n          getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n          getMetadata() {\n            const name = \"GetMetadata\",\n              cachedPromise = this.#methodPromises.get(name);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            const promise = this.messageHandler.sendWithPromise(name, null).then(results => {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: this._fullReader?.filename ?? null,\n                contentLength: this._fullReader?.contentLength ?? null\n              };\n            });\n            this.#methodPromises.set(name, promise);\n            return promise;\n          }\n          getMarkInfo() {\n            return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n          }\n          async startCleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.destroyed) {\n              return;\n            }\n            await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n            for (const page of this.#pageCache.values()) {\n              const cleanupSuccessful = page.cleanup();\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n              }\n            }\n            this.commonObjs.clear();\n            if (!keepLoadedFonts) {\n              this.fontLoader.clear();\n            }\n            this.#methodPromises.clear();\n            this.filterFactory.destroy(true);\n          }\n          get loadingParams() {\n            const {\n              disableAutoFetch,\n              enableXfa\n            } = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch,\n              enableXfa\n            });\n          }\n        }\n        class PDFObjects {\n          #objs = Object.create(null);\n          #ensureObj(objId) {\n            return this.#objs[objId] ||= {\n              capability: new _util.PromiseCapability(),\n              data: null\n            };\n          }\n          get(objId) {\n            let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (callback) {\n              const obj = this.#ensureObj(objId);\n              obj.capability.promise.then(() => callback(obj.data));\n              return null;\n            }\n            const obj = this.#objs[objId];\n            if (!obj?.capability.settled) {\n              throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n            }\n            return obj.data;\n          }\n          has(objId) {\n            const obj = this.#objs[objId];\n            return obj?.capability.settled || false;\n          }\n          resolve(objId) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const obj = this.#ensureObj(objId);\n            obj.data = data;\n            obj.capability.resolve();\n          }\n          clear() {\n            for (const objId in this.#objs) {\n              const {\n                data\n              } = this.#objs[objId];\n              data?.bitmap?.close();\n            }\n            this.#objs = Object.create(null);\n          }\n        }\n        class RenderTask {\n          #internalRenderTask = null;\n          constructor(internalRenderTask) {\n            this.#internalRenderTask = internalRenderTask;\n            this.onContinue = null;\n          }\n          get promise() {\n            return this.#internalRenderTask.capability.promise;\n          }\n          cancel() {\n            let extraDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            this.#internalRenderTask.cancel(null, extraDelay);\n          }\n          get separateAnnots() {\n            const {\n              separateAnnots\n            } = this.#internalRenderTask.operatorList;\n            if (!separateAnnots) {\n              return false;\n            }\n            const {\n              annotationCanvasMap\n            } = this.#internalRenderTask;\n            return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n          }\n        }\n        exports.RenderTask = RenderTask;\n        class InternalRenderTask {\n          static #canvasInUse = new WeakSet();\n          constructor(_ref13) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              annotationCanvasMap,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              filterFactory,\n              useRequestAnimationFrame = false,\n              pdfBug = false,\n              pageColors = null\n            } = _ref13;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.filterFactory = filterFactory;\n            this._pdfBug = pdfBug;\n            this.pageColors = pageColors;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = new _util.PromiseCapability();\n            this.task = new RenderTask(this);\n            this._cancelBound = this.cancel.bind(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n          get completed() {\n            return this.capability.promise.catch(function () {});\n          }\n          initializeGraphics(_ref14) {\n            let {\n              transparency = false,\n              optionalContentConfig\n            } = _ref14;\n            if (this.cancelled) {\n              return;\n            }\n            if (this._canvas) {\n              if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n              InternalRenderTask.#canvasInUse.add(this._canvas);\n            }\n            if (this._pdfBug && globalThis.StepperManager?.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n              optionalContentConfig\n            }, this.annotationCanvasMap, this.pageColors);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n            this.graphicsReadyCallback?.();\n          }\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            let extraDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            this.running = false;\n            this.cancelled = true;\n            this.gfx?.endDrawing();\n            InternalRenderTask.#canvasInUse.delete(this._canvas);\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay));\n          }\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              this.graphicsReadyCallback ||= this._continueBound;\n              return;\n            }\n            this.stepper?.updateOperatorList(this.operatorList);\n            if (this.running) {\n              return;\n            }\n            this._continue();\n          }\n          _continue() {\n            this.running = true;\n            if (this.cancelled) {\n              return;\n            }\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this._cancelBound);\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n            }\n          }\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n                InternalRenderTask.#canvasInUse.delete(this._canvas);\n                this.callback();\n              }\n            }\n          }\n        }\n        const version = '3.11.174';\n        exports.version = version;\n        const build = 'ce8716743';\n        exports.build = build;\n\n        /***/\n      }, /* 3 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SerializableEmpty = exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _murmurhash = __w_pdfjs_require__(8);\n        const SerializableEmpty = Object.freeze({\n          map: null,\n          hash: \"\",\n          transfers: undefined\n        });\n        exports.SerializableEmpty = SerializableEmpty;\n        class AnnotationStorage {\n          #modified = false;\n          #storage = new Map();\n          constructor() {\n            this.onSetModified = null;\n            this.onResetModified = null;\n            this.onAnnotationEditor = null;\n          }\n          getValue(key, defaultValue) {\n            const value = this.#storage.get(key);\n            if (value === undefined) {\n              return defaultValue;\n            }\n            return Object.assign(defaultValue, value);\n          }\n          getRawValue(key) {\n            return this.#storage.get(key);\n          }\n          remove(key) {\n            this.#storage.delete(key);\n            if (this.#storage.size === 0) {\n              this.resetModified();\n            }\n            if (typeof this.onAnnotationEditor === \"function\") {\n              for (const value of this.#storage.values()) {\n                if (value instanceof _editor.AnnotationEditor) {\n                  return;\n                }\n              }\n              this.onAnnotationEditor(null);\n            }\n          }\n          setValue(key, value) {\n            const obj = this.#storage.get(key);\n            let modified = false;\n            if (obj !== undefined) {\n              for (const [entry, val] of Object.entries(value)) {\n                if (obj[entry] !== val) {\n                  modified = true;\n                  obj[entry] = val;\n                }\n              }\n            } else {\n              modified = true;\n              this.#storage.set(key, value);\n            }\n            if (modified) {\n              this.#setModified();\n            }\n            if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") {\n              this.onAnnotationEditor(value.constructor._type);\n            }\n          }\n          has(key) {\n            return this.#storage.has(key);\n          }\n          getAll() {\n            return this.#storage.size > 0 ? (0, _util.objectFromMap)(this.#storage) : null;\n          }\n          setAll(obj) {\n            for (const [key, val] of Object.entries(obj)) {\n              this.setValue(key, val);\n            }\n          }\n          get size() {\n            return this.#storage.size;\n          }\n          #setModified() {\n            if (!this.#modified) {\n              this.#modified = true;\n              if (typeof this.onSetModified === \"function\") {\n                this.onSetModified();\n              }\n            }\n          }\n          resetModified() {\n            if (this.#modified) {\n              this.#modified = false;\n              if (typeof this.onResetModified === \"function\") {\n                this.onResetModified();\n              }\n            }\n          }\n          get print() {\n            return new PrintAnnotationStorage(this);\n          }\n          get serializable() {\n            if (this.#storage.size === 0) {\n              return SerializableEmpty;\n            }\n            const map = new Map(),\n              hash = new _murmurhash.MurmurHash3_64(),\n              transfers = [];\n            const context = Object.create(null);\n            let hasBitmap = false;\n            for (const [key, val] of this.#storage) {\n              const serialized = val instanceof _editor.AnnotationEditor ? val.serialize(false, context) : val;\n              if (serialized) {\n                map.set(key, serialized);\n                hash.update(`${key}:${JSON.stringify(serialized)}`);\n                hasBitmap ||= !!serialized.bitmap;\n              }\n            }\n            if (hasBitmap) {\n              for (const value of map.values()) {\n                if (value.bitmap) {\n                  transfers.push(value.bitmap);\n                }\n              }\n            }\n            return map.size > 0 ? {\n              map,\n              hash: hash.hexdigest(),\n              transfers\n            } : SerializableEmpty;\n          }\n        }\n        exports.AnnotationStorage = AnnotationStorage;\n        class PrintAnnotationStorage extends AnnotationStorage {\n          #serializable;\n          constructor(parent) {\n            super();\n            const {\n              map,\n              hash,\n              transfers\n            } = parent.serializable;\n            const clone = structuredClone(map, transfers ? {\n              transfer: transfers\n            } : null);\n            this.#serializable = {\n              map: clone,\n              hash,\n              transfers\n            };\n          }\n          get print() {\n            (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n          }\n          get serializable() {\n            return this.#serializable;\n          }\n        }\n        exports.PrintAnnotationStorage = PrintAnnotationStorage;\n\n        /***/\n      }, /* 4 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationEditor = void 0;\n        var _tools = __w_pdfjs_require__(5);\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        class AnnotationEditor {\n          #altText = \"\";\n          #altTextDecorative = false;\n          #altTextButton = null;\n          #altTextTooltip = null;\n          #altTextTooltipTimeout = null;\n          #keepAspectRatio = false;\n          #resizersDiv = null;\n          #boundFocusin = this.focusin.bind(this);\n          #boundFocusout = this.focusout.bind(this);\n          #hasBeenClicked = false;\n          #isEditing = false;\n          #isInEditMode = false;\n          _initialOptions = Object.create(null);\n          _uiManager = null;\n          _focusEventsAllowed = true;\n          _l10nPromise = null;\n          #isDraggable = false;\n          #zIndex = AnnotationEditor._zIndex++;\n          static _borderLineWidth = -1;\n          static _colorManager = new _tools.ColorManager();\n          static _zIndex = 1;\n          static SMALL_EDITOR_SIZE = 0;\n          constructor(parameters) {\n            if (this.constructor === AnnotationEditor) {\n              (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n            }\n            this.parent = parameters.parent;\n            this.id = parameters.id;\n            this.width = this.height = null;\n            this.pageIndex = parameters.parent.pageIndex;\n            this.name = parameters.name;\n            this.div = null;\n            this._uiManager = parameters.uiManager;\n            this.annotationElementId = null;\n            this._willKeepAspectRatio = false;\n            this._initialOptions.isCentered = parameters.isCentered;\n            this._structTreeParentId = null;\n            const {\n              rotation,\n              rawDims: {\n                pageWidth,\n                pageHeight,\n                pageX,\n                pageY\n              }\n            } = this.parent.viewport;\n            this.rotation = rotation;\n            this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n            this.pageDimensions = [pageWidth, pageHeight];\n            this.pageTranslation = [pageX, pageY];\n            const [width, height] = this.parentDimensions;\n            this.x = parameters.x / width;\n            this.y = parameters.y / height;\n            this.isAttachedToDOM = false;\n            this.deleted = false;\n          }\n          get editorType() {\n            return Object.getPrototypeOf(this).constructor._type;\n          }\n          static get _defaultLineColor() {\n            return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n          }\n          static deleteAnnotationElement(editor) {\n            const fakeEditor = new FakeEditor({\n              id: editor.parent.getNextId(),\n              parent: editor.parent,\n              uiManager: editor._uiManager\n            });\n            fakeEditor.annotationElementId = editor.annotationElementId;\n            fakeEditor.deleted = true;\n            fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n          }\n          static initialize(l10n) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            AnnotationEditor._l10nPromise ||= new Map([\"editor_alt_text_button_label\", \"editor_alt_text_edit_button_label\", \"editor_alt_text_decorative_tooltip\"].map(str => [str, l10n.get(str)]));\n            if (options?.strings) {\n              for (const str of options.strings) {\n                AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n              }\n            }\n            if (AnnotationEditor._borderLineWidth !== -1) {\n              return;\n            }\n            const style = getComputedStyle(document.documentElement);\n            AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n          }\n          static updateDefaultParams(_type, _value) {}\n          static get defaultPropertiesToUpdate() {\n            return [];\n          }\n          static isHandlingMimeForPasting(mime) {\n            return false;\n          }\n          static paste(item, parent) {\n            (0, _util.unreachable)(\"Not implemented\");\n          }\n          get propertiesToUpdate() {\n            return [];\n          }\n          get _isDraggable() {\n            return this.#isDraggable;\n          }\n          set _isDraggable(value) {\n            this.#isDraggable = value;\n            this.div?.classList.toggle(\"draggable\", value);\n          }\n          center() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            switch (this.parentRotation) {\n              case 90:\n                this.x -= this.height * pageHeight / (pageWidth * 2);\n                this.y += this.width * pageWidth / (pageHeight * 2);\n                break;\n              case 180:\n                this.x += this.width / 2;\n                this.y += this.height / 2;\n                break;\n              case 270:\n                this.x += this.height * pageHeight / (pageWidth * 2);\n                this.y -= this.width * pageWidth / (pageHeight * 2);\n                break;\n              default:\n                this.x -= this.width / 2;\n                this.y -= this.height / 2;\n                break;\n            }\n            this.fixAndSetPosition();\n          }\n          addCommands(params) {\n            this._uiManager.addCommands(params);\n          }\n          get currentLayer() {\n            return this._uiManager.currentLayer;\n          }\n          setInBackground() {\n            this.div.style.zIndex = 0;\n          }\n          setInForeground() {\n            this.div.style.zIndex = this.#zIndex;\n          }\n          setParent(parent) {\n            if (parent !== null) {\n              this.pageIndex = parent.pageIndex;\n              this.pageDimensions = parent.pageDimensions;\n            }\n            this.parent = parent;\n          }\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            if (!this.#hasBeenClicked) {\n              this.parent.setSelected(this);\n            } else {\n              this.#hasBeenClicked = false;\n            }\n          }\n          focusout(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            if (!this.isAttachedToDOM) {\n              return;\n            }\n            const target = event.relatedTarget;\n            if (target?.closest(`#${this.id}`)) {\n              return;\n            }\n            event.preventDefault();\n            if (!this.parent?.isMultipleSelection) {\n              this.commitOrRemove();\n            }\n          }\n          commitOrRemove() {\n            if (this.isEmpty()) {\n              this.remove();\n            } else {\n              this.commit();\n            }\n          }\n          commit() {\n            this.addToAnnotationStorage();\n          }\n          addToAnnotationStorage() {\n            this._uiManager.addToAnnotationStorage(this);\n          }\n          setAt(x, y, tx, ty) {\n            const [width, height] = this.parentDimensions;\n            [tx, ty] = this.screenToPageTranslation(tx, ty);\n            this.x = (x + tx) / width;\n            this.y = (y + ty) / height;\n            this.fixAndSetPosition();\n          }\n          #translate(_ref15, x, y) {\n            let [width, height] = _ref15;\n            [x, y] = this.screenToPageTranslation(x, y);\n            this.x += x / width;\n            this.y += y / height;\n            this.fixAndSetPosition();\n          }\n          translate(x, y) {\n            this.#translate(this.parentDimensions, x, y);\n          }\n          translateInPage(x, y) {\n            this.#translate(this.pageDimensions, x, y);\n            this.div.scrollIntoView({\n              block: \"nearest\"\n            });\n          }\n          drag(tx, ty) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.x += tx / parentWidth;\n            this.y += ty / parentHeight;\n            if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n              const {\n                x,\n                y\n              } = this.div.getBoundingClientRect();\n              if (this.parent.findNewParent(this, x, y)) {\n                this.x -= Math.floor(this.x);\n                this.y -= Math.floor(this.y);\n              }\n            }\n            let {\n              x,\n              y\n            } = this;\n            const [bx, by] = this.#getBaseTranslation();\n            x += bx;\n            y += by;\n            this.div.style.left = `${(100 * x).toFixed(2)}%`;\n            this.div.style.top = `${(100 * y).toFixed(2)}%`;\n            this.div.scrollIntoView({\n              block: \"nearest\"\n            });\n          }\n          #getBaseTranslation() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const {\n              _borderLineWidth\n            } = AnnotationEditor;\n            const x = _borderLineWidth / parentWidth;\n            const y = _borderLineWidth / parentHeight;\n            switch (this.rotation) {\n              case 90:\n                return [-x, y];\n              case 180:\n                return [x, y];\n              case 270:\n                return [x, -y];\n              default:\n                return [-x, -y];\n            }\n          }\n          fixAndSetPosition() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            let {\n              x,\n              y,\n              width,\n              height\n            } = this;\n            width *= pageWidth;\n            height *= pageHeight;\n            x *= pageWidth;\n            y *= pageHeight;\n            switch (this.rotation) {\n              case 0:\n                x = Math.max(0, Math.min(pageWidth - width, x));\n                y = Math.max(0, Math.min(pageHeight - height, y));\n                break;\n              case 90:\n                x = Math.max(0, Math.min(pageWidth - height, x));\n                y = Math.min(pageHeight, Math.max(width, y));\n                break;\n              case 180:\n                x = Math.min(pageWidth, Math.max(width, x));\n                y = Math.min(pageHeight, Math.max(height, y));\n                break;\n              case 270:\n                x = Math.min(pageWidth, Math.max(height, x));\n                y = Math.max(0, Math.min(pageHeight - width, y));\n                break;\n            }\n            this.x = x /= pageWidth;\n            this.y = y /= pageHeight;\n            const [bx, by] = this.#getBaseTranslation();\n            x += bx;\n            y += by;\n            const {\n              style\n            } = this.div;\n            style.left = `${(100 * x).toFixed(2)}%`;\n            style.top = `${(100 * y).toFixed(2)}%`;\n            this.moveInDOM();\n          }\n          static #rotatePoint(x, y, angle) {\n            switch (angle) {\n              case 90:\n                return [y, -x];\n              case 180:\n                return [-x, -y];\n              case 270:\n                return [-y, x];\n              default:\n                return [x, y];\n            }\n          }\n          screenToPageTranslation(x, y) {\n            return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n          }\n          pageTranslationToScreen(x, y) {\n            return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n          }\n          #getRotationMatrix(rotation) {\n            switch (rotation) {\n              case 90:\n                {\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n                }\n              case 180:\n                return [-1, 0, 0, -1];\n              case 270:\n                {\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n                }\n              default:\n                return [1, 0, 0, 1];\n            }\n          }\n          get parentScale() {\n            return this._uiManager.viewParameters.realScale;\n          }\n          get parentRotation() {\n            return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n          }\n          get parentDimensions() {\n            const {\n              parentScale,\n              pageDimensions: [pageWidth, pageHeight]\n            } = this;\n            const scaledWidth = pageWidth * parentScale;\n            const scaledHeight = pageHeight * parentScale;\n            return _util.FeatureTest.isCSSRoundSupported ? [Math.round(scaledWidth), Math.round(scaledHeight)] : [scaledWidth, scaledHeight];\n          }\n          setDims(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.div.style.width = `${(100 * width / parentWidth).toFixed(2)}%`;\n            if (!this.#keepAspectRatio) {\n              this.div.style.height = `${(100 * height / parentHeight).toFixed(2)}%`;\n            }\n            this.#altTextButton?.classList.toggle(\"small\", width < AnnotationEditor.SMALL_EDITOR_SIZE || height < AnnotationEditor.SMALL_EDITOR_SIZE);\n          }\n          fixDims() {\n            const {\n              style\n            } = this.div;\n            const {\n              height,\n              width\n            } = style;\n            const widthPercent = width.endsWith(\"%\");\n            const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n            if (widthPercent && heightPercent) {\n              return;\n            }\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            if (!widthPercent) {\n              style.width = `${(100 * parseFloat(width) / parentWidth).toFixed(2)}%`;\n            }\n            if (!this.#keepAspectRatio && !heightPercent) {\n              style.height = `${(100 * parseFloat(height) / parentHeight).toFixed(2)}%`;\n            }\n          }\n          getInitialTranslation() {\n            return [0, 0];\n          }\n          #createResizers() {\n            if (this.#resizersDiv) {\n              return;\n            }\n            this.#resizersDiv = document.createElement(\"div\");\n            this.#resizersDiv.classList.add(\"resizers\");\n            const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n            if (!this._willKeepAspectRatio) {\n              classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n            }\n            for (const name of classes) {\n              const div = document.createElement(\"div\");\n              this.#resizersDiv.append(div);\n              div.classList.add(\"resizer\", name);\n              div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name));\n              div.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            }\n            this.div.prepend(this.#resizersDiv);\n          }\n          #resizerPointerdown(name, event) {\n            event.preventDefault();\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n            const savedDraggable = this._isDraggable;\n            this._isDraggable = false;\n            const pointerMoveOptions = {\n              passive: true,\n              capture: true\n            };\n            window.addEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n            const savedX = this.x;\n            const savedY = this.y;\n            const savedWidth = this.width;\n            const savedHeight = this.height;\n            const savedParentCursor = this.parent.div.style.cursor;\n            const savedCursor = this.div.style.cursor;\n            this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n            const pointerUpCallback = () => {\n              this._isDraggable = savedDraggable;\n              window.removeEventListener(\"pointerup\", pointerUpCallback);\n              window.removeEventListener(\"blur\", pointerUpCallback);\n              window.removeEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n              this.parent.div.style.cursor = savedParentCursor;\n              this.div.style.cursor = savedCursor;\n              const newX = this.x;\n              const newY = this.y;\n              const newWidth = this.width;\n              const newHeight = this.height;\n              if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {\n                return;\n              }\n              this.addCommands({\n                cmd: () => {\n                  this.width = newWidth;\n                  this.height = newHeight;\n                  this.x = newX;\n                  this.y = newY;\n                  const [parentWidth, parentHeight] = this.parentDimensions;\n                  this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n                  this.fixAndSetPosition();\n                },\n                undo: () => {\n                  this.width = savedWidth;\n                  this.height = savedHeight;\n                  this.x = savedX;\n                  this.y = savedY;\n                  const [parentWidth, parentHeight] = this.parentDimensions;\n                  this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n                  this.fixAndSetPosition();\n                },\n                mustExec: true\n              });\n            };\n            window.addEventListener(\"pointerup\", pointerUpCallback);\n            window.addEventListener(\"blur\", pointerUpCallback);\n          }\n          #resizerPointermove(name, event) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const savedX = this.x;\n            const savedY = this.y;\n            const savedWidth = this.width;\n            const savedHeight = this.height;\n            const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n            const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n            const round = x => Math.round(x * 10000) / 10000;\n            const rotationMatrix = this.#getRotationMatrix(this.rotation);\n            const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n            const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n            const invTransf = (x, y) => [invRotationMatrix[0] * x + invRotationMatrix[2] * y, invRotationMatrix[1] * x + invRotationMatrix[3] * y];\n            let getPoint;\n            let getOpposite;\n            let isDiagonal = false;\n            let isHorizontal = false;\n            switch (name) {\n              case \"topLeft\":\n                isDiagonal = true;\n                getPoint = (w, h) => [0, 0];\n                getOpposite = (w, h) => [w, h];\n                break;\n              case \"topMiddle\":\n                getPoint = (w, h) => [w / 2, 0];\n                getOpposite = (w, h) => [w / 2, h];\n                break;\n              case \"topRight\":\n                isDiagonal = true;\n                getPoint = (w, h) => [w, 0];\n                getOpposite = (w, h) => [0, h];\n                break;\n              case \"middleRight\":\n                isHorizontal = true;\n                getPoint = (w, h) => [w, h / 2];\n                getOpposite = (w, h) => [0, h / 2];\n                break;\n              case \"bottomRight\":\n                isDiagonal = true;\n                getPoint = (w, h) => [w, h];\n                getOpposite = (w, h) => [0, 0];\n                break;\n              case \"bottomMiddle\":\n                getPoint = (w, h) => [w / 2, h];\n                getOpposite = (w, h) => [w / 2, 0];\n                break;\n              case \"bottomLeft\":\n                isDiagonal = true;\n                getPoint = (w, h) => [0, h];\n                getOpposite = (w, h) => [w, 0];\n                break;\n              case \"middleLeft\":\n                isHorizontal = true;\n                getPoint = (w, h) => [0, h / 2];\n                getOpposite = (w, h) => [w, h / 2];\n                break;\n            }\n            const point = getPoint(savedWidth, savedHeight);\n            const oppositePoint = getOpposite(savedWidth, savedHeight);\n            let transfOppositePoint = transf(...oppositePoint);\n            const oppositeX = round(savedX + transfOppositePoint[0]);\n            const oppositeY = round(savedY + transfOppositePoint[1]);\n            let ratioX = 1;\n            let ratioY = 1;\n            let [deltaX, deltaY] = this.screenToPageTranslation(event.movementX, event.movementY);\n            [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n            if (isDiagonal) {\n              const oldDiag = Math.hypot(savedWidth, savedHeight);\n              ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n            } else if (isHorizontal) {\n              ratioX = Math.max(minWidth, Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))) / savedWidth;\n            } else {\n              ratioY = Math.max(minHeight, Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))) / savedHeight;\n            }\n            const newWidth = round(savedWidth * ratioX);\n            const newHeight = round(savedHeight * ratioY);\n            transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n            const newX = oppositeX - transfOppositePoint[0];\n            const newY = oppositeY - transfOppositePoint[1];\n            this.width = newWidth;\n            this.height = newHeight;\n            this.x = newX;\n            this.y = newY;\n            this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n            this.fixAndSetPosition();\n          }\n          async addAltTextButton() {\n            if (this.#altTextButton) {\n              return;\n            }\n            const altText = this.#altTextButton = document.createElement(\"button\");\n            altText.className = \"altText\";\n            const msg = await AnnotationEditor._l10nPromise.get(\"editor_alt_text_button_label\");\n            altText.textContent = msg;\n            altText.setAttribute(\"aria-label\", msg);\n            altText.tabIndex = \"0\";\n            altText.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n            altText.addEventListener(\"click\", event => {\n              event.preventDefault();\n              this._uiManager.editAltText(this);\n            }, {\n              capture: true\n            });\n            altText.addEventListener(\"keydown\", event => {\n              if (event.target === altText && event.key === \"Enter\") {\n                event.preventDefault();\n                this._uiManager.editAltText(this);\n              }\n            });\n            this.#setAltTextButtonState();\n            this.div.append(altText);\n            if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n              const PERCENT = 40;\n              AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(128, Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100)));\n            }\n          }\n          async #setAltTextButtonState() {\n            const button = this.#altTextButton;\n            if (!button) {\n              return;\n            }\n            if (!this.#altText && !this.#altTextDecorative) {\n              button.classList.remove(\"done\");\n              this.#altTextTooltip?.remove();\n              return;\n            }\n            AnnotationEditor._l10nPromise.get(\"editor_alt_text_edit_button_label\").then(msg => {\n              button.setAttribute(\"aria-label\", msg);\n            });\n            let tooltip = this.#altTextTooltip;\n            if (!tooltip) {\n              this.#altTextTooltip = tooltip = document.createElement(\"span\");\n              tooltip.className = \"tooltip\";\n              tooltip.setAttribute(\"role\", \"tooltip\");\n              const id = tooltip.id = `alt-text-tooltip-${this.id}`;\n              button.setAttribute(\"aria-describedby\", id);\n              const DELAY_TO_SHOW_TOOLTIP = 100;\n              button.addEventListener(\"mouseenter\", () => {\n                this.#altTextTooltipTimeout = setTimeout(() => {\n                  this.#altTextTooltipTimeout = null;\n                  this.#altTextTooltip.classList.add(\"show\");\n                  this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n                    source: this,\n                    details: {\n                      type: \"editing\",\n                      subtype: this.editorType,\n                      data: {\n                        action: \"alt_text_tooltip\"\n                      }\n                    }\n                  });\n                }, DELAY_TO_SHOW_TOOLTIP);\n              });\n              button.addEventListener(\"mouseleave\", () => {\n                clearTimeout(this.#altTextTooltipTimeout);\n                this.#altTextTooltipTimeout = null;\n                this.#altTextTooltip?.classList.remove(\"show\");\n              });\n            }\n            button.classList.add(\"done\");\n            tooltip.innerText = this.#altTextDecorative ? await AnnotationEditor._l10nPromise.get(\"editor_alt_text_decorative_tooltip\") : this.#altText;\n            if (!tooltip.parentNode) {\n              button.append(tooltip);\n            }\n          }\n          getClientDimensions() {\n            return this.div.getBoundingClientRect();\n          }\n          get altTextData() {\n            return {\n              altText: this.#altText,\n              decorative: this.#altTextDecorative\n            };\n          }\n          set altTextData(_ref16) {\n            let {\n              altText,\n              decorative\n            } = _ref16;\n            if (this.#altText === altText && this.#altTextDecorative === decorative) {\n              return;\n            }\n            this.#altText = altText;\n            this.#altTextDecorative = decorative;\n            this.#setAltTextButtonState();\n          }\n          render() {\n            this.div = document.createElement(\"div\");\n            this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n            this.div.className = this.name;\n            this.div.setAttribute(\"id\", this.id);\n            this.div.setAttribute(\"tabIndex\", 0);\n            this.setInForeground();\n            this.div.addEventListener(\"focusin\", this.#boundFocusin);\n            this.div.addEventListener(\"focusout\", this.#boundFocusout);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            if (this.parentRotation % 180 !== 0) {\n              this.div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n              this.div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n            }\n            const [tx, ty] = this.getInitialTranslation();\n            this.translate(tx, ty);\n            (0, _tools.bindEvents)(this, this.div, [\"pointerdown\"]);\n            return this.div;\n          }\n          pointerdown(event) {\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              event.preventDefault();\n              return;\n            }\n            this.#hasBeenClicked = true;\n            this.#setUpDragSession(event);\n          }\n          #setUpDragSession(event) {\n            if (!this._isDraggable) {\n              return;\n            }\n            const isSelected = this._uiManager.isSelected(this);\n            this._uiManager.setUpDragSession();\n            let pointerMoveOptions, pointerMoveCallback;\n            if (isSelected) {\n              pointerMoveOptions = {\n                passive: true,\n                capture: true\n              };\n              pointerMoveCallback = e => {\n                const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n                this._uiManager.dragSelectedEditors(tx, ty);\n              };\n              window.addEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n            }\n            const pointerUpCallback = () => {\n              window.removeEventListener(\"pointerup\", pointerUpCallback);\n              window.removeEventListener(\"blur\", pointerUpCallback);\n              if (isSelected) {\n                window.removeEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n              }\n              this.#hasBeenClicked = false;\n              if (!this._uiManager.endDragSession()) {\n                const {\n                  isMac\n                } = _util.FeatureTest.platform;\n                if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n                  this.parent.toggleSelected(this);\n                } else {\n                  this.parent.setSelected(this);\n                }\n              }\n            };\n            window.addEventListener(\"pointerup\", pointerUpCallback);\n            window.addEventListener(\"blur\", pointerUpCallback);\n          }\n          moveInDOM() {\n            this.parent?.moveEditorInDOM(this);\n          }\n          _setParentAndPosition(parent, x, y) {\n            parent.changeParent(this);\n            this.x = x;\n            this.y = y;\n            this.fixAndSetPosition();\n          }\n          getRect(tx, ty) {\n            const scale = this.parentScale;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const [pageX, pageY] = this.pageTranslation;\n            const shiftX = tx / scale;\n            const shiftY = ty / scale;\n            const x = this.x * pageWidth;\n            const y = this.y * pageHeight;\n            const width = this.width * pageWidth;\n            const height = this.height * pageHeight;\n            switch (this.rotation) {\n              case 0:\n                return [x + shiftX + pageX, pageHeight - y - shiftY - height + pageY, x + shiftX + width + pageX, pageHeight - y - shiftY + pageY];\n              case 90:\n                return [x + shiftY + pageX, pageHeight - y + shiftX + pageY, x + shiftY + height + pageX, pageHeight - y + shiftX + width + pageY];\n              case 180:\n                return [x - shiftX - width + pageX, pageHeight - y + shiftY + pageY, x - shiftX + pageX, pageHeight - y + shiftY + height + pageY];\n              case 270:\n                return [x - shiftY - height + pageX, pageHeight - y - shiftX - width + pageY, x - shiftY + pageX, pageHeight - y - shiftX + pageY];\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n          getRectInCurrentCoords(rect, pageHeight) {\n            const [x1, y1, x2, y2] = rect;\n            const width = x2 - x1;\n            const height = y2 - y1;\n            switch (this.rotation) {\n              case 0:\n                return [x1, pageHeight - y2, width, height];\n              case 90:\n                return [x1, pageHeight - y1, height, width];\n              case 180:\n                return [x2, pageHeight - y1, width, height];\n              case 270:\n                return [x2, pageHeight - y2, height, width];\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n          onceAdded() {}\n          isEmpty() {\n            return false;\n          }\n          enableEditMode() {\n            this.#isInEditMode = true;\n          }\n          disableEditMode() {\n            this.#isInEditMode = false;\n          }\n          isInEditMode() {\n            return this.#isInEditMode;\n          }\n          shouldGetKeyboardEvents() {\n            return false;\n          }\n          needsToBeRebuilt() {\n            return this.div && !this.isAttachedToDOM;\n          }\n          rebuild() {\n            this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n            this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n          }\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            (0, _util.unreachable)(\"An editor must be serializable\");\n          }\n          static deserialize(data, parent, uiManager) {\n            const editor = new this.prototype.constructor({\n              parent,\n              id: parent.getNextId(),\n              uiManager\n            });\n            editor.rotation = data.rotation;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n            editor.x = x / pageWidth;\n            editor.y = y / pageHeight;\n            editor.width = width / pageWidth;\n            editor.height = height / pageHeight;\n            return editor;\n          }\n          remove() {\n            this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n            this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n            if (this.parent) {\n              this.parent.remove(this);\n            } else {\n              this._uiManager.removeEditor(this);\n            }\n            this.#altTextButton?.remove();\n            this.#altTextButton = null;\n            this.#altTextTooltip = null;\n          }\n          get isResizable() {\n            return false;\n          }\n          makeResizable() {\n            if (this.isResizable) {\n              this.#createResizers();\n              this.#resizersDiv.classList.remove(\"hidden\");\n            }\n          }\n          select() {\n            this.makeResizable();\n            this.div?.classList.add(\"selectedEditor\");\n          }\n          unselect() {\n            this.#resizersDiv?.classList.add(\"hidden\");\n            this.div?.classList.remove(\"selectedEditor\");\n            if (this.div?.contains(document.activeElement)) {\n              this._uiManager.currentLayer.div.focus();\n            }\n          }\n          updateParams(type, value) {}\n          disableEditing() {\n            if (this.#altTextButton) {\n              this.#altTextButton.hidden = true;\n            }\n          }\n          enableEditing() {\n            if (this.#altTextButton) {\n              this.#altTextButton.hidden = false;\n            }\n          }\n          enterInEditMode() {}\n          get contentDiv() {\n            return this.div;\n          }\n          get isEditing() {\n            return this.#isEditing;\n          }\n          set isEditing(value) {\n            this.#isEditing = value;\n            if (!this.parent) {\n              return;\n            }\n            if (value) {\n              this.parent.setSelected(this);\n              this.parent.setActiveEditor(this);\n            } else {\n              this.parent.setActiveEditor(null);\n            }\n          }\n          setAspectRatio(width, height) {\n            this.#keepAspectRatio = true;\n            const aspectRatio = width / height;\n            const {\n              style\n            } = this.div;\n            style.aspectRatio = aspectRatio;\n            style.height = \"auto\";\n          }\n          static get MIN_SIZE() {\n            return 16;\n          }\n        }\n        exports.AnnotationEditor = AnnotationEditor;\n        class FakeEditor extends AnnotationEditor {\n          constructor(params) {\n            super(params);\n            this.annotationElementId = params.annotationElementId;\n            this.deleted = true;\n          }\n          serialize() {\n            return {\n              id: this.annotationElementId,\n              deleted: true,\n              pageIndex: this.pageIndex\n            };\n          }\n        }\n\n        /***/\n      }, /* 5 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\n        exports.bindEvents = bindEvents;\n        exports.opacityToHex = opacityToHex;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        function bindEvents(obj, element, names) {\n          for (const name of names) {\n            element.addEventListener(name, obj[name].bind(obj));\n          }\n        }\n        function opacityToHex(opacity) {\n          return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n        }\n        class IdManager {\n          #id = 0;\n          getId() {\n            return `${_util.AnnotationEditorPrefix}${this.#id++}`;\n          }\n        }\n        class ImageManager {\n          #baseId = (0, _util.getUuid)();\n          #id = 0;\n          #cache = null;\n          static get _isSVGFittingCanvas() {\n            const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n            const canvas = new OffscreenCanvas(1, 3);\n            const ctx = canvas.getContext(\"2d\");\n            const image = new Image();\n            image.src = svg;\n            const promise = image.decode().then(() => {\n              ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n              return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n            });\n            return (0, _util.shadow)(this, \"_isSVGFittingCanvas\", promise);\n          }\n          async #get(key, rawData) {\n            this.#cache ||= new Map();\n            let data = this.#cache.get(key);\n            if (data === null) {\n              return null;\n            }\n            if (data?.bitmap) {\n              data.refCounter += 1;\n              return data;\n            }\n            try {\n              data ||= {\n                bitmap: null,\n                id: `image_${this.#baseId}_${this.#id++}`,\n                refCounter: 0,\n                isSvg: false\n              };\n              let image;\n              if (typeof rawData === \"string\") {\n                data.url = rawData;\n                const response = await fetch(rawData);\n                if (!response.ok) {\n                  throw new Error(response.statusText);\n                }\n                image = await response.blob();\n              } else {\n                image = data.file = rawData;\n              }\n              if (image.type === \"image/svg+xml\") {\n                const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n                const fileReader = new FileReader();\n                const imageElement = new Image();\n                const imagePromise = new Promise((resolve, reject) => {\n                  imageElement.onload = () => {\n                    data.bitmap = imageElement;\n                    data.isSvg = true;\n                    resolve();\n                  };\n                  fileReader.onload = async () => {\n                    const url = data.svgUrl = fileReader.result;\n                    imageElement.src = (await mustRemoveAspectRatioPromise) ? `${url}#svgView(preserveAspectRatio(none))` : url;\n                  };\n                  imageElement.onerror = fileReader.onerror = reject;\n                });\n                fileReader.readAsDataURL(image);\n                await imagePromise;\n              } else {\n                data.bitmap = await createImageBitmap(image);\n              }\n              data.refCounter = 1;\n            } catch (e) {\n              console.error(e);\n              data = null;\n            }\n            this.#cache.set(key, data);\n            if (data) {\n              this.#cache.set(data.id, data);\n            }\n            return data;\n          }\n          async getFromFile(file) {\n            const {\n              lastModified,\n              name,\n              size,\n              type\n            } = file;\n            return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n          }\n          async getFromUrl(url) {\n            return this.#get(url, url);\n          }\n          async getFromId(id) {\n            this.#cache ||= new Map();\n            const data = this.#cache.get(id);\n            if (!data) {\n              return null;\n            }\n            if (data.bitmap) {\n              data.refCounter += 1;\n              return data;\n            }\n            if (data.file) {\n              return this.getFromFile(data.file);\n            }\n            return this.getFromUrl(data.url);\n          }\n          getSvgUrl(id) {\n            const data = this.#cache.get(id);\n            if (!data?.isSvg) {\n              return null;\n            }\n            return data.svgUrl;\n          }\n          deleteId(id) {\n            this.#cache ||= new Map();\n            const data = this.#cache.get(id);\n            if (!data) {\n              return;\n            }\n            data.refCounter -= 1;\n            if (data.refCounter !== 0) {\n              return;\n            }\n            data.bitmap = null;\n          }\n          isValidId(id) {\n            return id.startsWith(`image_${this.#baseId}_`);\n          }\n        }\n        class CommandManager {\n          #commands = [];\n          #locked = false;\n          #maxSize;\n          #position = -1;\n          constructor() {\n            let maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;\n            this.#maxSize = maxSize;\n          }\n          add(_ref17) {\n            let {\n              cmd,\n              undo,\n              mustExec,\n              type = NaN,\n              overwriteIfSameType = false,\n              keepUndo = false\n            } = _ref17;\n            if (mustExec) {\n              cmd();\n            }\n            if (this.#locked) {\n              return;\n            }\n            const save = {\n              cmd,\n              undo,\n              type\n            };\n            if (this.#position === -1) {\n              if (this.#commands.length > 0) {\n                this.#commands.length = 0;\n              }\n              this.#position = 0;\n              this.#commands.push(save);\n              return;\n            }\n            if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n              if (keepUndo) {\n                save.undo = this.#commands[this.#position].undo;\n              }\n              this.#commands[this.#position] = save;\n              return;\n            }\n            const next = this.#position + 1;\n            if (next === this.#maxSize) {\n              this.#commands.splice(0, 1);\n            } else {\n              this.#position = next;\n              if (next < this.#commands.length) {\n                this.#commands.splice(next);\n              }\n            }\n            this.#commands.push(save);\n          }\n          undo() {\n            if (this.#position === -1) {\n              return;\n            }\n            this.#locked = true;\n            this.#commands[this.#position].undo();\n            this.#locked = false;\n            this.#position -= 1;\n          }\n          redo() {\n            if (this.#position < this.#commands.length - 1) {\n              this.#position += 1;\n              this.#locked = true;\n              this.#commands[this.#position].cmd();\n              this.#locked = false;\n            }\n          }\n          hasSomethingToUndo() {\n            return this.#position !== -1;\n          }\n          hasSomethingToRedo() {\n            return this.#position < this.#commands.length - 1;\n          }\n          destroy() {\n            this.#commands = null;\n          }\n        }\n        exports.CommandManager = CommandManager;\n        class KeyboardManager {\n          constructor(callbacks) {\n            this.buffer = [];\n            this.callbacks = new Map();\n            this.allKeys = new Set();\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            for (const [keys, callback, options = {}] of callbacks) {\n              for (const key of keys) {\n                const isMacKey = key.startsWith(\"mac+\");\n                if (isMac && isMacKey) {\n                  this.callbacks.set(key.slice(4), {\n                    callback,\n                    options\n                  });\n                  this.allKeys.add(key.split(\"+\").at(-1));\n                } else if (!isMac && !isMacKey) {\n                  this.callbacks.set(key, {\n                    callback,\n                    options\n                  });\n                  this.allKeys.add(key.split(\"+\").at(-1));\n                }\n              }\n            }\n          }\n          #serialize(event) {\n            if (event.altKey) {\n              this.buffer.push(\"alt\");\n            }\n            if (event.ctrlKey) {\n              this.buffer.push(\"ctrl\");\n            }\n            if (event.metaKey) {\n              this.buffer.push(\"meta\");\n            }\n            if (event.shiftKey) {\n              this.buffer.push(\"shift\");\n            }\n            this.buffer.push(event.key);\n            const str = this.buffer.join(\"+\");\n            this.buffer.length = 0;\n            return str;\n          }\n          exec(self, event) {\n            if (!this.allKeys.has(event.key)) {\n              return;\n            }\n            const info = this.callbacks.get(this.#serialize(event));\n            if (!info) {\n              return;\n            }\n            const {\n              callback,\n              options: {\n                bubbles = false,\n                args = [],\n                checker = null\n              }\n            } = info;\n            if (checker && !checker(self, event)) {\n              return;\n            }\n            callback.bind(self, ...args)();\n            if (!bubbles) {\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          }\n        }\n        exports.KeyboardManager = KeyboardManager;\n        class ColorManager {\n          static _colorsMapping = new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]);\n          get _colors() {\n            const colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n            (0, _display_utils.getColorValues)(colors);\n            return (0, _util.shadow)(this, \"_colors\", colors);\n          }\n          convert(color) {\n            const rgb = (0, _display_utils.getRGB)(color);\n            if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n              return rgb;\n            }\n            for (const [name, RGB] of this._colors) {\n              if (RGB.every((x, i) => x === rgb[i])) {\n                return ColorManager._colorsMapping.get(name);\n              }\n            }\n            return rgb;\n          }\n          getHexCode(name) {\n            const rgb = this._colors.get(name);\n            if (!rgb) {\n              return name;\n            }\n            return _util.Util.makeHexColor(...rgb);\n          }\n        }\n        exports.ColorManager = ColorManager;\n        class AnnotationEditorUIManager {\n          #activeEditor = null;\n          #allEditors = new Map();\n          #allLayers = new Map();\n          #altTextManager = null;\n          #annotationStorage = null;\n          #commandManager = new CommandManager();\n          #currentPageIndex = 0;\n          #deletedAnnotationsElementIds = new Set();\n          #draggingEditors = null;\n          #editorTypes = null;\n          #editorsToRescale = new Set();\n          #filterFactory = null;\n          #idManager = new IdManager();\n          #isEnabled = false;\n          #isWaiting = false;\n          #lastActiveElement = null;\n          #mode = _util.AnnotationEditorType.NONE;\n          #selectedEditors = new Set();\n          #pageColors = null;\n          #boundBlur = this.blur.bind(this);\n          #boundFocus = this.focus.bind(this);\n          #boundCopy = this.copy.bind(this);\n          #boundCut = this.cut.bind(this);\n          #boundPaste = this.paste.bind(this);\n          #boundKeydown = this.keydown.bind(this);\n          #boundOnEditingAction = this.onEditingAction.bind(this);\n          #boundOnPageChanging = this.onPageChanging.bind(this);\n          #boundOnScaleChanging = this.onScaleChanging.bind(this);\n          #boundOnRotationChanging = this.onRotationChanging.bind(this);\n          #previousStates = {\n            isEditing: false,\n            isEmpty: true,\n            hasSomethingToUndo: false,\n            hasSomethingToRedo: false,\n            hasSelectedEditor: false\n          };\n          #translation = [0, 0];\n          #translationTimeoutId = null;\n          #container = null;\n          #viewer = null;\n          static TRANSLATE_SMALL = 1;\n          static TRANSLATE_BIG = 10;\n          static get _keyboardManager() {\n            const proto = AnnotationEditorUIManager.prototype;\n            const arrowChecker = self => {\n              const {\n                activeElement\n              } = document;\n              return activeElement && self.#container.contains(activeElement) && self.hasSomethingToControl();\n            };\n            const small = this.TRANSLATE_SMALL;\n            const big = this.TRANSLATE_BIG;\n            return (0, _util.shadow)(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll], [[\"ctrl+z\", \"mac+meta+z\"], proto.undo], [[\"ctrl+y\", \"ctrl+shift+z\", \"mac+meta+shift+z\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], proto.redo], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\", \"mac+Delete\"], proto.delete], [[\"Escape\", \"mac+Escape\"], proto.unselectAll], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto.translateSelectedEditors, {\n              args: [-small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto.translateSelectedEditors, {\n              args: [-big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto.translateSelectedEditors, {\n              args: [small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto.translateSelectedEditors, {\n              args: [big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto.translateSelectedEditors, {\n              args: [0, -small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto.translateSelectedEditors, {\n              args: [0, -big],\n              checker: arrowChecker\n            }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto.translateSelectedEditors, {\n              args: [0, small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto.translateSelectedEditors, {\n              args: [0, big],\n              checker: arrowChecker\n            }]]));\n          }\n          constructor(container, viewer, altTextManager, eventBus, pdfDocument, pageColors) {\n            this.#container = container;\n            this.#viewer = viewer;\n            this.#altTextManager = altTextManager;\n            this._eventBus = eventBus;\n            this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n            this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n            this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n            this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n            this.#annotationStorage = pdfDocument.annotationStorage;\n            this.#filterFactory = pdfDocument.filterFactory;\n            this.#pageColors = pageColors;\n            this.viewParameters = {\n              realScale: _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS,\n              rotation: 0\n            };\n          }\n          destroy() {\n            this.#removeKeyboardManager();\n            this.#removeFocusManager();\n            this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n            this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n            this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n            this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n            for (const layer of this.#allLayers.values()) {\n              layer.destroy();\n            }\n            this.#allLayers.clear();\n            this.#allEditors.clear();\n            this.#editorsToRescale.clear();\n            this.#activeEditor = null;\n            this.#selectedEditors.clear();\n            this.#commandManager.destroy();\n            this.#altTextManager.destroy();\n          }\n          get hcmFilter() {\n            return (0, _util.shadow)(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n          }\n          get direction() {\n            return (0, _util.shadow)(this, \"direction\", getComputedStyle(this.#container).direction);\n          }\n          editAltText(editor) {\n            this.#altTextManager?.editAltText(this, editor);\n          }\n          onPageChanging(_ref18) {\n            let {\n              pageNumber\n            } = _ref18;\n            this.#currentPageIndex = pageNumber - 1;\n          }\n          focusMainContainer() {\n            this.#container.focus();\n          }\n          findParent(x, y) {\n            for (const layer of this.#allLayers.values()) {\n              const {\n                x: layerX,\n                y: layerY,\n                width,\n                height\n              } = layer.div.getBoundingClientRect();\n              if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {\n                return layer;\n              }\n            }\n            return null;\n          }\n          disableUserSelect() {\n            let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#viewer.classList.toggle(\"noUserSelect\", value);\n          }\n          addShouldRescale(editor) {\n            this.#editorsToRescale.add(editor);\n          }\n          removeShouldRescale(editor) {\n            this.#editorsToRescale.delete(editor);\n          }\n          onScaleChanging(_ref19) {\n            let {\n              scale\n            } = _ref19;\n            this.commitOrRemove();\n            this.viewParameters.realScale = scale * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS;\n            for (const editor of this.#editorsToRescale) {\n              editor.onScaleChanging();\n            }\n          }\n          onRotationChanging(_ref20) {\n            let {\n              pagesRotation\n            } = _ref20;\n            this.commitOrRemove();\n            this.viewParameters.rotation = pagesRotation;\n          }\n          addToAnnotationStorage(editor) {\n            if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) {\n              this.#annotationStorage.setValue(editor.id, editor);\n            }\n          }\n          #addFocusManager() {\n            window.addEventListener(\"focus\", this.#boundFocus);\n            window.addEventListener(\"blur\", this.#boundBlur);\n          }\n          #removeFocusManager() {\n            window.removeEventListener(\"focus\", this.#boundFocus);\n            window.removeEventListener(\"blur\", this.#boundBlur);\n          }\n          blur() {\n            if (!this.hasSelection) {\n              return;\n            }\n            const {\n              activeElement\n            } = document;\n            for (const editor of this.#selectedEditors) {\n              if (editor.div.contains(activeElement)) {\n                this.#lastActiveElement = [editor, activeElement];\n                editor._focusEventsAllowed = false;\n                break;\n              }\n            }\n          }\n          focus() {\n            if (!this.#lastActiveElement) {\n              return;\n            }\n            const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n            this.#lastActiveElement = null;\n            lastActiveElement.addEventListener(\"focusin\", () => {\n              lastEditor._focusEventsAllowed = true;\n            }, {\n              once: true\n            });\n            lastActiveElement.focus();\n          }\n          #addKeyboardManager() {\n            window.addEventListener(\"keydown\", this.#boundKeydown, {\n              capture: true\n            });\n          }\n          #removeKeyboardManager() {\n            window.removeEventListener(\"keydown\", this.#boundKeydown, {\n              capture: true\n            });\n          }\n          #addCopyPasteListeners() {\n            document.addEventListener(\"copy\", this.#boundCopy);\n            document.addEventListener(\"cut\", this.#boundCut);\n            document.addEventListener(\"paste\", this.#boundPaste);\n          }\n          #removeCopyPasteListeners() {\n            document.removeEventListener(\"copy\", this.#boundCopy);\n            document.removeEventListener(\"cut\", this.#boundCut);\n            document.removeEventListener(\"paste\", this.#boundPaste);\n          }\n          addEditListeners() {\n            this.#addKeyboardManager();\n            this.#addCopyPasteListeners();\n          }\n          removeEditListeners() {\n            this.#removeKeyboardManager();\n            this.#removeCopyPasteListeners();\n          }\n          copy(event) {\n            event.preventDefault();\n            this.#activeEditor?.commitOrRemove();\n            if (!this.hasSelection) {\n              return;\n            }\n            const editors = [];\n            for (const editor of this.#selectedEditors) {\n              const serialized = editor.serialize(true);\n              if (serialized) {\n                editors.push(serialized);\n              }\n            }\n            if (editors.length === 0) {\n              return;\n            }\n            event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n          }\n          cut(event) {\n            this.copy(event);\n            this.delete();\n          }\n          paste(event) {\n            event.preventDefault();\n            const {\n              clipboardData\n            } = event;\n            for (const item of clipboardData.items) {\n              for (const editorType of this.#editorTypes) {\n                if (editorType.isHandlingMimeForPasting(item.type)) {\n                  editorType.paste(item, this.currentLayer);\n                  return;\n                }\n              }\n            }\n            let data = clipboardData.getData(\"application/pdfjs\");\n            if (!data) {\n              return;\n            }\n            try {\n              data = JSON.parse(data);\n            } catch (ex) {\n              (0, _util.warn)(`paste: \"${ex.message}\".`);\n              return;\n            }\n            if (!Array.isArray(data)) {\n              return;\n            }\n            this.unselectAll();\n            const layer = this.currentLayer;\n            try {\n              const newEditors = [];\n              for (const editor of data) {\n                const deserializedEditor = layer.deserialize(editor);\n                if (!deserializedEditor) {\n                  return;\n                }\n                newEditors.push(deserializedEditor);\n              }\n              const cmd = () => {\n                for (const editor of newEditors) {\n                  this.#addEditorToLayer(editor);\n                }\n                this.#selectEditors(newEditors);\n              };\n              const undo = () => {\n                for (const editor of newEditors) {\n                  editor.remove();\n                }\n              };\n              this.addCommands({\n                cmd,\n                undo,\n                mustExec: true\n              });\n            } catch (ex) {\n              (0, _util.warn)(`paste: \"${ex.message}\".`);\n            }\n          }\n          keydown(event) {\n            if (!this.getActive()?.shouldGetKeyboardEvents()) {\n              AnnotationEditorUIManager._keyboardManager.exec(this, event);\n            }\n          }\n          onEditingAction(details) {\n            if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n              this[details.name]();\n            }\n          }\n          #dispatchUpdateStates(details) {\n            const hasChanged = Object.entries(details).some(_ref21 => {\n              let [key, value] = _ref21;\n              return this.#previousStates[key] !== value;\n            });\n            if (hasChanged) {\n              this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n                source: this,\n                details: Object.assign(this.#previousStates, details)\n              });\n            }\n          }\n          #dispatchUpdateUI(details) {\n            this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n              source: this,\n              details\n            });\n          }\n          setEditingState(isEditing) {\n            if (isEditing) {\n              this.#addFocusManager();\n              this.#addKeyboardManager();\n              this.#addCopyPasteListeners();\n              this.#dispatchUpdateStates({\n                isEditing: this.#mode !== _util.AnnotationEditorType.NONE,\n                isEmpty: this.#isEmpty(),\n                hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n                hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n                hasSelectedEditor: false\n              });\n            } else {\n              this.#removeFocusManager();\n              this.#removeKeyboardManager();\n              this.#removeCopyPasteListeners();\n              this.#dispatchUpdateStates({\n                isEditing: false\n              });\n              this.disableUserSelect(false);\n            }\n          }\n          registerEditorTypes(types) {\n            if (this.#editorTypes) {\n              return;\n            }\n            this.#editorTypes = types;\n            for (const editorType of this.#editorTypes) {\n              this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n            }\n          }\n          getId() {\n            return this.#idManager.getId();\n          }\n          get currentLayer() {\n            return this.#allLayers.get(this.#currentPageIndex);\n          }\n          getLayer(pageIndex) {\n            return this.#allLayers.get(pageIndex);\n          }\n          get currentPageIndex() {\n            return this.#currentPageIndex;\n          }\n          addLayer(layer) {\n            this.#allLayers.set(layer.pageIndex, layer);\n            if (this.#isEnabled) {\n              layer.enable();\n            } else {\n              layer.disable();\n            }\n          }\n          removeLayer(layer) {\n            this.#allLayers.delete(layer.pageIndex);\n          }\n          updateMode(mode) {\n            let editId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (this.#mode === mode) {\n              return;\n            }\n            this.#mode = mode;\n            if (mode === _util.AnnotationEditorType.NONE) {\n              this.setEditingState(false);\n              this.#disableAll();\n              return;\n            }\n            this.setEditingState(true);\n            this.#enableAll();\n            this.unselectAll();\n            for (const layer of this.#allLayers.values()) {\n              layer.updateMode(mode);\n            }\n            if (!editId) {\n              return;\n            }\n            for (const editor of this.#allEditors.values()) {\n              if (editor.annotationElementId === editId) {\n                this.setSelected(editor);\n                editor.enterInEditMode();\n                break;\n              }\n            }\n          }\n          updateToolbar(mode) {\n            if (mode === this.#mode) {\n              return;\n            }\n            this._eventBus.dispatch(\"switchannotationeditormode\", {\n              source: this,\n              mode\n            });\n          }\n          updateParams(type, value) {\n            if (!this.#editorTypes) {\n              return;\n            }\n            if (type === _util.AnnotationEditorParamsType.CREATE) {\n              this.currentLayer.addNewEditor(type);\n              return;\n            }\n            for (const editor of this.#selectedEditors) {\n              editor.updateParams(type, value);\n            }\n            for (const editorType of this.#editorTypes) {\n              editorType.updateDefaultParams(type, value);\n            }\n          }\n          enableWaiting() {\n            let mustWait = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.#isWaiting === mustWait) {\n              return;\n            }\n            this.#isWaiting = mustWait;\n            for (const layer of this.#allLayers.values()) {\n              if (mustWait) {\n                layer.disableClick();\n              } else {\n                layer.enableClick();\n              }\n              layer.div.classList.toggle(\"waiting\", mustWait);\n            }\n          }\n          #enableAll() {\n            if (!this.#isEnabled) {\n              this.#isEnabled = true;\n              for (const layer of this.#allLayers.values()) {\n                layer.enable();\n              }\n            }\n          }\n          #disableAll() {\n            this.unselectAll();\n            if (this.#isEnabled) {\n              this.#isEnabled = false;\n              for (const layer of this.#allLayers.values()) {\n                layer.disable();\n              }\n            }\n          }\n          getEditors(pageIndex) {\n            const editors = [];\n            for (const editor of this.#allEditors.values()) {\n              if (editor.pageIndex === pageIndex) {\n                editors.push(editor);\n              }\n            }\n            return editors;\n          }\n          getEditor(id) {\n            return this.#allEditors.get(id);\n          }\n          addEditor(editor) {\n            this.#allEditors.set(editor.id, editor);\n          }\n          removeEditor(editor) {\n            this.#allEditors.delete(editor.id);\n            this.unselect(editor);\n            if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) {\n              this.#annotationStorage?.remove(editor.id);\n            }\n          }\n          addDeletedAnnotationElement(editor) {\n            this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n            editor.deleted = true;\n          }\n          isDeletedAnnotationElement(annotationElementId) {\n            return this.#deletedAnnotationsElementIds.has(annotationElementId);\n          }\n          removeDeletedAnnotationElement(editor) {\n            this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n            editor.deleted = false;\n          }\n          #addEditorToLayer(editor) {\n            const layer = this.#allLayers.get(editor.pageIndex);\n            if (layer) {\n              layer.addOrRebuild(editor);\n            } else {\n              this.addEditor(editor);\n            }\n          }\n          setActiveEditor(editor) {\n            if (this.#activeEditor === editor) {\n              return;\n            }\n            this.#activeEditor = editor;\n            if (editor) {\n              this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            }\n          }\n          toggleSelected(editor) {\n            if (this.#selectedEditors.has(editor)) {\n              this.#selectedEditors.delete(editor);\n              editor.unselect();\n              this.#dispatchUpdateStates({\n                hasSelectedEditor: this.hasSelection\n              });\n              return;\n            }\n            this.#selectedEditors.add(editor);\n            editor.select();\n            this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n          setSelected(editor) {\n            for (const ed of this.#selectedEditors) {\n              if (ed !== editor) {\n                ed.unselect();\n              }\n            }\n            this.#selectedEditors.clear();\n            this.#selectedEditors.add(editor);\n            editor.select();\n            this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n          isSelected(editor) {\n            return this.#selectedEditors.has(editor);\n          }\n          unselect(editor) {\n            editor.unselect();\n            this.#selectedEditors.delete(editor);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: this.hasSelection\n            });\n          }\n          get hasSelection() {\n            return this.#selectedEditors.size !== 0;\n          }\n          undo() {\n            this.#commandManager.undo();\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n              hasSomethingToRedo: true,\n              isEmpty: this.#isEmpty()\n            });\n          }\n          redo() {\n            this.#commandManager.redo();\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n              isEmpty: this.#isEmpty()\n            });\n          }\n          addCommands(params) {\n            this.#commandManager.add(params);\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: false,\n              isEmpty: this.#isEmpty()\n            });\n          }\n          #isEmpty() {\n            if (this.#allEditors.size === 0) {\n              return true;\n            }\n            if (this.#allEditors.size === 1) {\n              for (const editor of this.#allEditors.values()) {\n                return editor.isEmpty();\n              }\n            }\n            return false;\n          }\n          delete() {\n            this.commitOrRemove();\n            if (!this.hasSelection) {\n              return;\n            }\n            const editors = [...this.#selectedEditors];\n            const cmd = () => {\n              for (const editor of editors) {\n                editor.remove();\n              }\n            };\n            const undo = () => {\n              for (const editor of editors) {\n                this.#addEditorToLayer(editor);\n              }\n            };\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: true\n            });\n          }\n          commitOrRemove() {\n            this.#activeEditor?.commitOrRemove();\n          }\n          hasSomethingToControl() {\n            return this.#activeEditor || this.hasSelection;\n          }\n          #selectEditors(editors) {\n            this.#selectedEditors.clear();\n            for (const editor of editors) {\n              if (editor.isEmpty()) {\n                continue;\n              }\n              this.#selectedEditors.add(editor);\n              editor.select();\n            }\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n          selectAll() {\n            for (const editor of this.#selectedEditors) {\n              editor.commit();\n            }\n            this.#selectEditors(this.#allEditors.values());\n          }\n          unselectAll() {\n            if (this.#activeEditor) {\n              this.#activeEditor.commitOrRemove();\n              return;\n            }\n            if (!this.hasSelection) {\n              return;\n            }\n            for (const editor of this.#selectedEditors) {\n              editor.unselect();\n            }\n            this.#selectedEditors.clear();\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: false\n            });\n          }\n          translateSelectedEditors(x, y) {\n            let noCommit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            if (!noCommit) {\n              this.commitOrRemove();\n            }\n            if (!this.hasSelection) {\n              return;\n            }\n            this.#translation[0] += x;\n            this.#translation[1] += y;\n            const [totalX, totalY] = this.#translation;\n            const editors = [...this.#selectedEditors];\n            const TIME_TO_WAIT = 1000;\n            if (this.#translationTimeoutId) {\n              clearTimeout(this.#translationTimeoutId);\n            }\n            this.#translationTimeoutId = setTimeout(() => {\n              this.#translationTimeoutId = null;\n              this.#translation[0] = this.#translation[1] = 0;\n              this.addCommands({\n                cmd: () => {\n                  for (const editor of editors) {\n                    if (this.#allEditors.has(editor.id)) {\n                      editor.translateInPage(totalX, totalY);\n                    }\n                  }\n                },\n                undo: () => {\n                  for (const editor of editors) {\n                    if (this.#allEditors.has(editor.id)) {\n                      editor.translateInPage(-totalX, -totalY);\n                    }\n                  }\n                },\n                mustExec: false\n              });\n            }, TIME_TO_WAIT);\n            for (const editor of editors) {\n              editor.translateInPage(x, y);\n            }\n          }\n          setUpDragSession() {\n            if (!this.hasSelection) {\n              return;\n            }\n            this.disableUserSelect(true);\n            this.#draggingEditors = new Map();\n            for (const editor of this.#selectedEditors) {\n              this.#draggingEditors.set(editor, {\n                savedX: editor.x,\n                savedY: editor.y,\n                savedPageIndex: editor.pageIndex,\n                newX: 0,\n                newY: 0,\n                newPageIndex: -1\n              });\n            }\n          }\n          endDragSession() {\n            if (!this.#draggingEditors) {\n              return false;\n            }\n            this.disableUserSelect(false);\n            const map = this.#draggingEditors;\n            this.#draggingEditors = null;\n            let mustBeAddedInUndoStack = false;\n            for (const [{\n              x,\n              y,\n              pageIndex\n            }, value] of map) {\n              value.newX = x;\n              value.newY = y;\n              value.newPageIndex = pageIndex;\n              mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n            }\n            if (!mustBeAddedInUndoStack) {\n              return false;\n            }\n            const move = (editor, x, y, pageIndex) => {\n              if (this.#allEditors.has(editor.id)) {\n                const parent = this.#allLayers.get(pageIndex);\n                if (parent) {\n                  editor._setParentAndPosition(parent, x, y);\n                } else {\n                  editor.pageIndex = pageIndex;\n                  editor.x = x;\n                  editor.y = y;\n                }\n              }\n            };\n            this.addCommands({\n              cmd: () => {\n                for (const [editor, {\n                  newX,\n                  newY,\n                  newPageIndex\n                }] of map) {\n                  move(editor, newX, newY, newPageIndex);\n                }\n              },\n              undo: () => {\n                for (const [editor, {\n                  savedX,\n                  savedY,\n                  savedPageIndex\n                }] of map) {\n                  move(editor, savedX, savedY, savedPageIndex);\n                }\n              },\n              mustExec: true\n            });\n            return true;\n          }\n          dragSelectedEditors(tx, ty) {\n            if (!this.#draggingEditors) {\n              return;\n            }\n            for (const editor of this.#draggingEditors.keys()) {\n              editor.drag(tx, ty);\n            }\n          }\n          rebuild(editor) {\n            if (editor.parent === null) {\n              const parent = this.getLayer(editor.pageIndex);\n              if (parent) {\n                parent.changeParent(editor);\n                parent.addOrRebuild(editor);\n              } else {\n                this.addEditor(editor);\n                this.addToAnnotationStorage(editor);\n                editor.rebuild();\n              }\n            } else {\n              editor.parent.addOrRebuild(editor);\n            }\n          }\n          isActive(editor) {\n            return this.#activeEditor === editor;\n          }\n          getActive() {\n            return this.#activeEditor;\n          }\n          getMode() {\n            return this.#mode;\n          }\n          get imageManager() {\n            return (0, _util.shadow)(this, \"imageManager\", new ImageManager());\n          }\n        }\n        exports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n\n        /***/\n      }, /* 6 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMFilterFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n        exports.deprecated = deprecated;\n        exports.getColorValues = getColorValues;\n        exports.getCurrentTransform = getCurrentTransform;\n        exports.getCurrentTransformInverse = getCurrentTransformInverse;\n        exports.getFilenameFromUrl = getFilenameFromUrl;\n        exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n        exports.getRGB = getRGB;\n        exports.getXfaPageViewport = getXfaPageViewport;\n        exports.isDataScheme = isDataScheme;\n        exports.isPdfFile = isPdfFile;\n        exports.isValidFetchUrl = isValidFetchUrl;\n        exports.loadScript = loadScript;\n        exports.noContextMenu = noContextMenu;\n        exports.setLayerDimensions = setLayerDimensions;\n        var _base_factory = __w_pdfjs_require__(7);\n        var _util = __w_pdfjs_require__(1);\n        const SVG_NS = \"http://www.w3.org/2000/svg\";\n        class PixelsPerInch {\n          static CSS = 96.0;\n          static PDF = 72.0;\n          static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n        }\n        exports.PixelsPerInch = PixelsPerInch;\n        class DOMFilterFactory extends _base_factory.BaseFilterFactory {\n          #_cache;\n          #_defs;\n          #docId;\n          #document;\n          #hcmFilter;\n          #hcmKey;\n          #hcmUrl;\n          #hcmHighlightFilter;\n          #hcmHighlightKey;\n          #hcmHighlightUrl;\n          #id = 0;\n          constructor() {\n            let {\n              docId,\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this.#docId = docId;\n            this.#document = ownerDocument;\n          }\n          get #cache() {\n            return this.#_cache ||= new Map();\n          }\n          get #defs() {\n            if (!this.#_defs) {\n              const div = this.#document.createElement(\"div\");\n              const {\n                style\n              } = div;\n              style.visibility = \"hidden\";\n              style.contain = \"strict\";\n              style.width = style.height = 0;\n              style.position = \"absolute\";\n              style.top = style.left = 0;\n              style.zIndex = -1;\n              const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n              svg.setAttribute(\"width\", 0);\n              svg.setAttribute(\"height\", 0);\n              this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n              div.append(svg);\n              svg.append(this.#_defs);\n              this.#document.body.append(div);\n            }\n            return this.#_defs;\n          }\n          addFilter(maps) {\n            if (!maps) {\n              return \"none\";\n            }\n            let value = this.#cache.get(maps);\n            if (value) {\n              return value;\n            }\n            let tableR, tableG, tableB, key;\n            if (maps.length === 1) {\n              const mapR = maps[0];\n              const buffer = new Array(256);\n              for (let i = 0; i < 256; i++) {\n                buffer[i] = mapR[i] / 255;\n              }\n              key = tableR = tableG = tableB = buffer.join(\",\");\n            } else {\n              const [mapR, mapG, mapB] = maps;\n              const bufferR = new Array(256);\n              const bufferG = new Array(256);\n              const bufferB = new Array(256);\n              for (let i = 0; i < 256; i++) {\n                bufferR[i] = mapR[i] / 255;\n                bufferG[i] = mapG[i] / 255;\n                bufferB[i] = mapB[i] / 255;\n              }\n              tableR = bufferR.join(\",\");\n              tableG = bufferG.join(\",\");\n              tableB = bufferB.join(\",\");\n              key = `${tableR}${tableG}${tableB}`;\n            }\n            value = this.#cache.get(key);\n            if (value) {\n              this.#cache.set(maps, value);\n              return value;\n            }\n            const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n            const url = `url(#${id})`;\n            this.#cache.set(maps, url);\n            this.#cache.set(key, url);\n            const filter = this.#createFilter(id);\n            this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n            return url;\n          }\n          addHCMFilter(fgColor, bgColor) {\n            const key = `${fgColor}-${bgColor}`;\n            if (this.#hcmKey === key) {\n              return this.#hcmUrl;\n            }\n            this.#hcmKey = key;\n            this.#hcmUrl = \"none\";\n            this.#hcmFilter?.remove();\n            if (!fgColor || !bgColor) {\n              return this.#hcmUrl;\n            }\n            const fgRGB = this.#getRGB(fgColor);\n            fgColor = _util.Util.makeHexColor(...fgRGB);\n            const bgRGB = this.#getRGB(bgColor);\n            bgColor = _util.Util.makeHexColor(...bgRGB);\n            this.#defs.style.color = \"\";\n            if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) {\n              return this.#hcmUrl;\n            }\n            const map = new Array(256);\n            for (let i = 0; i <= 255; i++) {\n              const x = i / 255;\n              map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n            }\n            const table = map.join(\",\");\n            const id = `g_${this.#docId}_hcm_filter`;\n            const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n            this.#addTransferMapConversion(table, table, table, filter);\n            this.#addGrayConversion(filter);\n            const getSteps = (c, n) => {\n              const start = fgRGB[c] / 255;\n              const end = bgRGB[c] / 255;\n              const arr = new Array(n + 1);\n              for (let i = 0; i <= n; i++) {\n                arr[i] = start + i / n * (end - start);\n              }\n              return arr.join(\",\");\n            };\n            this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n            this.#hcmUrl = `url(#${id})`;\n            return this.#hcmUrl;\n          }\n          addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n            const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n            if (this.#hcmHighlightKey === key) {\n              return this.#hcmHighlightUrl;\n            }\n            this.#hcmHighlightKey = key;\n            this.#hcmHighlightUrl = \"none\";\n            this.#hcmHighlightFilter?.remove();\n            if (!fgColor || !bgColor) {\n              return this.#hcmHighlightUrl;\n            }\n            const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n            let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n            let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n            let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(this.#getRGB.bind(this));\n            if (bgGray < fgGray) {\n              [fgGray, bgGray, newFgRGB, newBgRGB] = [bgGray, fgGray, newBgRGB, newFgRGB];\n            }\n            this.#defs.style.color = \"\";\n            const getSteps = (fg, bg, n) => {\n              const arr = new Array(256);\n              const step = (bgGray - fgGray) / n;\n              const newStart = fg / 255;\n              const newStep = (bg - fg) / (255 * n);\n              let prev = 0;\n              for (let i = 0; i <= n; i++) {\n                const k = Math.round(fgGray + i * step);\n                const value = newStart + i * newStep;\n                for (let j = prev; j <= k; j++) {\n                  arr[j] = value;\n                }\n                prev = k + 1;\n              }\n              for (let i = prev; i < 256; i++) {\n                arr[i] = arr[prev - 1];\n              }\n              return arr.join(\",\");\n            };\n            const id = `g_${this.#docId}_hcm_highlight_filter`;\n            const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n            this.#addGrayConversion(filter);\n            this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n            this.#hcmHighlightUrl = `url(#${id})`;\n            return this.#hcmHighlightUrl;\n          }\n          destroy() {\n            let keepHCM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n              return;\n            }\n            if (this.#_defs) {\n              this.#_defs.parentNode.parentNode.remove();\n              this.#_defs = null;\n            }\n            if (this.#_cache) {\n              this.#_cache.clear();\n              this.#_cache = null;\n            }\n            this.#id = 0;\n          }\n          #addGrayConversion(filter) {\n            const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n            feColorMatrix.setAttribute(\"type\", \"matrix\");\n            feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n            filter.append(feColorMatrix);\n          }\n          #createFilter(id) {\n            const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n            filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n            filter.setAttribute(\"id\", id);\n            this.#defs.append(filter);\n            return filter;\n          }\n          #appendFeFunc(feComponentTransfer, func, table) {\n            const feFunc = this.#document.createElementNS(SVG_NS, func);\n            feFunc.setAttribute(\"type\", \"discrete\");\n            feFunc.setAttribute(\"tableValues\", table);\n            feComponentTransfer.append(feFunc);\n          }\n          #addTransferMapConversion(rTable, gTable, bTable, filter) {\n            const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n            filter.append(feComponentTransfer);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n          }\n          #getRGB(color) {\n            this.#defs.style.color = color;\n            return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n          }\n        }\n        exports.DOMFilterFactory = DOMFilterFactory;\n        class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n          constructor() {\n            let {\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this._document = ownerDocument;\n          }\n          _createCanvas(width, height) {\n            const canvas = this._document.createElement(\"canvas\");\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n          }\n        }\n        exports.DOMCanvasFactory = DOMCanvasFactory;\n        async function fetchData(url) {\n          let asTypedArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          if (isValidFetchUrl(url, document.baseURI)) {\n            const response = await fetch(url);\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n          }\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n            if (asTypedArray) {\n              request.responseType = \"arraybuffer\";\n            }\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n              if (request.status === 200 || request.status === 0) {\n                let data;\n                if (asTypedArray && request.response) {\n                  data = new Uint8Array(request.response);\n                } else if (!asTypedArray && request.responseText) {\n                  data = (0, _util.stringToBytes)(request.responseText);\n                }\n                if (data) {\n                  resolve(data);\n                  return;\n                }\n              }\n              reject(new Error(request.statusText));\n            };\n            request.send(null);\n          });\n        }\n        class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url, this.isCompressed).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n        }\n        exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n        class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url, true);\n          }\n        }\n        exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n        class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n          _createSVG(type) {\n            return document.createElementNS(SVG_NS, type);\n          }\n        }\n        exports.DOMSVGFactory = DOMSVGFactory;\n        class PageViewport {\n          constructor(_ref22) {\n            let {\n              viewBox,\n              scale,\n              rotation,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = _ref22;\n            this.viewBox = viewBox;\n            this.scale = scale;\n            this.rotation = rotation;\n            this.offsetX = offsetX;\n            this.offsetY = offsetY;\n            const centerX = (viewBox[2] + viewBox[0]) / 2;\n            const centerY = (viewBox[3] + viewBox[1]) / 2;\n            let rotateA, rotateB, rotateC, rotateD;\n            rotation %= 360;\n            if (rotation < 0) {\n              rotation += 360;\n            }\n            switch (rotation) {\n              case 180:\n                rotateA = -1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = 1;\n                break;\n              case 90:\n                rotateA = 0;\n                rotateB = 1;\n                rotateC = 1;\n                rotateD = 0;\n                break;\n              case 270:\n                rotateA = 0;\n                rotateB = -1;\n                rotateC = -1;\n                rotateD = 0;\n                break;\n              case 0:\n                rotateA = 1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = -1;\n                break;\n              default:\n                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n            }\n            if (dontFlip) {\n              rotateC = -rotateC;\n              rotateD = -rotateD;\n            }\n            let offsetCanvasX, offsetCanvasY;\n            let width, height;\n            if (rotateA === 0) {\n              offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n              width = (viewBox[3] - viewBox[1]) * scale;\n              height = (viewBox[2] - viewBox[0]) * scale;\n            } else {\n              offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n              width = (viewBox[2] - viewBox[0]) * scale;\n              height = (viewBox[3] - viewBox[1]) * scale;\n            }\n            this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n            this.width = width;\n            this.height = height;\n          }\n          get rawDims() {\n            const {\n              viewBox\n            } = this;\n            return (0, _util.shadow)(this, \"rawDims\", {\n              pageWidth: viewBox[2] - viewBox[0],\n              pageHeight: viewBox[3] - viewBox[1],\n              pageX: viewBox[0],\n              pageY: viewBox[1]\n            });\n          }\n          clone() {\n            let {\n              scale = this.scale,\n              rotation = this.rotation,\n              offsetX = this.offsetX,\n              offsetY = this.offsetY,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n          convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n          convertToViewportRectangle(rect) {\n            const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n            const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n          convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n        }\n        exports.PageViewport = PageViewport;\n        class RenderingCancelledException extends _util.BaseException {\n          constructor(msg) {\n            let extraDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            super(msg, \"RenderingCancelledException\");\n            this.extraDelay = extraDelay;\n          }\n        }\n        exports.RenderingCancelledException = RenderingCancelledException;\n        function isDataScheme(url) {\n          const ii = url.length;\n          let i = 0;\n          while (i < ii && url[i].trim() === \"\") {\n            i++;\n          }\n          return url.substring(i, i + 5).toLowerCase() === \"data:\";\n        }\n        function isPdfFile(filename) {\n          return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n        }\n        function getFilenameFromUrl(url) {\n          let onlyStripPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          if (!onlyStripPath) {\n            [url] = url.split(/[#?]/, 1);\n          }\n          return url.substring(url.lastIndexOf(\"/\") + 1);\n        }\n        function getPdfFilenameFromUrl(url) {\n          let defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n          if (typeof url !== \"string\") {\n            return defaultFilename;\n          }\n          if (isDataScheme(url)) {\n            (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n            return defaultFilename;\n          }\n          const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n          const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n          const splitURI = reURI.exec(url);\n          let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n          if (suggestedFilename) {\n            suggestedFilename = suggestedFilename[0];\n            if (suggestedFilename.includes(\"%\")) {\n              try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n              } catch {}\n            }\n          }\n          return suggestedFilename || defaultFilename;\n        }\n        class StatTimer {\n          started = Object.create(null);\n          times = [];\n          time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(`Timer is already running for ${name}`);\n            }\n            this.started[name] = Date.now();\n          }\n          timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(`Timer has not been started for ${name}`);\n            }\n            this.times.push({\n              name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n          toString() {\n            const outBuf = [];\n            let longest = 0;\n            for (const {\n              name\n            } of this.times) {\n              longest = Math.max(name.length, longest);\n            }\n            for (const {\n              name,\n              start,\n              end\n            } of this.times) {\n              outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n            }\n            return outBuf.join(\"\");\n          }\n        }\n        exports.StatTimer = StatTimer;\n        function isValidFetchUrl(url, baseUrl) {\n          try {\n            const {\n              protocol\n            } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            return protocol === \"http:\" || protocol === \"https:\";\n          } catch {\n            return false;\n          }\n        }\n        function noContextMenu(e) {\n          e.preventDefault();\n        }\n        function loadScript(src) {\n          let removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return new Promise((resolve, reject) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n            script.onload = function (evt) {\n              if (removeScriptElement) {\n                script.remove();\n              }\n              resolve(evt);\n            };\n            script.onerror = function () {\n              reject(new Error(`Cannot load script at: ${script.src}`));\n            };\n            (document.head || document.documentElement).append(script);\n          });\n        }\n        function deprecated(details) {\n          console.log(\"Deprecated API usage: \" + details);\n        }\n        let pdfDateStringRegex;\n        class PDFDateString {\n          static toDateObject(input) {\n            if (!input || typeof input !== \"string\") {\n              return null;\n            }\n            pdfDateStringRegex ||= new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            const matches = pdfDateStringRegex.exec(input);\n            if (!matches) {\n              return null;\n            }\n            const year = parseInt(matches[1], 10);\n            let month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            let day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            let hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            let minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            let second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            const universalTimeRelation = matches[7] || \"Z\";\n            let offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            let offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n        }\n        exports.PDFDateString = PDFDateString;\n        function getXfaPageViewport(xfaPage, _ref23) {\n          let {\n            scale = 1,\n            rotation = 0\n          } = _ref23;\n          const {\n            width,\n            height\n          } = xfaPage.attributes.style;\n          const viewBox = [0, 0, parseInt(width), parseInt(height)];\n          return new PageViewport({\n            viewBox,\n            scale,\n            rotation\n          });\n        }\n        function getRGB(color) {\n          if (color.startsWith(\"#\")) {\n            const colorRGB = parseInt(color.slice(1), 16);\n            return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n          }\n          if (color.startsWith(\"rgb(\")) {\n            return color.slice(4, -1).split(\",\").map(x => parseInt(x));\n          }\n          if (color.startsWith(\"rgba(\")) {\n            return color.slice(5, -1).split(\",\").map(x => parseInt(x)).slice(0, 3);\n          }\n          (0, _util.warn)(`Not a valid color format: \"${color}\"`);\n          return [0, 0, 0];\n        }\n        function getColorValues(colors) {\n          const span = document.createElement(\"span\");\n          span.style.visibility = \"hidden\";\n          document.body.append(span);\n          for (const name of colors.keys()) {\n            span.style.color = name;\n            const computedColor = window.getComputedStyle(span).color;\n            colors.set(name, getRGB(computedColor));\n          }\n          span.remove();\n        }\n        function getCurrentTransform(ctx) {\n          const {\n            a,\n            b,\n            c,\n            d,\n            e,\n            f\n          } = ctx.getTransform();\n          return [a, b, c, d, e, f];\n        }\n        function getCurrentTransformInverse(ctx) {\n          const {\n            a,\n            b,\n            c,\n            d,\n            e,\n            f\n          } = ctx.getTransform().invertSelf();\n          return [a, b, c, d, e, f];\n        }\n        function setLayerDimensions(div, viewport) {\n          let mustFlip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          let mustRotate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n          if (viewport instanceof PageViewport) {\n            const {\n              pageWidth,\n              pageHeight\n            } = viewport.rawDims;\n            const {\n              style\n            } = div;\n            const useRound = _util.FeatureTest.isCSSRoundSupported;\n            const w = `var(--scale-factor) * ${pageWidth}px`,\n              h = `var(--scale-factor) * ${pageHeight}px`;\n            const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n              heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n            if (!mustFlip || viewport.rotation % 180 === 0) {\n              style.width = widthStr;\n              style.height = heightStr;\n            } else {\n              style.width = heightStr;\n              style.height = widthStr;\n            }\n          }\n          if (mustRotate) {\n            div.setAttribute(\"data-main-rotation\", viewport.rotation);\n          }\n        }\n\n        /***/\n      }, /* 7 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseFilterFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n        var _util = __w_pdfjs_require__(1);\n        class BaseFilterFactory {\n          constructor() {\n            if (this.constructor === BaseFilterFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseFilterFactory.\");\n            }\n          }\n          addFilter(maps) {\n            return \"none\";\n          }\n          addHCMFilter(fgColor, bgColor) {\n            return \"none\";\n          }\n          addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n            return \"none\";\n          }\n          destroy() {\n            let keepHCM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          }\n        }\n        exports.BaseFilterFactory = BaseFilterFactory;\n        class BaseCanvasFactory {\n          constructor() {\n            if (this.constructor === BaseCanvasFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n            }\n          }\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            const canvas = this._createCanvas(width, height);\n            return {\n              canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n          reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n          destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n          _createCanvas(width, height) {\n            (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n          }\n        }\n        exports.BaseCanvasFactory = BaseCanvasFactory;\n        class BaseCMapReaderFactory {\n          constructor(_ref24) {\n            let {\n              baseUrl = null,\n              isCompressed = true\n            } = _ref24;\n            if (this.constructor === BaseCMapReaderFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n            }\n            this.baseUrl = baseUrl;\n            this.isCompressed = isCompressed;\n          }\n          async fetch(_ref25) {\n            let {\n              name\n            } = _ref25;\n            if (!this.baseUrl) {\n              throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n            }\n            if (!name) {\n              throw new Error(\"CMap name must be specified.\");\n            }\n            const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n            const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n            return this._fetchData(url, compressionType).catch(reason => {\n              throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n            });\n          }\n          _fetchData(url, compressionType) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n        }\n        exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n        class BaseStandardFontDataFactory {\n          constructor(_ref26) {\n            let {\n              baseUrl = null\n            } = _ref26;\n            if (this.constructor === BaseStandardFontDataFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n            }\n            this.baseUrl = baseUrl;\n          }\n          async fetch(_ref27) {\n            let {\n              filename\n            } = _ref27;\n            if (!this.baseUrl) {\n              throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n            }\n            if (!filename) {\n              throw new Error(\"Font filename must be specified.\");\n            }\n            const url = `${this.baseUrl}${filename}`;\n            return this._fetchData(url).catch(reason => {\n              throw new Error(`Unable to load font data at: ${url}`);\n            });\n          }\n          _fetchData(url) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n        }\n        exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n        class BaseSVGFactory {\n          constructor() {\n            if (this.constructor === BaseSVGFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n            }\n          }\n          create(width, height) {\n            let skipDimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid SVG dimensions\");\n            }\n            const svg = this._createSVG(\"svg:svg\");\n            svg.setAttribute(\"version\", \"1.1\");\n            if (!skipDimensions) {\n              svg.setAttribute(\"width\", `${width}px`);\n              svg.setAttribute(\"height\", `${height}px`);\n            }\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n            return svg;\n          }\n          createElement(type) {\n            if (typeof type !== \"string\") {\n              throw new Error(\"Invalid SVG element type\");\n            }\n            return this._createSVG(type);\n          }\n          _createSVG(type) {\n            (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n          }\n        }\n        exports.BaseSVGFactory = BaseSVGFactory;\n\n        /***/\n      }, /* 8 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MurmurHash3_64 = void 0;\n        var _util = __w_pdfjs_require__(1);\n        const SEED = 0xc3d2e1f0;\n        const MASK_HIGH = 0xffff0000;\n        const MASK_LOW = 0xffff;\n        class MurmurHash3_64 {\n          constructor(seed) {\n            this.h1 = seed ? seed & 0xffffffff : SEED;\n            this.h2 = seed ? seed & 0xffffffff : SEED;\n          }\n          update(input) {\n            let data, length;\n            if (typeof input === \"string\") {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n              for (let i = 0, ii = input.length; i < ii; i++) {\n                const code = input.charCodeAt(i);\n                if (code <= 0xff) {\n                  data[length++] = code;\n                } else {\n                  data[length++] = code >>> 8;\n                  data[length++] = code & 0xff;\n                }\n              }\n            } else if ((0, _util.isArrayBuffer)(input)) {\n              data = input.slice();\n              length = data.byteLength;\n            } else {\n              throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n            }\n            const blockCounts = length >> 2;\n            const tailLength = length - blockCounts * 4;\n            const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            let k1 = 0,\n              k2 = 0;\n            let h1 = this.h1,\n              h2 = this.h2;\n            const C1 = 0xcc9e2d51,\n              C2 = 0x1b873593;\n            const C1_LOW = C1 & MASK_LOW,\n              C2_LOW = C2 & MASK_LOW;\n            for (let i = 0; i < blockCounts; i++) {\n              if (i & 1) {\n                k1 = dataUint32[i];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                h1 ^= k1;\n                h1 = h1 << 13 | h1 >>> 19;\n                h1 = h1 * 5 + 0xe6546b64;\n              } else {\n                k2 = dataUint32[i];\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                k2 = k2 << 15 | k2 >>> 17;\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                h2 ^= k2;\n                h2 = h2 << 13 | h2 >>> 19;\n                h2 = h2 * 5 + 0xe6546b64;\n              }\n            }\n            k1 = 0;\n            switch (tailLength) {\n              case 3:\n                k1 ^= data[blockCounts * 4 + 2] << 16;\n              case 2:\n                k1 ^= data[blockCounts * 4 + 1] << 8;\n              case 1:\n                k1 ^= data[blockCounts * 4];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                if (blockCounts & 1) {\n                  h1 ^= k1;\n                } else {\n                  h2 ^= k1;\n                }\n            }\n            this.h1 = h1;\n            this.h2 = h2;\n          }\n          hexdigest() {\n            let h1 = this.h1,\n              h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n          }\n        }\n        exports.MurmurHash3_64 = MurmurHash3_64;\n\n        /***/\n      }, /* 9 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FontLoader = exports.FontFaceObject = void 0;\n        var _util = __w_pdfjs_require__(1);\n        class FontLoader {\n          #systemFonts = new Set();\n          constructor(_ref28) {\n            let {\n              ownerDocument = globalThis.document,\n              styleElement = null\n            } = _ref28;\n            this._document = ownerDocument;\n            this.nativeFontFaces = new Set();\n            this.styleElement = null;\n            this.loadingRequests = [];\n            this.loadTestFontId = 0;\n          }\n          addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.add(nativeFontFace);\n            this._document.fonts.add(nativeFontFace);\n          }\n          removeNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.delete(nativeFontFace);\n            this._document.fonts.delete(nativeFontFace);\n          }\n          insertRule(rule) {\n            if (!this.styleElement) {\n              this.styleElement = this._document.createElement(\"style\");\n              this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n            }\n            const styleSheet = this.styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n          clear() {\n            for (const nativeFontFace of this.nativeFontFaces) {\n              this._document.fonts.delete(nativeFontFace);\n            }\n            this.nativeFontFaces.clear();\n            this.#systemFonts.clear();\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n          async loadSystemFont(info) {\n            if (!info || this.#systemFonts.has(info.loadedName)) {\n              return;\n            }\n            (0, _util.assert)(!this.disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n            if (this.isFontLoadingAPISupported) {\n              const {\n                loadedName,\n                src,\n                style\n              } = info;\n              const fontFace = new FontFace(loadedName, src, style);\n              this.addNativeFontFace(fontFace);\n              try {\n                await fontFace.load();\n                this.#systemFonts.add(loadedName);\n              } catch {\n                (0, _util.warn)(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n                this.removeNativeFontFace(fontFace);\n              }\n              return;\n            }\n            (0, _util.unreachable)(\"Not implemented: loadSystemFont without the Font Loading API.\");\n          }\n          async bind(font) {\n            if (font.attached || font.missingFile && !font.systemFontInfo) {\n              return;\n            }\n            font.attached = true;\n            if (font.systemFontInfo) {\n              await this.loadSystemFont(font.systemFontInfo);\n              return;\n            }\n            if (this.isFontLoadingAPISupported) {\n              const nativeFontFace = font.createNativeFontFace();\n              if (nativeFontFace) {\n                this.addNativeFontFace(nativeFontFace);\n                try {\n                  await nativeFontFace.loaded;\n                } catch (ex) {\n                  (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                  font.disableFontFace = true;\n                  throw ex;\n                }\n              }\n              return;\n            }\n            const rule = font.createFontFaceRule();\n            if (rule) {\n              this.insertRule(rule);\n              if (this.isSyncFontLoadingSupported) {\n                return;\n              }\n              await new Promise(resolve => {\n                const request = this._queueLoadingCallback(resolve);\n                this._prepareFontLoadEvent(font, request);\n              });\n            }\n          }\n          get isFontLoadingAPISupported() {\n            const hasFonts = !!this._document?.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n          }\n          get isSyncFontLoadingSupported() {\n            let supported = false;\n            if (_util.isNodeJS) {\n              supported = true;\n            } else if (typeof navigator !== \"undefined\" && /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)) {\n              supported = true;\n            }\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n          _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n              while (loadingRequests.length > 0 && loadingRequests[0].done) {\n                const otherRequest = loadingRequests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n            const {\n              loadingRequests\n            } = this;\n            const request = {\n              done: false,\n              complete: completeRequest,\n              callback\n            };\n            loadingRequests.push(request);\n            return request;\n          }\n          get _loadTestFont() {\n            const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            return (0, _util.shadow)(this, \"_loadTestFont\", testFont);\n          }\n          _prepareFontLoadEvent(font, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n            function spliceString(s, offset, remove, insert) {\n              const chunk1 = s.substring(0, offset);\n              const chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n            let i, ii;\n            const canvas = this._document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            const ctx = canvas.getContext(\"2d\");\n            let called = 0;\n            function isFontReady(name, callback) {\n              if (++called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              const imageData = ctx.getImageData(0, 0, 1, 1);\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n            const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n            let data = this._loadTestFont;\n            const COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            const CFF_CHECKSUM_OFFSET = 16;\n            const XXXX_VALUE = 0x58585858;\n            let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            const url = `url(data:font/opentype;base64,${btoa(data)});`;\n            const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n            this.insertRule(rule);\n            const div = this._document.createElement(\"div\");\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n            for (const name of [font.loadedName, loadTestFontId]) {\n              const span = this._document.createElement(\"span\");\n              span.textContent = \"Hi\";\n              span.style.fontFamily = name;\n              div.append(span);\n            }\n            this._document.body.append(div);\n            isFontReady(loadTestFontId, () => {\n              div.remove();\n              request.complete();\n            });\n          }\n        }\n        exports.FontLoader = FontLoader;\n        class FontFaceObject {\n          constructor(translatedData, _ref29) {\n            let {\n              isEvalSupported = true,\n              disableFontFace = false,\n              ignoreErrors = false,\n              inspectFont = null\n            } = _ref29;\n            this.compiledGlyphs = Object.create(null);\n            for (const i in translatedData) {\n              this[i] = translatedData[i];\n            }\n            this.isEvalSupported = isEvalSupported !== false;\n            this.disableFontFace = disableFontFace === true;\n            this.ignoreErrors = ignoreErrors === true;\n            this._inspectFont = inspectFont;\n          }\n          createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            let nativeFontFace;\n            if (!this.cssFontInfo) {\n              nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            } else {\n              const css = {\n                weight: this.cssFontInfo.fontWeight\n              };\n              if (this.cssFontInfo.italicAngle) {\n                css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n              }\n              nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n            }\n            this._inspectFont?.(this);\n            return nativeFontFace;\n          }\n          createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            const data = (0, _util.bytesToString)(this.data);\n            const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n            let rule;\n            if (!this.cssFontInfo) {\n              rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n            } else {\n              let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n              if (this.cssFontInfo.italicAngle) {\n                css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n              }\n              rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n            }\n            this._inspectFont?.(this, url);\n            return rule;\n          }\n          getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n            let cmds;\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n              (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n            if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n              const jsBuf = [];\n              for (const current of cmds) {\n                const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n              }\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n            }\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (const current of cmds) {\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n        }\n        exports.FontFaceObject = FontFaceObject;\n\n        /***/\n      }, /* 10 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NodeStandardFontDataFactory = exports.NodeFilterFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n        var _base_factory = __w_pdfjs_require__(7);\n        var _util = __w_pdfjs_require__(1);\n        ;\n        ;\n        const fetchData = function (url) {\n          return new Promise((resolve, reject) => {\n            const fs = require(\"fs\");\n            fs.readFile(url, (error, data) => {\n              if (error || !data) {\n                reject(new Error(error));\n                return;\n              }\n              resolve(new Uint8Array(data));\n            });\n          });\n        };\n        class NodeFilterFactory extends _base_factory.BaseFilterFactory {}\n        exports.NodeFilterFactory = NodeFilterFactory;\n        class NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n          _createCanvas(width, height) {\n            const Canvas = require(\"canvas\");\n            return Canvas.createCanvas(width, height);\n          }\n        }\n        exports.NodeCanvasFactory = NodeCanvasFactory;\n        class NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n        }\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n        class NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url);\n          }\n        }\n        exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n        /***/\n      }, /* 11 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.CanvasGraphics = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _pattern_helper = __w_pdfjs_require__(12);\n        var _image_utils = __w_pdfjs_require__(13);\n        const MIN_FONT_SIZE = 16;\n        const MAX_FONT_SIZE = 100;\n        const MAX_GROUP_SIZE = 4096;\n        const EXECUTION_TIME = 15;\n        const EXECUTION_STEPS = 10;\n        const MAX_SIZE_TO_COMPILE = 1000;\n        const FULL_CHUNK_HEIGHT = 16;\n        function mirrorContextOperations(ctx, destCtx) {\n          if (ctx._removeMirroring) {\n            throw new Error(\"Context is already forwarding operations.\");\n          }\n          ctx.__originalSave = ctx.save;\n          ctx.__originalRestore = ctx.restore;\n          ctx.__originalRotate = ctx.rotate;\n          ctx.__originalScale = ctx.scale;\n          ctx.__originalTranslate = ctx.translate;\n          ctx.__originalTransform = ctx.transform;\n          ctx.__originalSetTransform = ctx.setTransform;\n          ctx.__originalResetTransform = ctx.resetTransform;\n          ctx.__originalClip = ctx.clip;\n          ctx.__originalMoveTo = ctx.moveTo;\n          ctx.__originalLineTo = ctx.lineTo;\n          ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n          ctx.__originalRect = ctx.rect;\n          ctx.__originalClosePath = ctx.closePath;\n          ctx.__originalBeginPath = ctx.beginPath;\n          ctx._removeMirroring = () => {\n            ctx.save = ctx.__originalSave;\n            ctx.restore = ctx.__originalRestore;\n            ctx.rotate = ctx.__originalRotate;\n            ctx.scale = ctx.__originalScale;\n            ctx.translate = ctx.__originalTranslate;\n            ctx.transform = ctx.__originalTransform;\n            ctx.setTransform = ctx.__originalSetTransform;\n            ctx.resetTransform = ctx.__originalResetTransform;\n            ctx.clip = ctx.__originalClip;\n            ctx.moveTo = ctx.__originalMoveTo;\n            ctx.lineTo = ctx.__originalLineTo;\n            ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n            ctx.rect = ctx.__originalRect;\n            ctx.closePath = ctx.__originalClosePath;\n            ctx.beginPath = ctx.__originalBeginPath;\n            delete ctx._removeMirroring;\n          };\n          ctx.save = function ctxSave() {\n            destCtx.save();\n            this.__originalSave();\n          };\n          ctx.restore = function ctxRestore() {\n            destCtx.restore();\n            this.__originalRestore();\n          };\n          ctx.translate = function ctxTranslate(x, y) {\n            destCtx.translate(x, y);\n            this.__originalTranslate(x, y);\n          };\n          ctx.scale = function ctxScale(x, y) {\n            destCtx.scale(x, y);\n            this.__originalScale(x, y);\n          };\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            destCtx.transform(a, b, c, d, e, f);\n            this.__originalTransform(a, b, c, d, e, f);\n          };\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            destCtx.setTransform(a, b, c, d, e, f);\n            this.__originalSetTransform(a, b, c, d, e, f);\n          };\n          ctx.resetTransform = function ctxResetTransform() {\n            destCtx.resetTransform();\n            this.__originalResetTransform();\n          };\n          ctx.rotate = function ctxRotate(angle) {\n            destCtx.rotate(angle);\n            this.__originalRotate(angle);\n          };\n          ctx.clip = function ctxRotate(rule) {\n            destCtx.clip(rule);\n            this.__originalClip(rule);\n          };\n          ctx.moveTo = function (x, y) {\n            destCtx.moveTo(x, y);\n            this.__originalMoveTo(x, y);\n          };\n          ctx.lineTo = function (x, y) {\n            destCtx.lineTo(x, y);\n            this.__originalLineTo(x, y);\n          };\n          ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n            this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          };\n          ctx.rect = function (x, y, width, height) {\n            destCtx.rect(x, y, width, height);\n            this.__originalRect(x, y, width, height);\n          };\n          ctx.closePath = function () {\n            destCtx.closePath();\n            this.__originalClosePath();\n          };\n          ctx.beginPath = function () {\n            destCtx.beginPath();\n            this.__originalBeginPath();\n          };\n        }\n        class CachedCanvases {\n          constructor(canvasFactory) {\n            this.canvasFactory = canvasFactory;\n            this.cache = Object.create(null);\n          }\n          getCanvas(id, width, height) {\n            let canvasEntry;\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n            return canvasEntry;\n          }\n          delete(id) {\n            delete this.cache[id];\n          }\n          clear() {\n            for (const id in this.cache) {\n              const canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n        }\n        function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n          const [a, b, c, d, tx, ty] = (0, _display_utils.getCurrentTransform)(ctx);\n          if (b === 0 && c === 0) {\n            const tlX = destX * a + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destY * d + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destX + destW) * a + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destY + destH) * d + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rWidth, rHeight];\n          }\n          if (a === 0 && d === 0) {\n            const tlX = destY * c + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destX * b + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destY + destH) * c + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destX + destW) * b + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rHeight, rWidth];\n          }\n          ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n          const scaleX = Math.hypot(a, b);\n          const scaleY = Math.hypot(c, d);\n          return [scaleX * destW, scaleY * destH];\n        }\n        function compileType3Glyph(imgData) {\n          const {\n            width,\n            height\n          } = imgData;\n          if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n            return null;\n          }\n          const POINT_TO_PROCESS_LIMIT = 1000;\n          const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n          const width1 = width + 1;\n          let points = new Uint8Array(width1 * (height + 1));\n          let i, j, j0;\n          const lineSize = width + 7 & ~7;\n          let data = new Uint8Array(lineSize * height),\n            pos = 0;\n          for (const elem of imgData.data) {\n            let mask = 128;\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n          let count = 0;\n          pos = 0;\n          if (data[pos] !== 0) {\n            points[0] = 1;\n            ++count;\n          }\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j] = data[pos] ? 2 : 1;\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos] !== 0) {\n            points[j] = 2;\n            ++count;\n          }\n          for (i = 1; i < height; i++) {\n            pos = i * lineSize;\n            j0 = i * width1;\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0] = data[pos] ? 1 : 8;\n              ++count;\n            }\n            let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n            for (j = 1; j < width; j++) {\n              sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n              if (POINT_TYPES[sum]) {\n                points[j0 + j] = POINT_TYPES[sum];\n                ++count;\n              }\n              pos++;\n            }\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0 + j] = data[pos] ? 2 : 4;\n              ++count;\n            }\n            if (count > POINT_TO_PROCESS_LIMIT) {\n              return null;\n            }\n          }\n          pos = lineSize * (height - 1);\n          j0 = i * width1;\n          if (data[pos] !== 0) {\n            points[j0] = 8;\n            ++count;\n          }\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j0 + j] = data[pos] ? 4 : 8;\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos] !== 0) {\n            points[j0 + j] = 4;\n            ++count;\n          }\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n          const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n          const path = new Path2D();\n          for (i = 0; count && i <= height; i++) {\n            let p = i * width1;\n            const end = p + width;\n            while (p < end && !points[p]) {\n              p++;\n            }\n            if (p === end) {\n              continue;\n            }\n            path.moveTo(p % width1, i);\n            const p0 = p;\n            let type = points[p];\n            do {\n              const step = steps[type];\n              do {\n                p += step;\n              } while (!points[p]);\n              const pp = points[p];\n              if (pp !== 5 && pp !== 10) {\n                type = pp;\n                points[p] = 0;\n              } else {\n                type = pp & 0x33 * type >> 4;\n                points[p] &= type >> 2 | type << 2;\n              }\n              path.lineTo(p % width1, p / width1 | 0);\n              if (!points[p]) {\n                --count;\n              }\n            } while (p0 !== p);\n            --i;\n          }\n          data = null;\n          points = null;\n          const drawOutline = function (c) {\n            c.save();\n            c.scale(1 / width, -1 / height);\n            c.translate(0, -height);\n            c.fill(path);\n            c.beginPath();\n            c.restore();\n          };\n          return drawOutline;\n        }\n        class CanvasExtraState {\n          constructor(width, height) {\n            this.alphaIsShape = false;\n            this.fontSize = 0;\n            this.fontSizeScale = 1;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.textMatrixScale = 1;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textRise = 0;\n            this.fillColor = \"#000000\";\n            this.strokeColor = \"#000000\";\n            this.patternFill = false;\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.activeSMask = null;\n            this.transferMaps = \"none\";\n            this.startNewPathAndClipBox([0, 0, width, height]);\n          }\n          clone() {\n            const clone = Object.create(this);\n            clone.clipBox = this.clipBox.slice();\n            return clone;\n          }\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n          updatePathMinMax(transform, x, y) {\n            [x, y] = _util.Util.applyTransform([x, y], transform);\n            this.minX = Math.min(this.minX, x);\n            this.minY = Math.min(this.minY, y);\n            this.maxX = Math.max(this.maxX, x);\n            this.maxY = Math.max(this.maxY, y);\n          }\n          updateRectMinMax(transform, rect) {\n            const p1 = _util.Util.applyTransform(rect, transform);\n            const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n            this.minX = Math.min(this.minX, p1[0], p2[0]);\n            this.minY = Math.min(this.minY, p1[1], p2[1]);\n            this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n            this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n          }\n          updateScalingPathMinMax(transform, minMax) {\n            _util.Util.scaleMinMax(transform, minMax);\n            this.minX = Math.min(this.minX, minMax[0]);\n            this.maxX = Math.max(this.maxX, minMax[1]);\n            this.minY = Math.min(this.minY, minMax[2]);\n            this.maxY = Math.max(this.maxY, minMax[3]);\n          }\n          updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n            const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n            if (minMax) {\n              minMax[0] = Math.min(minMax[0], box[0], box[2]);\n              minMax[1] = Math.max(minMax[1], box[0], box[2]);\n              minMax[2] = Math.min(minMax[2], box[1], box[3]);\n              minMax[3] = Math.max(minMax[3], box[1], box[3]);\n              return;\n            }\n            this.updateRectMinMax(transform, box);\n          }\n          getPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const box = [this.minX, this.minY, this.maxX, this.maxY];\n            if (pathType === _pattern_helper.PathType.STROKE) {\n              if (!transform) {\n                (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n              }\n              const scale = _util.Util.singularValueDecompose2dScale(transform);\n              const xStrokePad = scale[0] * this.lineWidth / 2;\n              const yStrokePad = scale[1] * this.lineWidth / 2;\n              box[0] -= xStrokePad;\n              box[1] -= yStrokePad;\n              box[2] += xStrokePad;\n              box[3] += yStrokePad;\n            }\n            return box;\n          }\n          updateClipFromPath() {\n            const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n            this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n          }\n          isEmptyClip() {\n            return this.minX === Infinity;\n          }\n          startNewPathAndClipBox(box) {\n            this.clipBox = box;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = 0;\n            this.maxY = 0;\n          }\n          getClippedPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n          }\n        }\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n          const height = imgData.height,\n            width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0,\n            destPos;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          let i, j, thisChunkHeight, elemsInThisChunk;\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            const srcLength = src.byteLength;\n            const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            const dest32DataLength = dest32.length;\n            const fullSrcDiff = width + 7 >> 3;\n            const white = 0xffffffff;\n            const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n              for (j = 0; j < thisChunkHeight; j++) {\n                const srcDiff = srcLength - srcPos;\n                let k = 0;\n                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                const kEndUnrolled = kEnd & ~7;\n                let mask = 0;\n                let srcByte = 0;\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n              destPos = 0;\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n        function putBinaryImageMask(ctx, imgData) {\n          if (imgData.bitmap) {\n            ctx.drawImage(imgData.bitmap, 0, 0);\n            return;\n          }\n          const height = imgData.height,\n            width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          for (let i = 0; i < totalChunks; i++) {\n            const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            ({\n              srcPos\n            } = (0, _image_utils.convertBlackAndWhiteToRGBA)({\n              src,\n              srcPos,\n              dest,\n              width,\n              height: thisChunkHeight,\n              nonBlackColor: 0\n            }));\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n        function copyCtxState(sourceCtx, destCtx) {\n          const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\", \"filter\"];\n          for (const property of properties) {\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n          if (!_util.isNodeJS) {\n            const {\n              filter\n            } = ctx;\n            if (filter !== \"none\" && filter !== \"\") {\n              ctx.filter = \"none\";\n            }\n          }\n        }\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          const length = bytes.length;\n          for (let i = 3; i < length; i += 4) {\n            const alpha = bytes[i];\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              const alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          const scale = 1 / 255;\n          for (let i = 3; i < length; i += 4) {\n            const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          for (let i = 3; i < length; i += 4) {\n            const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n          const hasBackdrop = !!backdrop;\n          const r0 = hasBackdrop ? backdrop[0] : 0;\n          const g0 = hasBackdrop ? backdrop[1] : 0;\n          const b0 = hasBackdrop ? backdrop[2] : 0;\n          const composeFn = subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n          const PIXELS_TO_PROCESS = 1048576;\n          const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n          for (let row = 0; row < height; row += chunkSize) {\n            const chunkHeight = Math.min(chunkSize, height - row);\n            const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n            const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n            composeFn(maskData.data, layerData.data, transferMap);\n            layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n          }\n        }\n        function composeSMask(ctx, smask, layerCtx, layerBox) {\n          const layerOffsetX = layerBox[0];\n          const layerOffsetY = layerBox[1];\n          const layerWidth = layerBox[2] - layerOffsetX;\n          const layerHeight = layerBox[3] - layerOffsetY;\n          if (layerWidth === 0 || layerHeight === 0) {\n            return;\n          }\n          genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n          ctx.save();\n          ctx.globalAlpha = 1;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(layerCtx.canvas, 0, 0);\n          ctx.restore();\n        }\n        function getImageSmoothingEnabled(transform, interpolate) {\n          const scale = _util.Util.singularValueDecompose2dScale(transform);\n          scale[0] = Math.fround(scale[0]);\n          scale[1] = Math.fround(scale[1]);\n          const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n          if (interpolate !== undefined) {\n            return interpolate;\n          } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n            return true;\n          }\n          return false;\n        }\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const NORMAL_CLIP = {};\n        const EO_CLIP = {};\n        class CanvasGraphics {\n          constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, _ref30, annotationCanvasMap, pageColors) {\n            let {\n              optionalContentConfig,\n              markedContentStack = null\n            } = _ref30;\n            this.ctx = canvasCtx;\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.stateStack = [];\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.res = null;\n            this.xobjs = null;\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.canvasFactory = canvasFactory;\n            this.filterFactory = filterFactory;\n            this.groupStack = [];\n            this.processingType3 = null;\n            this.baseTransform = null;\n            this.baseTransformStack = [];\n            this.groupLevel = 0;\n            this.smaskStack = [];\n            this.smaskCounter = 0;\n            this.tempSMask = null;\n            this.suspendedCtx = null;\n            this.contentVisible = true;\n            this.markedContentStack = markedContentStack || [];\n            this.optionalContentConfig = optionalContentConfig;\n            this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n            this.cachedPatterns = new Map();\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.viewportScale = 1;\n            this.outputScaleX = 1;\n            this.outputScaleY = 1;\n            this.pageColors = pageColors;\n            this._cachedScaleForStroking = [-1, 0];\n            this._cachedGetSinglePixelWidth = null;\n            this._cachedBitmapsMap = new Map();\n          }\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n            return fallback;\n          }\n          beginDrawing(_ref31) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref31;\n            const width = this.ctx.canvas.width;\n            const height = this.ctx.canvas.height;\n            const savedFillStyle = this.ctx.fillStyle;\n            this.ctx.fillStyle = background || \"#ffffff\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.fillStyle = savedFillStyle;\n            if (transparency) {\n              const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform(...(0, _display_utils.getCurrentTransform)(this.compositeCtx));\n            }\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n            if (transform) {\n              this.ctx.transform(...transform);\n              this.outputScaleX = transform[0];\n              this.outputScaleY = transform[0];\n            }\n            this.ctx.transform(...viewport.transform);\n            this.viewportScale = viewport.scale;\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n          }\n          executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            let i = executionStartIdx || 0;\n            const argsArrayLen = argsArray.length;\n            if (argsArrayLen === i) {\n              return i;\n            }\n            const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            let steps = 0;\n            const commonObjs = this.commonObjs;\n            const objs = this.objs;\n            let fnId;\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n              fnId = fnArray[i];\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n              i++;\n              if (i === argsArrayLen) {\n                return i;\n              }\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n                steps = 0;\n              }\n            }\n          }\n          #restoreInitialState() {\n            while (this.stateStack.length || this.inSMaskMode) {\n              this.restore();\n            }\n            this.ctx.restore();\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n          }\n          endDrawing() {\n            this.#restoreInitialState();\n            this.cachedCanvases.clear();\n            this.cachedPatterns.clear();\n            for (const cache of this._cachedBitmapsMap.values()) {\n              for (const canvas of cache.values()) {\n                if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n                  canvas.width = canvas.height = 0;\n                }\n              }\n              cache.clear();\n            }\n            this._cachedBitmapsMap.clear();\n            this.#drawFilter();\n          }\n          #drawFilter() {\n            if (this.pageColors) {\n              const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n              if (hcmFilterId !== \"none\") {\n                const savedFilter = this.ctx.filter;\n                this.ctx.filter = hcmFilterId;\n                this.ctx.drawImage(this.ctx.canvas, 0, 0);\n                this.ctx.filter = savedFilter;\n              }\n            }\n          }\n          _scaleImage(img, inverseTransform) {\n            const width = img.width;\n            const height = img.height;\n            let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n            let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n            let paintWidth = width,\n              paintHeight = height;\n            let tmpCanvasId = \"prescale1\";\n            let tmpCanvas, tmpCtx;\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              let newWidth = paintWidth,\n                newHeight = paintHeight;\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n                heightScale /= paintHeight / newHeight;\n              }\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              img = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n            return {\n              img,\n              paintWidth,\n              paintHeight\n            };\n          }\n          _createMaskCanvas(img) {\n            const ctx = this.ctx;\n            const {\n              width,\n              height\n            } = img;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            let cache, cacheKey, scaled, maskCanvas;\n            if ((img.bitmap || img.data) && img.count > 1) {\n              const mainKey = img.bitmap || img.data.buffer;\n              cacheKey = JSON.stringify(isPatternFill ? currentTransform : [currentTransform.slice(0, 4), fillColor]);\n              cache = this._cachedBitmapsMap.get(mainKey);\n              if (!cache) {\n                cache = new Map();\n                this._cachedBitmapsMap.set(mainKey, cache);\n              }\n              const cachedImage = cache.get(cacheKey);\n              if (cachedImage && !isPatternFill) {\n                const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n                const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n                return {\n                  canvas: cachedImage,\n                  offsetX,\n                  offsetY\n                };\n              }\n              scaled = cachedImage;\n            }\n            if (!scaled) {\n              maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              putBinaryImageMask(maskCanvas.context, img);\n            }\n            let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n            maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n            const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n            const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n            const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n            const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n            const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n            const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n            const fillCtx = fillCanvas.context;\n            const offsetX = Math.min(cord1[0], cord2[0]);\n            const offsetY = Math.min(cord1[1], cord2[1]);\n            fillCtx.translate(-offsetX, -offsetY);\n            fillCtx.transform(...maskToCanvas);\n            if (!scaled) {\n              scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n              scaled = scaled.img;\n              if (cache && isPatternFill) {\n                cache.set(cacheKey, scaled);\n              }\n            }\n            fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n            drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n            fillCtx.globalCompositeOperation = \"source-in\";\n            const inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n            fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n            fillCtx.fillRect(0, 0, width, height);\n            if (cache && !isPatternFill) {\n              this.cachedCanvases.delete(\"fillCanvas\");\n              cache.set(cacheKey, fillCanvas.canvas);\n            }\n            return {\n              canvas: fillCanvas.canvas,\n              offsetX: Math.round(offsetX),\n              offsetY: Math.round(offsetY)\n            };\n          }\n          setLineWidth(width) {\n            if (width !== this.current.lineWidth) {\n              this._cachedScaleForStroking[0] = -1;\n            }\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          }\n          setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          }\n          setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          }\n          setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          }\n          setDash(dashArray, dashPhase) {\n            const ctx = this.ctx;\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          }\n          setRenderingIntent(intent) {}\n          setFlatness(flatness) {}\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n                case \"CA\":\n                  this.current.strokeAlpha = value;\n                  break;\n                case \"ca\":\n                  this.current.fillAlpha = value;\n                  this.ctx.globalAlpha = value;\n                  break;\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n                case \"SMask\":\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  this.tempSMask = null;\n                  this.checkSMaskState();\n                  break;\n                case \"TR\":\n                  this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n                  break;\n              }\n            }\n          }\n          get inSMaskMode() {\n            return !!this.suspendedCtx;\n          }\n          checkSMaskState() {\n            const inSMaskMode = this.inSMaskMode;\n            if (this.current.activeSMask && !inSMaskMode) {\n              this.beginSMaskMode();\n            } else if (!this.current.activeSMask && inSMaskMode) {\n              this.endSMaskMode();\n            }\n          }\n          beginSMaskMode() {\n            if (this.inSMaskMode) {\n              throw new Error(\"beginSMaskMode called while already in smask mode\");\n            }\n            const drawnWidth = this.ctx.canvas.width;\n            const drawnHeight = this.ctx.canvas.height;\n            const cacheId = \"smaskGroupAt\" + this.groupLevel;\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            this.suspendedCtx = this.ctx;\n            this.ctx = scratchCanvas.context;\n            const ctx = this.ctx;\n            ctx.setTransform(...(0, _display_utils.getCurrentTransform)(this.suspendedCtx));\n            copyCtxState(this.suspendedCtx, ctx);\n            mirrorContextOperations(ctx, this.suspendedCtx);\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          }\n          endSMaskMode() {\n            if (!this.inSMaskMode) {\n              throw new Error(\"endSMaskMode called while not in smask mode\");\n            }\n            this.ctx._removeMirroring();\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.ctx = this.suspendedCtx;\n            this.suspendedCtx = null;\n          }\n          compose(dirtyBox) {\n            if (!this.current.activeSMask) {\n              return;\n            }\n            if (!dirtyBox) {\n              dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n            } else {\n              dirtyBox[0] = Math.floor(dirtyBox[0]);\n              dirtyBox[1] = Math.floor(dirtyBox[1]);\n              dirtyBox[2] = Math.ceil(dirtyBox[2]);\n              dirtyBox[3] = Math.ceil(dirtyBox[3]);\n            }\n            const smask = this.current.activeSMask;\n            const suspendedCtx = this.suspendedCtx;\n            composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n            this.ctx.restore();\n          }\n          save() {\n            if (this.inSMaskMode) {\n              copyCtxState(this.ctx, this.suspendedCtx);\n              this.suspendedCtx.save();\n            } else {\n              this.ctx.save();\n            }\n            const old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n          }\n          restore() {\n            if (this.stateStack.length === 0 && this.inSMaskMode) {\n              this.endSMaskMode();\n            }\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              if (this.inSMaskMode) {\n                this.suspendedCtx.restore();\n                copyCtxState(this.suspendedCtx, this.ctx);\n              } else {\n                this.ctx.restore();\n              }\n              this.checkSMaskState();\n              this.pendingClip = null;\n              this._cachedScaleForStroking[0] = -1;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          }\n          transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedScaleForStroking[0] = -1;\n            this._cachedGetSinglePixelWidth = null;\n          }\n          constructPath(ops, args, minMax) {\n            const ctx = this.ctx;\n            const current = this.current;\n            let x = current.x,\n              y = current.y;\n            let startX, startY;\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n            const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n            for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  ctx.moveTo(x, y);\n                  if (width === 0 || height === 0) {\n                    ctx.lineTo(xw, yh);\n                  } else {\n                    ctx.lineTo(xw, y);\n                    ctx.lineTo(xw, yh);\n                    ctx.lineTo(x, yh);\n                  }\n                  if (!isScalingMatrix) {\n                    current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n                  }\n                  ctx.closePath();\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n                  break;\n                case _util.OPS.curveTo:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  startX = x;\n                  startY = y;\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n            if (isScalingMatrix) {\n              current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n            }\n            current.setCurrentPoint(x, y);\n          }\n          closePath() {\n            this.ctx.closePath();\n          }\n          stroke() {\n            let consumePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            const ctx = this.ctx;\n            const strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n            if (this.contentVisible) {\n              if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n                ctx.save();\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n                this.rescaleAndStroke(false);\n                ctx.restore();\n              } else {\n                this.rescaleAndStroke(true);\n              }\n            }\n            if (consumePath) {\n              this.consumePath(this.current.getClippedPathBoundingBox());\n            }\n            ctx.globalAlpha = this.current.fillAlpha;\n          }\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n          fill() {\n            let consumePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            let needRestore = false;\n            if (isPatternFill) {\n              ctx.save();\n              ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              needRestore = true;\n            }\n            const intersect = this.current.getClippedPathBoundingBox();\n            if (this.contentVisible && intersect !== null) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n            if (needRestore) {\n              ctx.restore();\n            }\n            if (consumePath) {\n              this.consumePath(intersect);\n            }\n          }\n          eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          }\n          fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          }\n          eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          }\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n          closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          }\n          endPath() {\n            this.consumePath();\n          }\n          clip() {\n            this.pendingClip = NORMAL_CLIP;\n          }\n          eoClip() {\n            this.pendingClip = EO_CLIP;\n          }\n          beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n          endText() {\n            const paths = this.pendingTextPaths;\n            const ctx = this.ctx;\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            for (const path of paths) {\n              ctx.setTransform(...path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          }\n          setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          }\n          setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          }\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n          setFont(fontRefName, size) {\n            const fontObj = this.commonObjs.get(fontRefName);\n            const current = this.current;\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n            if (fontObj.isType3Font) {\n              return;\n            }\n            const name = fontObj.loadedName || \"sans-serif\";\n            const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n            let bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            let browserFontSize = size;\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          }\n          setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          }\n          setTextRise(rise) {\n            this.current.textRise = rise;\n          }\n          moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          }\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n          setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.hypot(a, b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n          paintChar(character, x, y, patternTransform) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const textRenderingMode = current.textRenderingMode;\n            const fontSize = current.fontSize / current.fontSizeScale;\n            const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && !font.missingFile;\n            let addToPath;\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n              if (patternTransform) {\n                ctx.setTransform(...patternTransform);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n            if (isAddToPathSet) {\n              const paths = this.pendingTextPaths ||= [];\n              paths.push({\n                transform: (0, _display_utils.getCurrentTransform)(ctx),\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          }\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            const data = ctx.getImageData(0, 0, 10, 10).data;\n            let enabled = false;\n            for (let i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          }\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n            const fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return undefined;\n            }\n            const ctx = this.ctx;\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const glyphsLength = glyphs.length;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            ctx.transform(...current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n            let patternTransform;\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n            let lineWidth = current.lineWidth;\n            const scale = current.textMatrixScale;\n            if (scale === 0 || lineWidth === 0) {\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                lineWidth = this.getSinglePixelWidth();\n              }\n            } else {\n              lineWidth /= scale;\n            }\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n            ctx.lineWidth = lineWidth;\n            if (font.isInvalidPDFjsFont) {\n              const chars = [];\n              let width = 0;\n              for (const glyph of glyphs) {\n                chars.push(glyph.unicode);\n                width += glyph.width;\n              }\n              ctx.fillText(chars.join(\"\"), 0, 0);\n              current.x += width * widthAdvanceScale * textHScale;\n              ctx.restore();\n              this.compose();\n              return undefined;\n            }\n            let x = 0,\n              i;\n            for (i = 0; i < glyphsLength; ++i) {\n              const glyph = glyphs[i];\n              if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              let restoreNeeded = false;\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              const accent = glyph.accent;\n              let scaledX, scaledY;\n              let width = glyph.width;\n              if (vertical) {\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (font.remeasure && width > 0) {\n                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  const characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n                  if (accent) {\n                    const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n              const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n              x += charWidth;\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            ctx.restore();\n            this.compose();\n            return undefined;\n          }\n          showType3Text(glyphs) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            const fontDirection = current.fontDirection;\n            const spacingDir = font.vertical ? 1 : -1;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const textHScale = current.textHScale * fontDirection;\n            const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            const glyphsLength = glyphs.length;\n            const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            let i, glyph, width, spacingLength;\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n            this._cachedScaleForStroking[0] = -1;\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform(...current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n              if (typeof glyph === \"number\") {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const operatorList = font.charProcOperatorList[glyph.operatorListId];\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform(...fontMatrix);\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n              const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n            ctx.restore();\n            this.processingType3 = null;\n          }\n          setCharWidth(xWidth, yWidth) {}\n          setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.ctx.clip();\n            this.endPath();\n          }\n          getColorN_Pattern(IR) {\n            let pattern;\n            if (IR[0] === \"TilingPattern\") {\n              const color = IR[1];\n              const baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n              const canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n                    optionalContentConfig: this.optionalContentConfig,\n                    markedContentStack: this.markedContentStack\n                  });\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = this._getPattern(IR[1], IR[2]);\n            }\n            return pattern;\n          }\n          setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          }\n          setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          }\n          setStrokeRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          }\n          setFillRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          }\n          _getPattern(objId) {\n            let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let pattern;\n            if (this.cachedPatterns.has(objId)) {\n              pattern = this.cachedPatterns.get(objId);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPattern)(this.getObject(objId));\n              this.cachedPatterns.set(objId, pattern);\n            }\n            if (matrix) {\n              pattern.matrix = matrix;\n            }\n            return pattern;\n          }\n          shadingFill(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const ctx = this.ctx;\n            this.save();\n            const pattern = this._getPattern(objId);\n            ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n            const inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n            if (inv) {\n              const {\n                width,\n                height\n              } = ctx.canvas;\n              const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n            this.compose(this.current.getClippedPathBoundingBox());\n            this.restore();\n          }\n          beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          }\n          beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          }\n          paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(...matrix);\n            }\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n              this.clip();\n              this.endPath();\n            }\n          }\n          paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          }\n          beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.save();\n            if (this.inSMaskMode) {\n              this.endSMaskMode();\n              this.current.activeSMask = null;\n            }\n            const currentCtx = this.ctx;\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n            const currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n            if (group.matrix) {\n              currentCtx.transform(...group.matrix);\n            }\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n            let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n            const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            const offsetX = Math.floor(bounds[0]);\n            const offsetY = Math.floor(bounds[1]);\n            let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            let scaleX = 1,\n              scaleY = 1;\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n            this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n            let cacheId = \"groupAt\" + this.groupLevel;\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            const groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform(...currentTransform);\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n              currentCtx.save();\n            }\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          }\n          endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.groupLevel--;\n            const groupCtx = this.ctx;\n            const ctx = this.groupStack.pop();\n            this.ctx = ctx;\n            this.ctx.imageSmoothingEnabled = false;\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n              this.restore();\n            } else {\n              this.ctx.restore();\n              const currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n              this.restore();\n              this.ctx.save();\n              this.ctx.setTransform(...currentMtx);\n              const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n              this.ctx.restore();\n              this.compose(dirtyBox);\n            }\n          }\n          beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n            this.#restoreInitialState();\n            resetCtxToDefault(this.ctx);\n            this.ctx.save();\n            this.save();\n            if (this.baseTransform) {\n              this.ctx.setTransform(...this.baseTransform);\n            }\n            if (Array.isArray(rect) && rect.length === 4) {\n              const width = rect[2] - rect[0];\n              const height = rect[3] - rect[1];\n              if (hasOwnCanvas && this.annotationCanvasMap) {\n                transform = transform.slice();\n                transform[4] -= rect[0];\n                transform[5] -= rect[1];\n                rect = rect.slice();\n                rect[0] = rect[1] = 0;\n                rect[2] = width;\n                rect[3] = height;\n                const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx));\n                const {\n                  viewportScale\n                } = this;\n                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                const {\n                  canvas,\n                  context\n                } = this.annotationCanvas;\n                this.annotationCanvasMap.set(id, canvas);\n                this.annotationCanvas.savedCtx = this.ctx;\n                this.ctx = context;\n                this.ctx.save();\n                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                resetCtxToDefault(this.ctx);\n              } else {\n                resetCtxToDefault(this.ctx);\n                this.ctx.rect(rect[0], rect[1], width, height);\n                this.ctx.clip();\n                this.endPath();\n              }\n            }\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.transform(...transform);\n            this.transform(...matrix);\n          }\n          endAnnotation() {\n            if (this.annotationCanvas) {\n              this.ctx.restore();\n              this.#drawFilter();\n              this.ctx = this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas;\n            }\n          }\n          paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const count = img.count;\n            img = this.getObject(img.data, img);\n            img.count = count;\n            const ctx = this.ctx;\n            const glyph = this.processingType3;\n            if (glyph) {\n              if (glyph.compiled === undefined) {\n                glyph.compiled = compileType3Glyph(img);\n              }\n              if (glyph.compiled) {\n                glyph.compiled(ctx);\n                return;\n              }\n            }\n            const mask = this._createMaskCanvas(img);\n            const maskCanvas = mask.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n            ctx.restore();\n            this.compose();\n          }\n          paintImageMaskXObjectRepeat(img, scaleX) {\n            let skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            let skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            let scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            let positions = arguments.length > 5 ? arguments[5] : undefined;\n            if (!this.contentVisible) {\n              return;\n            }\n            img = this.getObject(img.data, img);\n            const ctx = this.ctx;\n            ctx.save();\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n            const mask = this._createMaskCanvas(img);\n            ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n              const [x, y] = _util.Util.applyTransform([0, 0], trans);\n              ctx.drawImage(mask.canvas, x, y);\n            }\n            ctx.restore();\n            this.compose();\n          }\n          paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            for (const image of images) {\n              const {\n                data,\n                width,\n                height,\n                transform\n              } = image;\n              const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              const maskCtx = maskCanvas.context;\n              maskCtx.save();\n              const img = this.getObject(data, image);\n              putBinaryImageMask(maskCtx, img);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform(...transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n            this.compose();\n          }\n          paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n          paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            const width = imgData.width;\n            const height = imgData.height;\n            const map = [];\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n            this.paintInlineImageXObjectGroup(imgData, map);\n          }\n          applyTransferMapsToCanvas(ctx) {\n            if (this.current.transferMaps !== \"none\") {\n              ctx.filter = this.current.transferMaps;\n              ctx.drawImage(ctx.canvas, 0, 0);\n              ctx.filter = \"none\";\n            }\n            return ctx.canvas;\n          }\n          applyTransferMapsToBitmap(imgData) {\n            if (this.current.transferMaps === \"none\") {\n              return imgData.bitmap;\n            }\n            const {\n              bitmap,\n              width,\n              height\n            } = imgData;\n            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            const tmpCtx = tmpCanvas.context;\n            tmpCtx.filter = this.current.transferMaps;\n            tmpCtx.drawImage(bitmap, 0, 0);\n            tmpCtx.filter = \"none\";\n            return tmpCanvas.canvas;\n          }\n          paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const width = imgData.width;\n            const height = imgData.height;\n            const ctx = this.ctx;\n            this.save();\n            if (!_util.isNodeJS) {\n              const {\n                filter\n              } = ctx;\n              if (filter !== \"none\" && filter !== \"\") {\n                ctx.filter = \"none\";\n              }\n            }\n            ctx.scale(1 / width, -1 / height);\n            let imgToPaint;\n            if (imgData.bitmap) {\n              imgToPaint = this.applyTransferMapsToBitmap(imgData);\n            } else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n            }\n            const scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n            ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n            drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n            this.compose();\n            this.restore();\n          }\n          paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const ctx = this.ctx;\n            let imgToPaint;\n            if (imgData.bitmap) {\n              imgToPaint = imgData.bitmap;\n            } else {\n              const w = imgData.width;\n              const h = imgData.height;\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n            }\n            for (const entry of map) {\n              ctx.save();\n              ctx.transform(...entry.transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n              ctx.restore();\n            }\n            this.compose();\n          }\n          paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.ctx.fillRect(0, 0, 1, 1);\n            this.compose();\n          }\n          markPoint(tag) {}\n          markPointProps(tag, properties) {}\n          beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n          beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n            this.contentVisible = this.isContentVisible();\n          }\n          endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          }\n          beginCompat() {}\n          endCompat() {}\n          consumePath(clipBox) {\n            const isEmpty = this.current.isEmptyClip();\n            if (this.pendingClip) {\n              this.current.updateClipFromPath();\n            }\n            if (!this.pendingClip) {\n              this.compose(clipBox);\n            }\n            const ctx = this.ctx;\n            if (this.pendingClip) {\n              if (!isEmpty) {\n                if (this.pendingClip === EO_CLIP) {\n                  ctx.clip(\"evenodd\");\n                } else {\n                  ctx.clip();\n                }\n              }\n              this.pendingClip = null;\n            }\n            this.current.startNewPathAndClipBox(this.current.clipBox);\n            ctx.beginPath();\n          }\n          getSinglePixelWidth() {\n            if (!this._cachedGetSinglePixelWidth) {\n              const m = (0, _display_utils.getCurrentTransform)(this.ctx);\n              if (m[1] === 0 && m[2] === 0) {\n                this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n              } else {\n                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                const normX = Math.hypot(m[0], m[2]);\n                const normY = Math.hypot(m[1], m[3]);\n                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n              }\n            }\n            return this._cachedGetSinglePixelWidth;\n          }\n          getScaleForStroking() {\n            if (this._cachedScaleForStroking[0] === -1) {\n              const {\n                lineWidth\n              } = this.current;\n              const {\n                a,\n                b,\n                c,\n                d\n              } = this.ctx.getTransform();\n              let scaleX, scaleY;\n              if (b === 0 && c === 0) {\n                const normX = Math.abs(a);\n                const normY = Math.abs(d);\n                if (normX === normY) {\n                  if (lineWidth === 0) {\n                    scaleX = scaleY = 1 / normX;\n                  } else {\n                    const scaledLineWidth = normX * lineWidth;\n                    scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n                  }\n                } else if (lineWidth === 0) {\n                  scaleX = 1 / normX;\n                  scaleY = 1 / normY;\n                } else {\n                  const scaledXLineWidth = normX * lineWidth;\n                  const scaledYLineWidth = normY * lineWidth;\n                  scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n                  scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n                }\n              } else {\n                const absDet = Math.abs(a * d - b * c);\n                const normX = Math.hypot(a, b);\n                const normY = Math.hypot(c, d);\n                if (lineWidth === 0) {\n                  scaleX = normY / absDet;\n                  scaleY = normX / absDet;\n                } else {\n                  const baseArea = lineWidth * absDet;\n                  scaleX = normY > baseArea ? normY / baseArea : 1;\n                  scaleY = normX > baseArea ? normX / baseArea : 1;\n                }\n              }\n              this._cachedScaleForStroking[0] = scaleX;\n              this._cachedScaleForStroking[1] = scaleY;\n            }\n            return this._cachedScaleForStroking;\n          }\n          rescaleAndStroke(saveRestore) {\n            const {\n              ctx\n            } = this;\n            const {\n              lineWidth\n            } = this.current;\n            const [scaleX, scaleY] = this.getScaleForStroking();\n            ctx.lineWidth = lineWidth || 1;\n            if (scaleX === 1 && scaleY === 1) {\n              ctx.stroke();\n              return;\n            }\n            const dashes = ctx.getLineDash();\n            if (saveRestore) {\n              ctx.save();\n            }\n            ctx.scale(scaleX, scaleY);\n            if (dashes.length > 0) {\n              const scale = Math.max(scaleX, scaleY);\n              ctx.setLineDash(dashes.map(x => x / scale));\n              ctx.lineDashOffset /= scale;\n            }\n            ctx.stroke();\n            if (saveRestore) {\n              ctx.restore();\n            }\n          }\n          isContentVisible() {\n            for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n            return true;\n          }\n        }\n        exports.CanvasGraphics = CanvasGraphics;\n        for (const op in _util.OPS) {\n          if (CanvasGraphics.prototype[op] !== undefined) {\n            CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n          }\n        }\n\n        /***/\n      }, /* 12 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TilingPattern = exports.PathType = void 0;\n        exports.getShadingPattern = getShadingPattern;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        const PathType = {\n          FILL: \"Fill\",\n          STROKE: \"Stroke\",\n          SHADING: \"Shading\"\n        };\n        exports.PathType = PathType;\n        function applyBoundingBox(ctx, bbox) {\n          if (!bbox) {\n            return;\n          }\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const region = new Path2D();\n          region.rect(bbox[0], bbox[1], width, height);\n          ctx.clip(region);\n        }\n        class BaseShadingPattern {\n          constructor() {\n            if (this.constructor === BaseShadingPattern) {\n              (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n            }\n          }\n          getPattern() {\n            (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n          }\n        }\n        class RadialAxialShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._type = IR[1];\n            this._bbox = IR[2];\n            this._colorStops = IR[3];\n            this._p0 = IR[4];\n            this._p1 = IR[5];\n            this._r0 = IR[6];\n            this._r1 = IR[7];\n            this.matrix = null;\n          }\n          _createGradient(ctx) {\n            let grad;\n            if (this._type === \"axial\") {\n              grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n            } else if (this._type === \"radial\") {\n              grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n            }\n            for (const colorStop of this._colorStops) {\n              grad.addColorStop(colorStop[0], colorStop[1]);\n            }\n            return grad;\n          }\n          getPattern(ctx, owner, inverse, pathType) {\n            let pattern;\n            if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n              const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [0, 0, 0, 0];\n              const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n              const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n              const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n              const tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n              inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n              tmpCtx.transform(...owner.baseTransform);\n              if (this.matrix) {\n                tmpCtx.transform(...this.matrix);\n              }\n              applyBoundingBox(tmpCtx, this._bbox);\n              tmpCtx.fillStyle = this._createGradient(tmpCtx);\n              tmpCtx.fill();\n              pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n              const domMatrix = new DOMMatrix(inverse);\n              pattern.setTransform(domMatrix);\n            } else {\n              applyBoundingBox(ctx, this._bbox);\n              pattern = this._createGradient(ctx);\n            }\n            return pattern;\n          }\n        }\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          const coords = context.coords,\n            colors = context.colors;\n          const bytes = data.data,\n            rowSize = data.width * 4;\n          let tmp;\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n          if (y1 >= y3) {\n            return;\n          }\n          const c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n          const c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n          const c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n          const minY = Math.round(y1),\n            maxY = Math.round(y3);\n          let xa, car, cag, cab;\n          let xb, cbr, cbg, cbb;\n          for (let y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n            let k;\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            const x1_ = Math.round(Math.min(xa, xb));\n            const x2_ = Math.round(Math.max(xa, xb));\n            let j = rowSize * y + x1_ * 4;\n            for (let x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n        function drawFigure(data, figure, context) {\n          const ps = figure.coords;\n          const cs = figure.colors;\n          let i, ii;\n          switch (figure.type) {\n            case \"lattice\":\n              const verticesPerRow = figure.verticesPerRow;\n              const rows = Math.floor(ps.length / verticesPerRow) - 1;\n              const cols = verticesPerRow - 1;\n              for (i = 0; i < rows; i++) {\n                let q = i * verticesPerRow;\n                for (let j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n              break;\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n              break;\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n        class MeshShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._coords = IR[2];\n            this._colors = IR[3];\n            this._figures = IR[4];\n            this._bounds = IR[5];\n            this._bbox = IR[7];\n            this._background = IR[8];\n            this.matrix = null;\n          }\n          _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n            const EXPECTED_SCALE = 1.1;\n            const MAX_PATTERN_SIZE = 3000;\n            const BORDER_SIZE = 2;\n            const offsetX = Math.floor(this._bounds[0]);\n            const offsetY = Math.floor(this._bounds[1]);\n            const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n            const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n            const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const scaleX = boundsWidth / width;\n            const scaleY = boundsHeight / height;\n            const context = {\n              coords: this._coords,\n              colors: this._colors,\n              offsetX: -offsetX,\n              offsetY: -offsetY,\n              scaleX: 1 / scaleX,\n              scaleY: 1 / scaleY\n            };\n            const paddedWidth = width + BORDER_SIZE * 2;\n            const paddedHeight = height + BORDER_SIZE * 2;\n            const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            const tmpCtx = tmpCanvas.context;\n            const data = tmpCtx.createImageData(width, height);\n            if (backgroundColor) {\n              const bytes = data.data;\n              for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n            for (const figure of this._figures) {\n              drawFigure(data, figure, context);\n            }\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            const canvas = tmpCanvas.canvas;\n            return {\n              canvas,\n              offsetX: offsetX - BORDER_SIZE * scaleX,\n              offsetY: offsetY - BORDER_SIZE * scaleY,\n              scaleX,\n              scaleY\n            };\n          }\n          getPattern(ctx, owner, inverse, pathType) {\n            applyBoundingBox(ctx, this._bbox);\n            let scale;\n            if (pathType === PathType.SHADING) {\n              scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n              if (this.matrix) {\n                const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n            const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n            if (pathType !== PathType.SHADING) {\n              ctx.setTransform(...owner.baseTransform);\n              if (this.matrix) {\n                ctx.transform(...this.matrix);\n              }\n            }\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n        }\n        class DummyShadingPattern extends BaseShadingPattern {\n          getPattern() {\n            return \"hotpink\";\n          }\n        }\n        function getShadingPattern(IR) {\n          switch (IR[0]) {\n            case \"RadialAxial\":\n              return new RadialAxialShadingPattern(IR);\n            case \"Mesh\":\n              return new MeshShadingPattern(IR);\n            case \"Dummy\":\n              return new DummyShadingPattern();\n          }\n          throw new Error(`Unknown IR type: ${IR[0]}`);\n        }\n        const PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        class TilingPattern {\n          static MAX_PATTERN_SIZE = 3000;\n          constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n            this.operatorList = IR[2];\n            this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n            this.bbox = IR[4];\n            this.xstep = IR[5];\n            this.ystep = IR[6];\n            this.paintType = IR[7];\n            this.tilingType = IR[8];\n            this.color = color;\n            this.ctx = ctx;\n            this.canvasGraphicsFactory = canvasGraphicsFactory;\n            this.baseTransform = baseTransform;\n          }\n          createPatternCanvas(owner) {\n            const operatorList = this.operatorList;\n            const bbox = this.bbox;\n            const xstep = this.xstep;\n            const ystep = this.ystep;\n            const paintType = this.paintType;\n            const tilingType = this.tilingType;\n            const color = this.color;\n            const canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            const x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n            const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n            const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n            const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            const tmpCtx = tmpCanvas.context;\n            const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            let adjustedX0 = x0;\n            let adjustedY0 = y0;\n            let adjustedX1 = x1;\n            let adjustedY1 = y1;\n            if (x0 < 0) {\n              adjustedX0 = 0;\n              adjustedX1 += Math.abs(x0);\n            }\n            if (y0 < 0) {\n              adjustedY0 = 0;\n              adjustedY1 += Math.abs(y0);\n            }\n            tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            tmpCtx.save();\n            this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n            graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n            graphics.executeOperatorList(operatorList);\n            graphics.endDrawing();\n            return {\n              canvas: tmpCanvas.canvas,\n              scaleX: dimx.scale,\n              scaleY: dimy.scale,\n              offsetX: adjustedX0,\n              offsetY: adjustedY0\n            };\n          }\n          getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n            let size = Math.ceil(step * scale);\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n            return {\n              scale,\n              size\n            };\n          }\n          clipBbox(graphics, x0, y0, x1, y1) {\n            const bboxWidth = x1 - x0;\n            const bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [x0, y0, x1, y1]);\n            graphics.clip();\n            graphics.endPath();\n          }\n          setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n              current = graphics.current;\n            switch (paintType) {\n              case PaintType.COLORED:\n                const ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n              case PaintType.UNCOLORED:\n                const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          }\n          getPattern(ctx, owner, inverse, pathType) {\n            let matrix = inverse;\n            if (pathType !== PathType.SHADING) {\n              matrix = _util.Util.transform(matrix, owner.baseTransform);\n              if (this.matrix) {\n                matrix = _util.Util.transform(matrix, this.matrix);\n              }\n            }\n            const temporaryPatternCanvas = this.createPatternCanvas(owner);\n            let domMatrix = new DOMMatrix(matrix);\n            domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n            const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n            pattern.setTransform(domMatrix);\n            return pattern;\n          }\n        }\n        exports.TilingPattern = TilingPattern;\n\n        /***/\n      }, /* 13 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;\n        exports.convertToRGBA = convertToRGBA;\n        exports.grayToRGBA = grayToRGBA;\n        var _util = __w_pdfjs_require__(1);\n        function convertToRGBA(params) {\n          switch (params.kind) {\n            case _util.ImageKind.GRAYSCALE_1BPP:\n              return convertBlackAndWhiteToRGBA(params);\n            case _util.ImageKind.RGB_24BPP:\n              return convertRGBToRGBA(params);\n          }\n          return null;\n        }\n        function convertBlackAndWhiteToRGBA(_ref32) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            width,\n            height,\n            nonBlackColor = 0xffffffff,\n            inverseDecode = false\n          } = _ref32;\n          const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n          const [zeroMapping, oneMapping] = inverseDecode ? [nonBlackColor, black] : [black, nonBlackColor];\n          const widthInSource = width >> 3;\n          const widthRemainder = width & 7;\n          const srcLength = src.length;\n          dest = new Uint32Array(dest.buffer);\n          let destPos = 0;\n          for (let i = 0; i < height; i++) {\n            for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n              const elem = srcPos < srcLength ? src[srcPos] : 255;\n              dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n            }\n            if (widthRemainder === 0) {\n              continue;\n            }\n            const elem = srcPos < srcLength ? src[srcPos++] : 255;\n            for (let j = 0; j < widthRemainder; j++) {\n              dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n            }\n          }\n          return {\n            srcPos,\n            destPos\n          };\n        }\n        function convertRGBToRGBA(_ref33) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            destPos = 0,\n            width,\n            height\n          } = _ref33;\n          let i = 0;\n          const len32 = src.length >> 2;\n          const src32 = new Uint32Array(src.buffer, srcPos, len32);\n          if (_util.FeatureTest.isLittleEndian) {\n            for (; i < len32 - 2; i += 3, destPos += 4) {\n              const s1 = src32[i];\n              const s2 = src32[i + 1];\n              const s3 = src32[i + 2];\n              dest[destPos] = s1 | 0xff000000;\n              dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n              dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n              dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n            }\n            for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n              dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n            }\n          } else {\n            for (; i < len32 - 2; i += 3, destPos += 4) {\n              const s1 = src32[i];\n              const s2 = src32[i + 1];\n              const s3 = src32[i + 2];\n              dest[destPos] = s1 | 0xff;\n              dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n              dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n              dest[destPos + 3] = s3 << 8 | 0xff;\n            }\n            for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n              dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n            }\n          }\n          return {\n            srcPos,\n            destPos\n          };\n        }\n        function grayToRGBA(src, dest) {\n          if (_util.FeatureTest.isLittleEndian) {\n            for (let i = 0, ii = src.length; i < ii; i++) {\n              dest[i] = src[i] * 0x10101 | 0xff000000;\n            }\n          } else {\n            for (let i = 0, ii = src.length; i < ii; i++) {\n              dest[i] = src[i] * 0x1010100 | 0x000000ff;\n            }\n          }\n        }\n\n        /***/\n      }, /* 14 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.GlobalWorkerOptions = void 0;\n        const GlobalWorkerOptions = Object.create(null);\n        exports.GlobalWorkerOptions = GlobalWorkerOptions;\n        GlobalWorkerOptions.workerPort = null;\n        GlobalWorkerOptions.workerSrc = \"\";\n\n        /***/\n      }, /* 15 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MessageHandler = void 0;\n        var _util = __w_pdfjs_require__(1);\n        const CallbackKind = {\n          UNKNOWN: 0,\n          DATA: 1,\n          ERROR: 2\n        };\n        const StreamKind = {\n          UNKNOWN: 0,\n          CANCEL: 1,\n          CANCEL_COMPLETE: 2,\n          CLOSE: 3,\n          ENQUEUE: 4,\n          ERROR: 5,\n          PULL: 6,\n          PULL_COMPLETE: 7,\n          START_COMPLETE: 8\n        };\n        function wrapReason(reason) {\n          if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n            (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n          }\n          switch (reason.name) {\n            case \"AbortException\":\n              return new _util.AbortException(reason.message);\n            case \"MissingPDFException\":\n              return new _util.MissingPDFException(reason.message);\n            case \"PasswordException\":\n              return new _util.PasswordException(reason.message, reason.code);\n            case \"UnexpectedResponseException\":\n              return new _util.UnexpectedResponseException(reason.message, reason.status);\n            case \"UnknownErrorException\":\n              return new _util.UnknownErrorException(reason.message, reason.details);\n            default:\n              return new _util.UnknownErrorException(reason.message, reason.toString());\n          }\n        }\n        class MessageHandler {\n          constructor(sourceName, targetName, comObj) {\n            this.sourceName = sourceName;\n            this.targetName = targetName;\n            this.comObj = comObj;\n            this.callbackId = 1;\n            this.streamId = 1;\n            this.streamSinks = Object.create(null);\n            this.streamControllers = Object.create(null);\n            this.callbackCapabilities = Object.create(null);\n            this.actionHandler = Object.create(null);\n            this._onComObjOnMessage = event => {\n              const data = event.data;\n              if (data.targetName !== this.sourceName) {\n                return;\n              }\n              if (data.stream) {\n                this.#processStreamMessage(data);\n                return;\n              }\n              if (data.callback) {\n                const callbackId = data.callbackId;\n                const capability = this.callbackCapabilities[callbackId];\n                if (!capability) {\n                  throw new Error(`Cannot resolve callback ${callbackId}`);\n                }\n                delete this.callbackCapabilities[callbackId];\n                if (data.callback === CallbackKind.DATA) {\n                  capability.resolve(data.data);\n                } else if (data.callback === CallbackKind.ERROR) {\n                  capability.reject(wrapReason(data.reason));\n                } else {\n                  throw new Error(\"Unexpected callback case\");\n                }\n                return;\n              }\n              const action = this.actionHandler[data.action];\n              if (!action) {\n                throw new Error(`Unknown action from worker: ${data.action}`);\n              }\n              if (data.callbackId) {\n                const cbSourceName = this.sourceName;\n                const cbTargetName = data.sourceName;\n                new Promise(function (resolve) {\n                  resolve(action(data.data));\n                }).then(function (result) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.DATA,\n                    callbackId: data.callbackId,\n                    data: result\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.ERROR,\n                    callbackId: data.callbackId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                return;\n              }\n              if (data.streamId) {\n                this.#createStreamSink(data);\n                return;\n              }\n              action(data.data);\n            };\n            comObj.addEventListener(\"message\", this._onComObjOnMessage);\n          }\n          on(actionName, handler) {\n            const ah = this.actionHandler;\n            if (ah[actionName]) {\n              throw new Error(`There is already an actionName called \"${actionName}\"`);\n            }\n            ah[actionName] = handler;\n          }\n          send(actionName, data, transfers) {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data\n            }, transfers);\n          }\n          sendWithPromise(actionName, data, transfers) {\n            const callbackId = this.callbackId++;\n            const capability = new _util.PromiseCapability();\n            this.callbackCapabilities[callbackId] = capability;\n            try {\n              this.comObj.postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId,\n                data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n            return capability.promise;\n          }\n          sendWithStream(actionName, data, queueingStrategy, transfers) {\n            const streamId = this.streamId++,\n              sourceName = this.sourceName,\n              targetName = this.targetName,\n              comObj = this.comObj;\n            return new ReadableStream({\n              start: controller => {\n                const startCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId] = {\n                  controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  action: actionName,\n                  streamId,\n                  data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: controller => {\n                const pullCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL,\n                  streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: reason => {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                const cancelCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId].cancelCall = cancelCapability;\n                this.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n          #createStreamSink(data) {\n            const streamId = data.streamId,\n              sourceName = this.sourceName,\n              targetName = data.sourceName,\n              comObj = this.comObj;\n            const self = this,\n              action = this.actionHandler[data.action];\n            const streamSink = {\n              enqueue(chunk) {\n                let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                let transfers = arguments.length > 2 ? arguments[2] : undefined;\n                if (this.isCancelled) {\n                  return;\n                }\n                const lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = new _util.PromiseCapability();\n                  this.ready = this.sinkCapability.promise;\n                }\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId,\n                  chunk\n                }, transfers);\n              },\n              close() {\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ERROR,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: new _util.PromiseCapability(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n          #processStreamMessage(data) {\n            const streamId = data.streamId,\n              sourceName = this.sourceName,\n              targetName = data.sourceName,\n              comObj = this.comObj;\n            const streamController = this.streamControllers[streamId],\n              streamSink = this.streamSinks[streamId];\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  streamController.startCall.resolve();\n                } else {\n                  streamController.startCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  streamController.pullCall.resolve();\n                } else {\n                  streamController.pullCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL:\n                if (!streamSink) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                  break;\n                }\n                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                  streamSink.sinkCapability.resolve();\n                }\n                streamSink.desiredSize = data.desiredSize;\n                new Promise(function (resolve) {\n                  resolve(streamSink.onPull?.());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n                if (streamController.isClosed) {\n                  break;\n                }\n                streamController.controller.enqueue(data.chunk);\n                break;\n              case StreamKind.CLOSE:\n                (0, _util.assert)(streamController, \"close should have stream controller\");\n                if (streamController.isClosed) {\n                  break;\n                }\n                streamController.isClosed = true;\n                streamController.controller.close();\n                this.#deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.ERROR:\n                (0, _util.assert)(streamController, \"error should have stream controller\");\n                streamController.controller.error(wrapReason(data.reason));\n                this.#deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  streamController.cancelCall.resolve();\n                } else {\n                  streamController.cancelCall.reject(wrapReason(data.reason));\n                }\n                this.#deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.CANCEL:\n                if (!streamSink) {\n                  break;\n                }\n                new Promise(function (resolve) {\n                  resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                streamSink.isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n          async #deleteStreamController(streamController, streamId) {\n            await Promise.allSettled([streamController.startCall?.promise, streamController.pullCall?.promise, streamController.cancelCall?.promise]);\n            delete this.streamControllers[streamId];\n          }\n          destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }\n        exports.MessageHandler = MessageHandler;\n\n        /***/\n      }, /* 16 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Metadata = void 0;\n        var _util = __w_pdfjs_require__(1);\n        class Metadata {\n          #metadataMap;\n          #data;\n          constructor(_ref34) {\n            let {\n              parsedData,\n              rawData\n            } = _ref34;\n            this.#metadataMap = parsedData;\n            this.#data = rawData;\n          }\n          getRaw() {\n            return this.#data;\n          }\n          get(name) {\n            return this.#metadataMap.get(name) ?? null;\n          }\n          getAll() {\n            return (0, _util.objectFromMap)(this.#metadataMap);\n          }\n          has(name) {\n            return this.#metadataMap.has(name);\n          }\n        }\n        exports.Metadata = Metadata;\n\n        /***/\n      }, /* 17 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.OptionalContentConfig = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _murmurhash = __w_pdfjs_require__(8);\n        const INTERNAL = Symbol(\"INTERNAL\");\n        class OptionalContentGroup {\n          #visible = true;\n          constructor(name, intent) {\n            this.name = name;\n            this.intent = intent;\n          }\n          get visible() {\n            return this.#visible;\n          }\n          _setVisible(internal, visible) {\n            if (internal !== INTERNAL) {\n              (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n            }\n            this.#visible = visible;\n          }\n        }\n        class OptionalContentConfig {\n          #cachedGetHash = null;\n          #groups = new Map();\n          #initialHash = null;\n          #order = null;\n          constructor(data) {\n            this.name = null;\n            this.creator = null;\n            if (data === null) {\n              return;\n            }\n            this.name = data.name;\n            this.creator = data.creator;\n            this.#order = data.order;\n            for (const group of data.groups) {\n              this.#groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n            }\n            if (data.baseState === \"OFF\") {\n              for (const group of this.#groups.values()) {\n                group._setVisible(INTERNAL, false);\n              }\n            }\n            for (const on of data.on) {\n              this.#groups.get(on)._setVisible(INTERNAL, true);\n            }\n            for (const off of data.off) {\n              this.#groups.get(off)._setVisible(INTERNAL, false);\n            }\n            this.#initialHash = this.getHash();\n          }\n          #evaluateVisibilityExpression(array) {\n            const length = array.length;\n            if (length < 2) {\n              return true;\n            }\n            const operator = array[0];\n            for (let i = 1; i < length; i++) {\n              const element = array[i];\n              let state;\n              if (Array.isArray(element)) {\n                state = this.#evaluateVisibilityExpression(element);\n              } else if (this.#groups.has(element)) {\n                state = this.#groups.get(element).visible;\n              } else {\n                (0, _util.warn)(`Optional content group not found: ${element}`);\n                return true;\n              }\n              switch (operator) {\n                case \"And\":\n                  if (!state) {\n                    return false;\n                  }\n                  break;\n                case \"Or\":\n                  if (state) {\n                    return true;\n                  }\n                  break;\n                case \"Not\":\n                  return !state;\n                default:\n                  return true;\n              }\n            }\n            return operator === \"And\";\n          }\n          isVisible(group) {\n            if (this.#groups.size === 0) {\n              return true;\n            }\n            if (!group) {\n              (0, _util.warn)(\"Optional content group not defined.\");\n              return true;\n            }\n            if (group.type === \"OCG\") {\n              if (!this.#groups.has(group.id)) {\n                (0, _util.warn)(`Optional content group not found: ${group.id}`);\n                return true;\n              }\n              return this.#groups.get(group.id).visible;\n            } else if (group.type === \"OCMD\") {\n              if (group.expression) {\n                return this.#evaluateVisibilityExpression(group.expression);\n              }\n              if (!group.policy || group.policy === \"AnyOn\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (this.#groups.get(id).visible) {\n                    return true;\n                  }\n                }\n                return false;\n              } else if (group.policy === \"AllOn\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (!this.#groups.get(id).visible) {\n                    return false;\n                  }\n                }\n                return true;\n              } else if (group.policy === \"AnyOff\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (!this.#groups.get(id).visible) {\n                    return true;\n                  }\n                }\n                return false;\n              } else if (group.policy === \"AllOff\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (this.#groups.get(id).visible) {\n                    return false;\n                  }\n                }\n                return true;\n              }\n              (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n              return true;\n            }\n            (0, _util.warn)(`Unknown group type ${group.type}.`);\n            return true;\n          }\n          setVisibility(id) {\n            let visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            if (!this.#groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return;\n            }\n            this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n            this.#cachedGetHash = null;\n          }\n          get hasInitialVisibility() {\n            return this.#initialHash === null || this.getHash() === this.#initialHash;\n          }\n          getOrder() {\n            if (!this.#groups.size) {\n              return null;\n            }\n            if (this.#order) {\n              return this.#order.slice();\n            }\n            return [...this.#groups.keys()];\n          }\n          getGroups() {\n            return this.#groups.size > 0 ? (0, _util.objectFromMap)(this.#groups) : null;\n          }\n          getGroup(id) {\n            return this.#groups.get(id) || null;\n          }\n          getHash() {\n            if (this.#cachedGetHash !== null) {\n              return this.#cachedGetHash;\n            }\n            const hash = new _murmurhash.MurmurHash3_64();\n            for (const [id, group] of this.#groups) {\n              hash.update(`${id}:${group.visible}`);\n            }\n            return this.#cachedGetHash = hash.hexdigest();\n          }\n        }\n        exports.OptionalContentConfig = OptionalContentConfig;\n\n        /***/\n      }, /* 18 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFDataTransportStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        class PDFDataTransportStream {\n          constructor(_ref35, pdfDataRangeTransport) {\n            let {\n              length,\n              initialData,\n              progressiveDone = false,\n              contentDispositionFilename = null,\n              disableRange = false,\n              disableStream = false\n            } = _ref35;\n            (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n            this._queuedChunks = [];\n            this._progressiveDone = progressiveDone;\n            this._contentDispositionFilename = contentDispositionFilename;\n            if (initialData?.length > 0) {\n              const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n              this._queuedChunks.push(buffer);\n            }\n            this._pdfDataRangeTransport = pdfDataRangeTransport;\n            this._isStreamingSupported = !disableStream;\n            this._isRangeSupported = !disableRange;\n            this._contentLength = length;\n            this._fullRequestReader = null;\n            this._rangeReaders = [];\n            this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n              this._onReceiveData({\n                begin,\n                chunk\n              });\n            });\n            this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n              this._onProgress({\n                loaded,\n                total\n              });\n            });\n            this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n              this._onReceiveData({\n                chunk\n              });\n            });\n            this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n              this._onProgressiveDone();\n            });\n            this._pdfDataRangeTransport.transportReady();\n          }\n          _onReceiveData(_ref36) {\n            let {\n              begin,\n              chunk\n            } = _ref36;\n            const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n            if (begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              const found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== begin) {\n                  return false;\n                }\n                rangeReader._enqueue(buffer);\n                return true;\n              });\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n          _onProgress(evt) {\n            if (evt.total === undefined) {\n              this._rangeReaders[0]?.onProgress?.({\n                loaded: evt.loaded\n              });\n            } else {\n              this._fullRequestReader?.onProgress?.({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n          _onProgressiveDone() {\n            this._fullRequestReader?.progressiveDone();\n            this._progressiveDone = true;\n          }\n          _removeRangeReader(reader) {\n            const i = this._rangeReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            const queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n          }\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n            this._rangeReaders.push(reader);\n            return reader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n            this._pdfDataRangeTransport.abort();\n          }\n        }\n        exports.PDFDataTransportStream = PDFDataTransportStream;\n        class PDFDataTransportStreamReader {\n          constructor(stream, queuedChunks) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this._stream = stream;\n            this._done = progressiveDone || false;\n            this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n            this._queuedChunks = queuedChunks || [];\n            this._loaded = 0;\n            for (const chunk of this._queuedChunks) {\n              this._loaded += chunk.byteLength;\n            }\n            this._requests = [];\n            this._headersReady = Promise.resolve();\n            stream._fullRequestReader = this;\n            this.onProgress = null;\n          }\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n            this._loaded += chunk.byteLength;\n          }\n          get headersReady() {\n            return this._headersReady;\n          }\n          get filename() {\n            return this._filename;\n          }\n          get isRangeSupported() {\n            return this._stream._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._stream._isStreamingSupported;\n          }\n          get contentLength() {\n            return this._stream._contentLength;\n          }\n          async read() {\n            if (this._queuedChunks.length > 0) {\n              const chunk = this._queuedChunks.shift();\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n          }\n          progressiveDone() {\n            if (this._done) {\n              return;\n            }\n            this._done = true;\n          }\n        }\n        class PDFDataTransportStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._begin = begin;\n            this._end = end;\n            this._queuedChunk = null;\n            this._requests = [];\n            this._done = false;\n            this.onProgress = null;\n          }\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              const requestsCapability = this._requests.shift();\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n              for (const requestCapability of this._requests) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n              this._requests.length = 0;\n            }\n            this._done = true;\n            this._stream._removeRangeReader(this);\n          }\n          get isStreamingSupported() {\n            return false;\n          }\n          async read() {\n            if (this._queuedChunk) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            this._stream._removeRangeReader(this);\n          }\n        }\n\n        /***/\n      }, /* 19 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFFetchStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _network_utils = __w_pdfjs_require__(20);\n        ;\n        function createFetchOptions(headers, withCredentials, abortController) {\n          return {\n            method: \"GET\",\n            headers,\n            signal: abortController.signal,\n            mode: \"cors\",\n            credentials: withCredentials ? \"include\" : \"same-origin\",\n            redirect: \"follow\"\n          };\n        }\n        function createHeaders(httpHeaders) {\n          const headers = new Headers();\n          for (const property in httpHeaders) {\n            const value = httpHeaders[property];\n            if (value === undefined) {\n              continue;\n            }\n            headers.append(property, value);\n          }\n          return headers;\n        }\n        function getArrayBuffer(val) {\n          if (val instanceof Uint8Array) {\n            return val.buffer;\n          }\n          if (val instanceof ArrayBuffer) {\n            return val;\n          }\n          (0, _util.warn)(`getArrayBuffer - unexpected data format: ${val}`);\n          return new Uint8Array(val).buffer;\n        }\n        class PDFFetchStream {\n          constructor(source) {\n            this.source = source;\n            this.isHttp = /^https?:/i.test(source.url);\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            const reader = new PDFFetchStreamRangeReader(this, begin, end);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n        }\n        exports.PDFFetchStream = PDFFetchStream;\n        class PDFFetchStreamReader {\n          constructor(stream) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            this._filename = null;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._contentLength = source.length;\n            this._headersCapability = new _util.PromiseCapability();\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n            this._abortController = new AbortController();\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._headers = createHeaders(this._stream.httpHeaders);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n              this._reader = response.body.getReader();\n              this._headersCapability.resolve();\n              const getResponseHeader = name => {\n                return response.headers.get(name);\n              };\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: this._stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n              if (!this._isStreamingSupported && this._isRangeSupported) {\n                this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n              }\n            }).catch(this._headersCapability.reject);\n            this.onProgress = null;\n          }\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n          get filename() {\n            return this._filename;\n          }\n          get contentLength() {\n            return this._contentLength;\n          }\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._headersCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n            this._loaded += value.byteLength;\n            this.onProgress?.({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n            return {\n              value: getArrayBuffer(value),\n              done: false\n            };\n          }\n          cancel(reason) {\n            this._reader?.cancel(reason);\n            this._abortController.abort();\n          }\n        }\n        class PDFFetchStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._readCapability = new _util.PromiseCapability();\n            this._isStreamingSupported = !source.disableStream;\n            this._abortController = new AbortController();\n            this._headers = createHeaders(this._stream.httpHeaders);\n            this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n              this._readCapability.resolve();\n              this._reader = response.body.getReader();\n            }).catch(this._readCapability.reject);\n            this.onProgress = null;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._readCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n            this._loaded += value.byteLength;\n            this.onProgress?.({\n              loaded: this._loaded\n            });\n            return {\n              value: getArrayBuffer(value),\n              done: false\n            };\n          }\n          cancel(reason) {\n            this._reader?.cancel(reason);\n            this._abortController.abort();\n          }\n        }\n\n        /***/\n      }, /* 20 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.createResponseStatusError = createResponseStatusError;\n        exports.extractFilenameFromHeader = extractFilenameFromHeader;\n        exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n        exports.validateResponseStatus = validateResponseStatus;\n        var _util = __w_pdfjs_require__(1);\n        var _content_disposition = __w_pdfjs_require__(21);\n        var _display_utils = __w_pdfjs_require__(6);\n        function validateRangeRequestCapabilities(_ref37) {\n          let {\n            getResponseHeader,\n            isHttp,\n            rangeChunkSize,\n            disableRange\n          } = _ref37;\n          const returnValues = {\n            allowRangeRequests: false,\n            suggestedLength: undefined\n          };\n          const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n          if (!Number.isInteger(length)) {\n            return returnValues;\n          }\n          returnValues.suggestedLength = length;\n          if (length <= 2 * rangeChunkSize) {\n            return returnValues;\n          }\n          if (disableRange || !isHttp) {\n            return returnValues;\n          }\n          if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n            return returnValues;\n          }\n          const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n          if (contentEncoding !== \"identity\") {\n            return returnValues;\n          }\n          returnValues.allowRangeRequests = true;\n          return returnValues;\n        }\n        function extractFilenameFromHeader(getResponseHeader) {\n          const contentDisposition = getResponseHeader(\"Content-Disposition\");\n          if (contentDisposition) {\n            let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n            if (filename.includes(\"%\")) {\n              try {\n                filename = decodeURIComponent(filename);\n              } catch {}\n            }\n            if ((0, _display_utils.isPdfFile)(filename)) {\n              return filename;\n            }\n          }\n          return null;\n        }\n        function createResponseStatusError(status, url) {\n          if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n            return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n          }\n          return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n        }\n        function validateResponseStatus(status) {\n          return status === 200 || status === 206;\n        }\n\n        /***/\n      }, /* 21 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n        var _util = __w_pdfjs_require__(1);\n        function getFilenameFromContentDispositionHeader(contentDisposition) {\n          let needsEncodingFixup = true;\n          let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = unescape(filename);\n            filename = rfc5987decode(filename);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n          tmp = rfc2231getparam(contentDisposition);\n          if (tmp) {\n            const filename = rfc2047decode(tmp);\n            return fixupEncoding(filename);\n          }\n          tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n          function toParamRegExp(attributePattern, flags) {\n            return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n          }\n          function textdecode(encoding, value) {\n            if (encoding) {\n              if (!/^[\\x00-\\xFF]+$/.test(value)) {\n                return value;\n              }\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = (0, _util.stringToBytes)(value);\n                value = decoder.decode(buffer);\n                needsEncodingFixup = false;\n              } catch {}\n            }\n            return value;\n          }\n          function fixupEncoding(value) {\n            if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n              value = textdecode(\"utf-8\", value);\n              if (needsEncodingFixup) {\n                value = textdecode(\"iso-8859-1\", value);\n              }\n            }\n            return value;\n          }\n          function rfc2231getparam(contentDispositionStr) {\n            const matches = [];\n            let match;\n            const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n            while ((match = iter.exec(contentDispositionStr)) !== null) {\n              let [, n, quot, part] = match;\n              n = parseInt(n, 10);\n              if (n in matches) {\n                if (n === 0) {\n                  break;\n                }\n                continue;\n              }\n              matches[n] = [quot, part];\n            }\n            const parts = [];\n            for (let n = 0; n < matches.length; ++n) {\n              if (!(n in matches)) {\n                break;\n              }\n              let [quot, part] = matches[n];\n              part = rfc2616unquote(part);\n              if (quot) {\n                part = unescape(part);\n                if (n === 0) {\n                  part = rfc5987decode(part);\n                }\n              }\n              parts.push(part);\n            }\n            return parts.join(\"\");\n          }\n          function rfc2616unquote(value) {\n            if (value.startsWith('\"')) {\n              const parts = value.slice(1).split('\\\\\"');\n              for (let i = 0; i < parts.length; ++i) {\n                const quotindex = parts[i].indexOf('\"');\n                if (quotindex !== -1) {\n                  parts[i] = parts[i].slice(0, quotindex);\n                  parts.length = i + 1;\n                }\n                parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n              }\n              value = parts.join('\"');\n            }\n            return value;\n          }\n          function rfc5987decode(extvalue) {\n            const encodingend = extvalue.indexOf(\"'\");\n            if (encodingend === -1) {\n              return extvalue;\n            }\n            const encoding = extvalue.slice(0, encodingend);\n            const langvalue = extvalue.slice(encodingend + 1);\n            const value = langvalue.replace(/^[^']*'/, \"\");\n            return textdecode(encoding, value);\n          }\n          function rfc2047decode(value) {\n            if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n              return value;\n            }\n            return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n              if (encoding === \"q\" || encoding === \"Q\") {\n                text = text.replaceAll(\"_\", \" \");\n                text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                  return String.fromCharCode(parseInt(hex, 16));\n                });\n                return textdecode(charset, text);\n              }\n              try {\n                text = atob(text);\n              } catch {}\n              return textdecode(charset, text);\n            });\n          }\n          return \"\";\n        }\n\n        /***/\n      }, /* 22 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNetworkStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _network_utils = __w_pdfjs_require__(20);\n        ;\n        const OK_RESPONSE = 200;\n        const PARTIAL_CONTENT_RESPONSE = 206;\n        function getArrayBuffer(xhr) {\n          const data = xhr.response;\n          if (typeof data !== \"string\") {\n            return data;\n          }\n          return (0, _util.stringToBytes)(data).buffer;\n        }\n        class NetworkManager {\n          constructor(url) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.url = url;\n            this.isHttp = /^https?:/i.test(url);\n            this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n            this.withCredentials = args.withCredentials || false;\n            this.currXhrId = 0;\n            this.pendingRequests = Object.create(null);\n          }\n          requestRange(begin, end, listeners) {\n            const args = {\n              begin,\n              end\n            };\n            for (const prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n            return this.request(args);\n          }\n          requestFull(listeners) {\n            return this.request(listeners);\n          }\n          request(args) {\n            const xhr = new XMLHttpRequest();\n            const xhrId = this.currXhrId++;\n            const pendingRequest = this.pendingRequests[xhrId] = {\n              xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n            for (const property in this.httpHeaders) {\n              const value = this.httpHeaders[property];\n              if (value === undefined) {\n                continue;\n              }\n              xhr.setRequestHeader(property, value);\n            }\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n            xhr.responseType = \"arraybuffer\";\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n          onProgress(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            pendingRequest.onProgress?.(evt);\n          }\n          onStateChange(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            const xhr = pendingRequest.xhr;\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n            if (xhr.readyState !== 4) {\n              return;\n            }\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n            delete this.pendingRequests[xhrId];\n            if (xhr.status === 0 && this.isHttp) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n            const xhrStatus = xhr.status || OK_RESPONSE;\n            const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n            const chunk = getArrayBuffer(xhr);\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk\n              });\n            } else {\n              pendingRequest.onError?.(xhr.status);\n            }\n          }\n          getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n          isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n          abortRequest(xhrId) {\n            const xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n        }\n        class PDFNetworkStream {\n          constructor(source) {\n            this._source = source;\n            this._manager = new NetworkManager(source.url, {\n              httpHeaders: source.httpHeaders,\n              withCredentials: source.withCredentials\n            });\n            this._rangeChunkSize = source.rangeChunkSize;\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n          _onRangeRequestReaderClosed(reader) {\n            const i = this._rangeRequestReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n          getRangeReader(begin, end) {\n            const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n        }\n        exports.PDFNetworkStream = PDFNetworkStream;\n        class PDFNetworkStreamFullRequestReader {\n          constructor(manager, source) {\n            this._manager = manager;\n            const args = {\n              onHeadersReceived: this._onHeadersReceived.bind(this),\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = source.url;\n            this._fullRequestId = manager.requestFull(args);\n            this._headersReceivedCapability = new _util.PromiseCapability();\n            this._disableRange = source.disableRange || false;\n            this._contentLength = source.length;\n            this._rangeChunkSize = source.rangeChunkSize;\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n            this._isStreamingSupported = false;\n            this._isRangeSupported = false;\n            this._cachedChunks = [];\n            this._requests = [];\n            this._done = false;\n            this._storedError = undefined;\n            this._filename = null;\n            this.onProgress = null;\n          }\n          _onHeadersReceived() {\n            const fullRequestXhrId = this._fullRequestId;\n            const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n            const getResponseHeader = name => {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n            this._headersReceivedCapability.resolve();\n          }\n          _onDone(data) {\n            if (data) {\n              if (this._requests.length > 0) {\n                const requestCapability = this._requests.shift();\n                requestCapability.resolve({\n                  value: data.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(data.chunk);\n              }\n            }\n            this._done = true;\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n          }\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n            this._headersReceivedCapability.reject(this._storedError);\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n            this._requests.length = 0;\n            this._cachedChunks.length = 0;\n          }\n          _onProgress(evt) {\n            this.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.lengthComputable ? evt.total : this._contentLength\n            });\n          }\n          get filename() {\n            return this._filename;\n          }\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          get contentLength() {\n            return this._contentLength;\n          }\n          get headersReady() {\n            return this._headersReceivedCapability.promise;\n          }\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            if (this._cachedChunks.length > 0) {\n              const chunk = this._cachedChunks.shift();\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            this._headersReceivedCapability.reject(reason);\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n            this._fullRequestReader = null;\n          }\n        }\n        class PDFNetworkStreamRangeRequestReader {\n          constructor(manager, begin, end) {\n            this._manager = manager;\n            const args = {\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = manager.url;\n            this._requestId = manager.requestRange(begin, end, args);\n            this._requests = [];\n            this._queuedChunk = null;\n            this._done = false;\n            this._storedError = undefined;\n            this.onProgress = null;\n            this.onClosed = null;\n          }\n          _close() {\n            this.onClosed?.(this);\n          }\n          _onDone(data) {\n            const chunk = data.chunk;\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            this._close();\n          }\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n            this._requests.length = 0;\n            this._queuedChunk = null;\n          }\n          _onProgress(evt) {\n            if (!this.isStreamingSupported) {\n              this.onProgress?.({\n                loaded: evt.loaded\n              });\n            }\n          }\n          get isStreamingSupported() {\n            return false;\n          }\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            if (this._queuedChunk !== null) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n            this._close();\n          }\n        }\n\n        /***/\n      }, /* 23 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNodeStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _network_utils = __w_pdfjs_require__(20);\n        ;\n        const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n        function parseUrl(sourceUrl) {\n          const url = require(\"url\");\n          const parsedUrl = url.parse(sourceUrl);\n          if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n            return parsedUrl;\n          }\n          if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n            return url.parse(`file:///${sourceUrl}`);\n          }\n          if (!parsedUrl.host) {\n            parsedUrl.protocol = \"file:\";\n          }\n          return parsedUrl;\n        }\n        class PDFNodeStream {\n          constructor(source) {\n            this.source = source;\n            this.url = parseUrl(source.url);\n            this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n            this.isFsUrl = this.url.protocol === \"file:\";\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n          getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n            this._rangeRequestReaders.push(rangeReader);\n            return rangeReader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n        }\n        exports.PDFNodeStream = PDFNodeStream;\n        class BaseFullReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            const source = stream.source;\n            this._contentLength = source.length;\n            this._loaded = 0;\n            this._filename = null;\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._readableStream = null;\n            this._readCapability = new _util.PromiseCapability();\n            this._headersCapability = new _util.PromiseCapability();\n          }\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n          get filename() {\n            return this._filename;\n          }\n          get contentLength() {\n            return this._contentLength;\n          }\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._readCapability.promise;\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            const chunk = this._readableStream.read();\n            if (chunk === null) {\n              this._readCapability = new _util.PromiseCapability();\n              return this.read();\n            }\n            this._loaded += chunk.length;\n            this.onProgress?.({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n          _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }\n        class BaseRangeReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            this._loaded = 0;\n            this._readableStream = null;\n            this._readCapability = new _util.PromiseCapability();\n            const source = stream.source;\n            this._isStreamingSupported = !source.disableStream;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._readCapability.promise;\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            const chunk = this._readableStream.read();\n            if (chunk === null) {\n              this._readCapability = new _util.PromiseCapability();\n              return this.read();\n            }\n            this._loaded += chunk.length;\n            this.onProgress?.({\n              loaded: this._loaded\n            });\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n          _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }\n        function createRequestOptions(parsedUrl, headers) {\n          return {\n            protocol: parsedUrl.protocol,\n            auth: parsedUrl.auth,\n            host: parsedUrl.hostname,\n            port: parsedUrl.port,\n            path: parsedUrl.path,\n            method: \"GET\",\n            headers\n          };\n        }\n        class PDFNodeStreamFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                this._headersCapability.reject(error);\n                return;\n              }\n              this._headersCapability.resolve();\n              this._setReadableStream(response);\n              const getResponseHeader = name => {\n                return this._readableStream.headers[name.toLowerCase()];\n              };\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            };\n            this._request = null;\n            if (this._url.protocol === \"http:\") {\n              const http = require(\"http\");\n              this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            } else {\n              const https = require(\"https\");\n              this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            }\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n              this._headersCapability.reject(reason);\n            });\n            this._request.end();\n          }\n        }\n        class PDFNodeStreamRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            this._httpHeaders = {};\n            for (const property in stream.httpHeaders) {\n              const value = stream.httpHeaders[property];\n              if (value === undefined) {\n                continue;\n              }\n              this._httpHeaders[property] = value;\n            }\n            this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                return;\n              }\n              this._setReadableStream(response);\n            };\n            this._request = null;\n            if (this._url.protocol === \"http:\") {\n              const http = require(\"http\");\n              this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            } else {\n              const https = require(\"https\");\n              this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            }\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n            });\n            this._request.end();\n          }\n        }\n        class PDFNodeStreamFsFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n            const fs = require(\"fs\");\n            fs.lstat(path, (error, stat) => {\n              if (error) {\n                if (error.code === \"ENOENT\") {\n                  error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n                }\n                this._storedError = error;\n                this._headersCapability.reject(error);\n                return;\n              }\n              this._contentLength = stat.size;\n              this._setReadableStream(fs.createReadStream(path));\n              this._headersCapability.resolve();\n            });\n          }\n        }\n        class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n            const fs = require(\"fs\");\n            this._setReadableStream(fs.createReadStream(path, {\n              start,\n              end: end - 1\n            }));\n          }\n        }\n\n        /***/\n      }, /* 24 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SVGGraphics = void 0;\n        var _display_utils = __w_pdfjs_require__(6);\n        var _util = __w_pdfjs_require__(1);\n        ;\n        const SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const createObjectURL = function (data) {\n          let contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n          let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n            return URL.createObjectURL(new Blob([data], {\n              type: contentType\n            }));\n          }\n          const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          let buffer = `data:${contentType};base64,`;\n          for (let i = 0, ii = data.length; i < ii; i += 3) {\n            const b1 = data[i] & 0xff;\n            const b2 = data[i + 1] & 0xff;\n            const b3 = data[i + 2] & 0xff;\n            const d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n            const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n          return buffer;\n        };\n        const convertImgDataToPng = function () {\n          const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          const CHUNK_WRAPPER_SIZE = 12;\n          const crcTable = new Int32Array(256);\n          for (let i = 0; i < 256; i++) {\n            let c = i;\n            for (let h = 0; h < 8; h++) {\n              c = c & 1 ? 0xedb88320 ^ c >> 1 & 0x7fffffff : c >> 1 & 0x7fffffff;\n            }\n            crcTable[i] = c;\n          }\n          function crc32(data, start, end) {\n            let crc = -1;\n            for (let i = start; i < end; i++) {\n              const a = (crc ^ data[i]) & 0xff;\n              const b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n            return crc ^ -1;\n          }\n          function writePngChunk(type, body, data, offset) {\n            let p = offset;\n            const len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            const crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n          function adler32(data, start, end) {\n            let a = 1;\n            let b = 0;\n            for (let i = start; i < end; ++i) {\n              a = (a + (data[i] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n            return b << 16 | a;\n          }\n          function deflateSync(literals) {\n            if (!_util.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n            try {\n              const input = parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n              const output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n            return deflateSyncUncompressed(literals);\n          }\n          function deflateSyncUncompressed(literals) {\n            let len = literals.length;\n            const maxBlockLength = 0xffff;\n            const deflateBlocks = Math.ceil(len / maxBlockLength);\n            const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            let pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            let pos = 0;\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            const adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            let bitDepth, colorType, lineSize;\n            const bytes = imgData.data;\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n              default:\n                throw new Error(\"invalid format\");\n            }\n            const literals = new Uint8Array((1 + lineSize) * height);\n            let offsetLiterals = 0,\n              offsetBytes = 0;\n            for (let y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n              for (let y = 0; y < height; y++) {\n                offsetLiterals++;\n                for (let i = 0; i < lineSize; i++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n            const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            const idat = deflateSync(literals);\n            const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            const data = new Uint8Array(pngLength);\n            let offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return createObjectURL(data, \"image/png\", forceDataSchema);\n          }\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n        class SVGExtraState {\n          constructor() {\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n          clone() {\n            return Object.create(this);\n          }\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        }\n        function opListToTree(opList) {\n          let opTree = [];\n          const tmp = [];\n          for (const opListElement of opList) {\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree.at(-1).items;\n              continue;\n            }\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n          return opTree;\n        }\n        function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n          const s = value.toFixed(10);\n          let i = s.length - 1;\n          if (s[i] !== \"0\") {\n            return s;\n          }\n          do {\n            i--;\n          } while (s[i] === \"0\");\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        }\n        function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n              return `scale(${pf(m[0])} ${pf(m[3])})`;\n            }\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              const a = Math.acos(m[0]) * 180 / Math.PI;\n              return `rotate(${pf(a)})`;\n            }\n          } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n            return `translate(${pf(m[4])} ${pf(m[5])})`;\n          }\n          return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n        }\n        let clipCount = 0;\n        let maskCount = 0;\n        let shadingCount = 0;\n        class SVGGraphics {\n          constructor(commonObjs, objs) {\n            let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n            for (const op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n            return fallback;\n          }\n          save() {\n            this.transformStack.push(this.transformMatrix);\n            const old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n          restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n          group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n          loadDependencies(operatorList) {\n            const fnArray = operatorList.fnArray;\n            const argsArray = operatorList.argsArray;\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n              for (const obj of argsArray[i]) {\n                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                const promise = new Promise(resolve => {\n                  objsPool.get(obj, resolve);\n                });\n                this.current.dependencies.push(promise);\n              }\n            }\n            return Promise.all(this.current.dependencies);\n          }\n          transform(a, b, c, d, e, f) {\n            const transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n          getSVG(operatorList, viewport) {\n            this.viewport = viewport;\n            const svgElement = this._initialize(viewport);\n            return this.loadDependencies(operatorList).then(() => {\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.executeOpTree(this.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n          convertOpList(operatorList) {\n            const operatorIdMapping = this._operatorIdMapping;\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            const opList = [];\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              const fnId = fnArray[i];\n              opList.push({\n                fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n            return opListToTree(opList);\n          }\n          executeOpTree(opTree) {\n            for (const opTreeElement of opTree) {\n              const fn = opTreeElement.fn;\n              const fnId = opTreeElement.fnId;\n              const args = opTreeElement.args;\n              switch (fnId | 0) {\n                case _util.OPS.beginText:\n                  this.beginText();\n                  break;\n                case _util.OPS.dependency:\n                  break;\n                case _util.OPS.setLeading:\n                  this.setLeading(args);\n                  break;\n                case _util.OPS.setLeadingMoveText:\n                  this.setLeadingMoveText(args[0], args[1]);\n                  break;\n                case _util.OPS.setFont:\n                  this.setFont(args);\n                  break;\n                case _util.OPS.showText:\n                  this.showText(args[0]);\n                  break;\n                case _util.OPS.showSpacedText:\n                  this.showText(args[0]);\n                  break;\n                case _util.OPS.endText:\n                  this.endText();\n                  break;\n                case _util.OPS.moveText:\n                  this.moveText(args[0], args[1]);\n                  break;\n                case _util.OPS.setCharSpacing:\n                  this.setCharSpacing(args[0]);\n                  break;\n                case _util.OPS.setWordSpacing:\n                  this.setWordSpacing(args[0]);\n                  break;\n                case _util.OPS.setHScale:\n                  this.setHScale(args[0]);\n                  break;\n                case _util.OPS.setTextMatrix:\n                  this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n                case _util.OPS.setTextRise:\n                  this.setTextRise(args[0]);\n                  break;\n                case _util.OPS.setTextRenderingMode:\n                  this.setTextRenderingMode(args[0]);\n                  break;\n                case _util.OPS.setLineWidth:\n                  this.setLineWidth(args[0]);\n                  break;\n                case _util.OPS.setLineJoin:\n                  this.setLineJoin(args[0]);\n                  break;\n                case _util.OPS.setLineCap:\n                  this.setLineCap(args[0]);\n                  break;\n                case _util.OPS.setMiterLimit:\n                  this.setMiterLimit(args[0]);\n                  break;\n                case _util.OPS.setFillRGBColor:\n                  this.setFillRGBColor(args[0], args[1], args[2]);\n                  break;\n                case _util.OPS.setStrokeRGBColor:\n                  this.setStrokeRGBColor(args[0], args[1], args[2]);\n                  break;\n                case _util.OPS.setStrokeColorN:\n                  this.setStrokeColorN(args);\n                  break;\n                case _util.OPS.setFillColorN:\n                  this.setFillColorN(args);\n                  break;\n                case _util.OPS.shadingFill:\n                  this.shadingFill(args[0]);\n                  break;\n                case _util.OPS.setDash:\n                  this.setDash(args[0], args[1]);\n                  break;\n                case _util.OPS.setRenderingIntent:\n                  this.setRenderingIntent(args[0]);\n                  break;\n                case _util.OPS.setFlatness:\n                  this.setFlatness(args[0]);\n                  break;\n                case _util.OPS.setGState:\n                  this.setGState(args[0]);\n                  break;\n                case _util.OPS.fill:\n                  this.fill();\n                  break;\n                case _util.OPS.eoFill:\n                  this.eoFill();\n                  break;\n                case _util.OPS.stroke:\n                  this.stroke();\n                  break;\n                case _util.OPS.fillStroke:\n                  this.fillStroke();\n                  break;\n                case _util.OPS.eoFillStroke:\n                  this.eoFillStroke();\n                  break;\n                case _util.OPS.clip:\n                  this.clip(\"nonzero\");\n                  break;\n                case _util.OPS.eoClip:\n                  this.clip(\"evenodd\");\n                  break;\n                case _util.OPS.paintSolidColorImageMask:\n                  this.paintSolidColorImageMask();\n                  break;\n                case _util.OPS.paintImageXObject:\n                  this.paintImageXObject(args[0]);\n                  break;\n                case _util.OPS.paintInlineImageXObject:\n                  this.paintInlineImageXObject(args[0]);\n                  break;\n                case _util.OPS.paintImageMaskXObject:\n                  this.paintImageMaskXObject(args[0]);\n                  break;\n                case _util.OPS.paintFormXObjectBegin:\n                  this.paintFormXObjectBegin(args[0], args[1]);\n                  break;\n                case _util.OPS.paintFormXObjectEnd:\n                  this.paintFormXObjectEnd();\n                  break;\n                case _util.OPS.closePath:\n                  this.closePath();\n                  break;\n                case _util.OPS.closeStroke:\n                  this.closeStroke();\n                  break;\n                case _util.OPS.closeFillStroke:\n                  this.closeFillStroke();\n                  break;\n                case _util.OPS.closeEOFillStroke:\n                  this.closeEOFillStroke();\n                  break;\n                case _util.OPS.nextLine:\n                  this.nextLine();\n                  break;\n                case _util.OPS.transform:\n                  this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n                case _util.OPS.constructPath:\n                  this.constructPath(args[0], args[1]);\n                  break;\n                case _util.OPS.endPath:\n                  this.endPath();\n                  break;\n                case 92:\n                  this.group(opTreeElement.items);\n                  break;\n                default:\n                  (0, _util.warn)(`Unimplemented operator ${fn}`);\n                  break;\n              }\n            }\n          }\n          setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n          setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n          setTextMatrix(a, b, c, d, e, f) {\n            const current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.hypot(a, b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.append(current.tspan);\n          }\n          beginText() {\n            const current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n          moveText(x, y) {\n            const current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return;\n            }\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            let x = 0;\n            for (const glyph of glyphs) {\n              if (glyph === null) {\n                x += fontDirection * wordSpacing;\n                continue;\n              } else if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              let scaledX, scaledY;\n              let width = glyph.width;\n              if (vertical) {\n                let vx;\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (glyph.isInFont || font.missingFile) {\n                current.xcoords.push(current.x + scaledX);\n                if (vertical) {\n                  current.ycoords.push(-current.y + scaledY);\n                }\n                current.tspan.textContent += character;\n              } else {}\n              const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n              x += charWidth;\n            }\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n            if (vertical) {\n              current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n            } else {\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              const lineWidthScale = 1 / (current.textMatrixScale || 1);\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n            let textMatrix = current.textMatrix;\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n            current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.append(current.tspan);\n            current.txtgrp.append(current.txtElement);\n            this._ensureTransformGroup().append(current.txtElement);\n          }\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n          addFontStyle(fontObj) {\n            if (!fontObj.data) {\n              throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n            }\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.append(this.cssStyle);\n            }\n            const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n          }\n          setFont(details) {\n            const current = this.current;\n            const fontObj = this.commonObjs.get(details[0]);\n            let size = details[1];\n            current.font = fontObj;\n            if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            let bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n          endText() {\n            const current = this.current;\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n          setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n          setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n          setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n          setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n          setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n          setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n          }\n          setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n          setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n            this.current.ycoords = [];\n          }\n          setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n          setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n          shadingFill(args) {\n            const {\n              width,\n              height\n            } = this.viewport;\n            const inv = _util.Util.inverseTransform(this.transformMatrix);\n            const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n            if (this.current.fillAlpha < 1) {\n              rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n            }\n            this._ensureTransformGroup().append(rect);\n          }\n          _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n            return this._makeShadingPattern(args);\n          }\n          _makeTilingPattern(args) {\n            const color = args[1];\n            const operatorList = args[2];\n            const matrix = args[3] || _util.IDENTITY_MATRIX;\n            const [x0, y0, x1, y1] = args[4];\n            const xstep = args[5];\n            const ystep = args[6];\n            const paintType = args[7];\n            const tilingId = `shading${shadingCount++}`;\n            const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n            const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n            const txstep = xstep * xscale;\n            const tystep = ystep * yscale;\n            const tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", `${tx0}`);\n            tiling.setAttributeNS(null, \"y\", `${ty0}`);\n            const svg = this.svg;\n            const transformMatrix = this.transformMatrix;\n            const fillColor = this.current.fillColor;\n            const strokeColor = this.current.strokeColor;\n            const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n            if (paintType === 2) {\n              const cssColor = _util.Util.makeHexColor(...color);\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.append(bbox.childNodes[0]);\n            this.defs.append(tiling);\n            return `url(#${tilingId})`;\n          }\n          _makeShadingPattern(args) {\n            if (typeof args === \"string\") {\n              args = this.objs.get(args);\n            }\n            switch (args[0]) {\n              case \"RadialAxial\":\n                const shadingId = `shading${shadingCount++}`;\n                const colorStops = args[3];\n                let gradient;\n                switch (args[1]) {\n                  case \"axial\":\n                    const point0 = args[4];\n                    const point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n                  case \"radial\":\n                    const focalPoint = args[4];\n                    const circlePoint = args[5];\n                    const focalRadius = args[6];\n                    const circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n                  default:\n                    throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                }\n                for (const colorStop of colorStops) {\n                  const stop = this.svgFactory.createElement(\"svg:stop\");\n                  stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                  stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                  gradient.append(stop);\n                }\n                this.defs.append(gradient);\n                return `url(#${shadingId})`;\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n              case \"Dummy\":\n                return \"hotpink\";\n              default:\n                throw new Error(`Unknown IR type: ${args[0]}`);\n            }\n          }\n          setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n          constructPath(ops, args) {\n            const current = this.current;\n            let x = current.x,\n              y = current.y;\n            let d = [];\n            let j = 0;\n            for (const op of ops) {\n              switch (op | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"M\", pf(x), pf(y));\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"L\", pf(x), pf(y));\n                  break;\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  d.push(\"Z\");\n                  break;\n              }\n            }\n            d = d.join(\" \");\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n              this._ensureTransformGroup().append(current.path);\n            }\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n          endPath() {\n            const current = this.current;\n            current.path = null;\n            if (!this.pendingClip) {\n              return;\n            }\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n            const clipId = `clippath${clipCount++}`;\n            const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            const clipElement = current.element.cloneNode(true);\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n            this.pendingClip = null;\n            clipPath.append(clipElement);\n            this.defs.append(clipPath);\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n              for (const prev of this.extraStack) {\n                prev.clipGroup = null;\n              }\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n            current.activeClipUrl = `url(#${clipId})`;\n            this.tgrp = null;\n          }\n          clip(type) {\n            this.pendingClip = type;\n          }\n          closePath() {\n            const current = this.current;\n            if (current.path) {\n              const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n          setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n          setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n          setRenderingIntent(intent) {}\n          setFlatness(flatness) {}\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value);\n                  break;\n                case \"CA\":\n                  this.setStrokeAlpha(value);\n                  break;\n                case \"ca\":\n                  this.setFillAlpha(value);\n                  break;\n                default:\n                  (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                  break;\n              }\n            }\n          }\n          fill() {\n            const current = this.current;\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n          stroke() {\n            const current = this.current;\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n          _setStrokeAttributes(element) {\n            let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            const current = this.current;\n            let dashArray = current.dashArray;\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n          eoFill() {\n            this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            this.fill();\n          }\n          fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n          eoFillStroke() {\n            this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            this.fillStroke();\n          }\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n          closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n          paintSolidColorImageMask() {\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n            this._ensureTransformGroup().append(rect);\n          }\n          paintImageXObject(objId) {\n            const imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n          paintInlineImageXObject(imgData, mask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n            if (mask) {\n              mask.append(imgEl);\n            } else {\n              this._ensureTransformGroup().append(imgEl);\n            }\n          }\n          paintImageMaskXObject(img) {\n            const imgData = this.getObject(img.data, img);\n            if (imgData.bitmap) {\n              (0, _util.warn)(\"paintImageMaskXObject: ImageBitmap support is not implemented, \" + \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\");\n              return;\n            }\n            const current = this.current;\n            const width = imgData.width;\n            const height = imgData.height;\n            const fillColor = current.fillColor;\n            current.maskId = `mask${maskCount++}`;\n            const mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n            this.defs.append(mask);\n            this._ensureTransformGroup().append(rect);\n            this.paintInlineImageXObject(imgData, mask);\n          }\n          paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n          paintFormXObjectEnd() {}\n          _initialize(viewport) {\n            const svg = this.svgFactory.create(viewport.width, viewport.height);\n            const definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.append(definitions);\n            this.defs = definitions;\n            const rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.append(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n          _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              const clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.append(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n            return this.current.clipGroup;\n          }\n          _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().append(this.tgrp);\n              } else {\n                this.svg.append(this.tgrp);\n              }\n            }\n            return this.tgrp;\n          }\n        }\n        exports.SVGGraphics = SVGGraphics;\n\n        /***/\n      }, /* 25 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaText = void 0;\n        class XfaText {\n          static textContent(xfa) {\n            const items = [];\n            const output = {\n              items,\n              styles: Object.create(null)\n            };\n            function walk(node) {\n              if (!node) {\n                return;\n              }\n              let str = null;\n              const name = node.name;\n              if (name === \"#text\") {\n                str = node.value;\n              } else if (!XfaText.shouldBuildText(name)) {\n                return;\n              } else if (node?.attributes?.textContent) {\n                str = node.attributes.textContent;\n              } else if (node.value) {\n                str = node.value;\n              }\n              if (str !== null) {\n                items.push({\n                  str\n                });\n              }\n              if (!node.children) {\n                return;\n              }\n              for (const child of node.children) {\n                walk(child);\n              }\n            }\n            walk(xfa);\n            return output;\n          }\n          static shouldBuildText(name) {\n            return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n          }\n        }\n        exports.XfaText = XfaText;\n\n        /***/\n      }, /* 26 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TextLayerRenderTask = void 0;\n        exports.renderTextLayer = renderTextLayer;\n        exports.updateTextLayer = updateTextLayer;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        const MAX_TEXT_DIVS_TO_RENDER = 100000;\n        const DEFAULT_FONT_SIZE = 30;\n        const DEFAULT_FONT_ASCENT = 0.8;\n        const ascentCache = new Map();\n        function getCtx(size, isOffscreenCanvasSupported) {\n          let ctx;\n          if (isOffscreenCanvasSupported && _util.FeatureTest.isOffscreenCanvasSupported) {\n            ctx = new OffscreenCanvas(size, size).getContext(\"2d\", {\n              alpha: false\n            });\n          } else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvas.height = size;\n            ctx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n          }\n          return ctx;\n        }\n        function getAscent(fontFamily, isOffscreenCanvasSupported) {\n          const cachedAscent = ascentCache.get(fontFamily);\n          if (cachedAscent) {\n            return cachedAscent;\n          }\n          const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n          ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n          const metrics = ctx.measureText(\"\");\n          let ascent = metrics.fontBoundingBoxAscent;\n          let descent = Math.abs(metrics.fontBoundingBoxDescent);\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            ctx.canvas.width = ctx.canvas.height = 0;\n            return ratio;\n          }\n          ctx.strokeStyle = \"red\";\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"g\", 0, 0);\n          let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          descent = 0;\n          for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n            if (pixels[i] > 0) {\n              descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n          pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          ascent = 0;\n          for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n            if (pixels[i] > 0) {\n              ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n          ctx.canvas.width = ctx.canvas.height = 0;\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n          ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n          return DEFAULT_FONT_ASCENT;\n        }\n        function appendText(task, geom, styles) {\n          const textDiv = document.createElement(\"span\");\n          const textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL,\n            fontSize: 0\n          };\n          task._textDivs.push(textDiv);\n          const tx = _util.Util.transform(task._transform, geom.transform);\n          let angle = Math.atan2(tx[1], tx[0]);\n          const style = styles[geom.fontName];\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n          const fontHeight = Math.hypot(tx[2], tx[3]);\n          const fontAscent = fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n          let left, top;\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n          const scaleFactorStr = \"calc(var(--scale-factor)*\";\n          const divStyle = textDiv.style;\n          if (task._container === task._rootContainer) {\n            divStyle.left = `${(100 * left / task._pageWidth).toFixed(2)}%`;\n            divStyle.top = `${(100 * top / task._pageHeight).toFixed(2)}%`;\n          } else {\n            divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n            divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n          }\n          divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n          divStyle.fontFamily = style.fontFamily;\n          textDivProperties.fontSize = fontHeight;\n          textDiv.setAttribute(\"role\", \"presentation\");\n          textDiv.textContent = geom.str;\n          textDiv.dir = geom.dir;\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n          let shouldScaleText = false;\n          if (geom.str.length > 1) {\n            shouldScaleText = true;\n          } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n            const absScaleX = Math.abs(geom.transform[0]),\n              absScaleY = Math.abs(geom.transform[3]);\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n          if (shouldScaleText) {\n            textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n          }\n          task._textDivProperties.set(textDiv, textDivProperties);\n          if (task._isReadableStream) {\n            task._layoutText(textDiv);\n          }\n        }\n        function layout(params) {\n          const {\n            div,\n            scale,\n            properties,\n            ctx,\n            prevFontSize,\n            prevFontFamily\n          } = params;\n          const {\n            style\n          } = div;\n          let transform = \"\";\n          if (properties.canvasWidth !== 0 && properties.hasText) {\n            const {\n              fontFamily\n            } = style;\n            const {\n              canvasWidth,\n              fontSize\n            } = properties;\n            if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n              ctx.font = `${fontSize * scale}px ${fontFamily}`;\n              params.prevFontSize = fontSize;\n              params.prevFontFamily = fontFamily;\n            }\n            const {\n              width\n            } = ctx.measureText(div.textContent);\n            if (width > 0) {\n              transform = `scaleX(${canvasWidth * scale / width})`;\n            }\n          }\n          if (properties.angle !== 0) {\n            transform = `rotate(${properties.angle}deg) ${transform}`;\n          }\n          if (transform.length > 0) {\n            style.transform = transform;\n          }\n        }\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n          const textDivs = task._textDivs;\n          const capability = task._capability;\n          const textDivsLength = textDivs.length;\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            capability.resolve();\n            return;\n          }\n          if (!task._isReadableStream) {\n            for (const textDiv of textDivs) {\n              task._layoutText(textDiv);\n            }\n          }\n          capability.resolve();\n        }\n        class TextLayerRenderTask {\n          constructor(_ref38) {\n            let {\n              textContentSource,\n              container,\n              viewport,\n              textDivs,\n              textDivProperties,\n              textContentItemsStr,\n              isOffscreenCanvasSupported\n            } = _ref38;\n            this._textContentSource = textContentSource;\n            this._isReadableStream = textContentSource instanceof ReadableStream;\n            this._container = this._rootContainer = container;\n            this._textDivs = textDivs || [];\n            this._textContentItemsStr = textContentItemsStr || [];\n            this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n            this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n            this._reader = null;\n            this._textDivProperties = textDivProperties || new WeakMap();\n            this._canceled = false;\n            this._capability = new _util.PromiseCapability();\n            this._layoutTextParams = {\n              prevFontSize: null,\n              prevFontFamily: null,\n              div: null,\n              scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n              properties: null,\n              ctx: getCtx(0, isOffscreenCanvasSupported)\n            };\n            const {\n              pageWidth,\n              pageHeight,\n              pageX,\n              pageY\n            } = viewport.rawDims;\n            this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n            this._pageWidth = pageWidth;\n            this._pageHeight = pageHeight;\n            (0, _display_utils.setLayerDimensions)(container, viewport);\n            this._capability.promise.finally(() => {\n              this._layoutTextParams = null;\n            }).catch(() => {});\n          }\n          get promise() {\n            return this._capability.promise;\n          }\n          cancel() {\n            this._canceled = true;\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n              this._reader = null;\n            }\n            this._capability.reject(new _util.AbortException(\"TextLayer task cancelled.\"));\n          }\n          _processItems(items, styleCache) {\n            for (const item of items) {\n              if (item.str === undefined) {\n                if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n                  const parent = this._container;\n                  this._container = document.createElement(\"span\");\n                  this._container.classList.add(\"markedContent\");\n                  if (item.id !== null) {\n                    this._container.setAttribute(\"id\", `${item.id}`);\n                  }\n                  parent.append(this._container);\n                } else if (item.type === \"endMarkedContent\") {\n                  this._container = this._container.parentNode;\n                }\n                continue;\n              }\n              this._textContentItemsStr.push(item.str);\n              appendText(this, item, styleCache);\n            }\n          }\n          _layoutText(textDiv) {\n            const textDivProperties = this._layoutTextParams.properties = this._textDivProperties.get(textDiv);\n            this._layoutTextParams.div = textDiv;\n            layout(this._layoutTextParams);\n            if (textDivProperties.hasText) {\n              this._container.append(textDiv);\n            }\n            if (textDivProperties.hasEOL) {\n              const br = document.createElement(\"br\");\n              br.setAttribute(\"role\", \"presentation\");\n              this._container.append(br);\n            }\n          }\n          _render() {\n            const capability = new _util.PromiseCapability();\n            let styleCache = Object.create(null);\n            if (this._isReadableStream) {\n              const pump = () => {\n                this._reader.read().then(_ref39 => {\n                  let {\n                    value,\n                    done\n                  } = _ref39;\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n                  Object.assign(styleCache, value.styles);\n                  this._processItems(value.items, styleCache);\n                  pump();\n                }, capability.reject);\n              };\n              this._reader = this._textContentSource.getReader();\n              pump();\n            } else if (this._textContentSource) {\n              const {\n                items,\n                styles\n              } = this._textContentSource;\n              this._processItems(items, styles);\n              capability.resolve();\n            } else {\n              throw new Error('No \"textContentSource\" parameter specified.');\n            }\n            capability.promise.then(() => {\n              styleCache = null;\n              render(this);\n            }, this._capability.reject);\n          }\n        }\n        exports.TextLayerRenderTask = TextLayerRenderTask;\n        function renderTextLayer(params) {\n          if (!params.textContentSource && (params.textContent || params.textContentStream)) {\n            (0, _display_utils.deprecated)(\"The TextLayerRender `textContent`/`textContentStream` parameters \" + \"will be removed in the future, please use `textContentSource` instead.\");\n            params.textContentSource = params.textContent || params.textContentStream;\n          }\n          const {\n            container,\n            viewport\n          } = params;\n          const style = getComputedStyle(container);\n          const visibility = style.getPropertyValue(\"visibility\");\n          const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n          if (visibility === \"visible\" && (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)) {\n            console.error(\"The `--scale-factor` CSS-variable must be set, \" + \"to the same value as `viewport.scale`, \" + \"either on the `container`-element itself or higher up in the DOM.\");\n          }\n          const task = new TextLayerRenderTask(params);\n          task._render();\n          return task;\n        }\n        function updateTextLayer(_ref40) {\n          let {\n            container,\n            viewport,\n            textDivs,\n            textDivProperties,\n            isOffscreenCanvasSupported,\n            mustRotate = true,\n            mustRescale = true\n          } = _ref40;\n          if (mustRotate) {\n            (0, _display_utils.setLayerDimensions)(container, {\n              rotation: viewport.rotation\n            });\n          }\n          if (mustRescale) {\n            const ctx = getCtx(0, isOffscreenCanvasSupported);\n            const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n            const params = {\n              prevFontSize: null,\n              prevFontFamily: null,\n              div: null,\n              scale,\n              properties: null,\n              ctx\n            };\n            for (const div of textDivs) {\n              params.properties = textDivProperties.get(div);\n              params.div = div;\n              layout(params);\n            }\n          }\n        }\n\n        /***/\n      }, /* 27 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationEditorLayer = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _freetext = __w_pdfjs_require__(28);\n        var _ink = __w_pdfjs_require__(33);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _stamp = __w_pdfjs_require__(34);\n        class AnnotationEditorLayer {\n          #accessibilityManager;\n          #allowClick = false;\n          #annotationLayer = null;\n          #boundPointerup = this.pointerup.bind(this);\n          #boundPointerdown = this.pointerdown.bind(this);\n          #editors = new Map();\n          #hadPointerDown = false;\n          #isCleaningUp = false;\n          #isDisabling = false;\n          #uiManager;\n          static _initialized = false;\n          constructor(_ref41) {\n            let {\n              uiManager,\n              pageIndex,\n              div,\n              accessibilityManager,\n              annotationLayer,\n              viewport,\n              l10n\n            } = _ref41;\n            const editorTypes = [_freetext.FreeTextEditor, _ink.InkEditor, _stamp.StampEditor];\n            if (!AnnotationEditorLayer._initialized) {\n              AnnotationEditorLayer._initialized = true;\n              for (const editorType of editorTypes) {\n                editorType.initialize(l10n);\n              }\n            }\n            uiManager.registerEditorTypes(editorTypes);\n            this.#uiManager = uiManager;\n            this.pageIndex = pageIndex;\n            this.div = div;\n            this.#accessibilityManager = accessibilityManager;\n            this.#annotationLayer = annotationLayer;\n            this.viewport = viewport;\n            this.#uiManager.addLayer(this);\n          }\n          get isEmpty() {\n            return this.#editors.size === 0;\n          }\n          updateToolbar(mode) {\n            this.#uiManager.updateToolbar(mode);\n          }\n          updateMode() {\n            let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.#uiManager.getMode();\n            this.#cleanup();\n            if (mode === _util.AnnotationEditorType.INK) {\n              this.addInkEditorIfNeeded(false);\n              this.disableClick();\n            } else {\n              this.enableClick();\n            }\n            if (mode !== _util.AnnotationEditorType.NONE) {\n              this.div.classList.toggle(\"freeTextEditing\", mode === _util.AnnotationEditorType.FREETEXT);\n              this.div.classList.toggle(\"inkEditing\", mode === _util.AnnotationEditorType.INK);\n              this.div.classList.toggle(\"stampEditing\", mode === _util.AnnotationEditorType.STAMP);\n              this.div.hidden = false;\n            }\n          }\n          addInkEditorIfNeeded(isCommitting) {\n            if (!isCommitting && this.#uiManager.getMode() !== _util.AnnotationEditorType.INK) {\n              return;\n            }\n            if (!isCommitting) {\n              for (const editor of this.#editors.values()) {\n                if (editor.isEmpty()) {\n                  editor.setInBackground();\n                  return;\n                }\n              }\n            }\n            const editor = this.#createAndAddNewEditor({\n              offsetX: 0,\n              offsetY: 0\n            }, false);\n            editor.setInBackground();\n          }\n          setEditingState(isEditing) {\n            this.#uiManager.setEditingState(isEditing);\n          }\n          addCommands(params) {\n            this.#uiManager.addCommands(params);\n          }\n          enable() {\n            this.div.style.pointerEvents = \"auto\";\n            const annotationElementIds = new Set();\n            for (const editor of this.#editors.values()) {\n              editor.enableEditing();\n              if (editor.annotationElementId) {\n                annotationElementIds.add(editor.annotationElementId);\n              }\n            }\n            if (!this.#annotationLayer) {\n              return;\n            }\n            const editables = this.#annotationLayer.getEditableAnnotations();\n            for (const editable of editables) {\n              editable.hide();\n              if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n                continue;\n              }\n              if (annotationElementIds.has(editable.data.id)) {\n                continue;\n              }\n              const editor = this.deserialize(editable);\n              if (!editor) {\n                continue;\n              }\n              this.addOrRebuild(editor);\n              editor.enableEditing();\n            }\n          }\n          disable() {\n            this.#isDisabling = true;\n            this.div.style.pointerEvents = \"none\";\n            const hiddenAnnotationIds = new Set();\n            for (const editor of this.#editors.values()) {\n              editor.disableEditing();\n              if (!editor.annotationElementId || editor.serialize() !== null) {\n                hiddenAnnotationIds.add(editor.annotationElementId);\n                continue;\n              }\n              this.getEditableAnnotation(editor.annotationElementId)?.show();\n              editor.remove();\n            }\n            if (this.#annotationLayer) {\n              const editables = this.#annotationLayer.getEditableAnnotations();\n              for (const editable of editables) {\n                const {\n                  id\n                } = editable.data;\n                if (hiddenAnnotationIds.has(id) || this.#uiManager.isDeletedAnnotationElement(id)) {\n                  continue;\n                }\n                editable.show();\n              }\n            }\n            this.#cleanup();\n            if (this.isEmpty) {\n              this.div.hidden = true;\n            }\n            this.#isDisabling = false;\n          }\n          getEditableAnnotation(id) {\n            return this.#annotationLayer?.getEditableAnnotation(id) || null;\n          }\n          setActiveEditor(editor) {\n            const currentActive = this.#uiManager.getActive();\n            if (currentActive === editor) {\n              return;\n            }\n            this.#uiManager.setActiveEditor(editor);\n          }\n          enableClick() {\n            this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n            this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n          }\n          disableClick() {\n            this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n            this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n          }\n          attach(editor) {\n            this.#editors.set(editor.id, editor);\n            const {\n              annotationElementId\n            } = editor;\n            if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) {\n              this.#uiManager.removeDeletedAnnotationElement(editor);\n            }\n          }\n          detach(editor) {\n            this.#editors.delete(editor.id);\n            this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n            if (!this.#isDisabling && editor.annotationElementId) {\n              this.#uiManager.addDeletedAnnotationElement(editor);\n            }\n          }\n          remove(editor) {\n            this.detach(editor);\n            this.#uiManager.removeEditor(editor);\n            if (editor.div.contains(document.activeElement)) {\n              setTimeout(() => {\n                this.#uiManager.focusMainContainer();\n              }, 0);\n            }\n            editor.div.remove();\n            editor.isAttachedToDOM = false;\n            if (!this.#isCleaningUp) {\n              this.addInkEditorIfNeeded(false);\n            }\n          }\n          changeParent(editor) {\n            if (editor.parent === this) {\n              return;\n            }\n            if (editor.annotationElementId) {\n              this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n              _editor.AnnotationEditor.deleteAnnotationElement(editor);\n              editor.annotationElementId = null;\n            }\n            this.attach(editor);\n            editor.parent?.detach(editor);\n            editor.setParent(this);\n            if (editor.div && editor.isAttachedToDOM) {\n              editor.div.remove();\n              this.div.append(editor.div);\n            }\n          }\n          add(editor) {\n            this.changeParent(editor);\n            this.#uiManager.addEditor(editor);\n            this.attach(editor);\n            if (!editor.isAttachedToDOM) {\n              const div = editor.render();\n              this.div.append(div);\n              editor.isAttachedToDOM = true;\n            }\n            editor.fixAndSetPosition();\n            editor.onceAdded();\n            this.#uiManager.addToAnnotationStorage(editor);\n          }\n          moveEditorInDOM(editor) {\n            if (!editor.isAttachedToDOM) {\n              return;\n            }\n            const {\n              activeElement\n            } = document;\n            if (editor.div.contains(activeElement)) {\n              editor._focusEventsAllowed = false;\n              setTimeout(() => {\n                if (!editor.div.contains(document.activeElement)) {\n                  editor.div.addEventListener(\"focusin\", () => {\n                    editor._focusEventsAllowed = true;\n                  }, {\n                    once: true\n                  });\n                  activeElement.focus();\n                } else {\n                  editor._focusEventsAllowed = true;\n                }\n              }, 0);\n            }\n            editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n          }\n          addOrRebuild(editor) {\n            if (editor.needsToBeRebuilt()) {\n              editor.rebuild();\n            } else {\n              this.add(editor);\n            }\n          }\n          addUndoableEditor(editor) {\n            const cmd = () => editor._uiManager.rebuild(editor);\n            const undo = () => {\n              editor.remove();\n            };\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: false\n            });\n          }\n          getNextId() {\n            return this.#uiManager.getId();\n          }\n          #createNewEditor(params) {\n            switch (this.#uiManager.getMode()) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return new _freetext.FreeTextEditor(params);\n              case _util.AnnotationEditorType.INK:\n                return new _ink.InkEditor(params);\n              case _util.AnnotationEditorType.STAMP:\n                return new _stamp.StampEditor(params);\n            }\n            return null;\n          }\n          pasteEditor(mode, params) {\n            this.#uiManager.updateToolbar(mode);\n            this.#uiManager.updateMode(mode);\n            const {\n              offsetX,\n              offsetY\n            } = this.#getCenterPoint();\n            const id = this.getNextId();\n            const editor = this.#createNewEditor({\n              parent: this,\n              id,\n              x: offsetX,\n              y: offsetY,\n              uiManager: this.#uiManager,\n              isCentered: true,\n              ...params\n            });\n            if (editor) {\n              this.add(editor);\n            }\n          }\n          deserialize(data) {\n            switch (data.annotationType ?? data.annotationEditorType) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return _freetext.FreeTextEditor.deserialize(data, this, this.#uiManager);\n              case _util.AnnotationEditorType.INK:\n                return _ink.InkEditor.deserialize(data, this, this.#uiManager);\n              case _util.AnnotationEditorType.STAMP:\n                return _stamp.StampEditor.deserialize(data, this, this.#uiManager);\n            }\n            return null;\n          }\n          #createAndAddNewEditor(event, isCentered) {\n            const id = this.getNextId();\n            const editor = this.#createNewEditor({\n              parent: this,\n              id,\n              x: event.offsetX,\n              y: event.offsetY,\n              uiManager: this.#uiManager,\n              isCentered\n            });\n            if (editor) {\n              this.add(editor);\n            }\n            return editor;\n          }\n          #getCenterPoint() {\n            const {\n              x,\n              y,\n              width,\n              height\n            } = this.div.getBoundingClientRect();\n            const tlX = Math.max(0, x);\n            const tlY = Math.max(0, y);\n            const brX = Math.min(window.innerWidth, x + width);\n            const brY = Math.min(window.innerHeight, y + height);\n            const centerX = (tlX + brX) / 2 - x;\n            const centerY = (tlY + brY) / 2 - y;\n            const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [centerX, centerY] : [centerY, centerX];\n            return {\n              offsetX,\n              offsetY\n            };\n          }\n          addNewEditor() {\n            this.#createAndAddNewEditor(this.#getCenterPoint(), true);\n          }\n          setSelected(editor) {\n            this.#uiManager.setSelected(editor);\n          }\n          toggleSelected(editor) {\n            this.#uiManager.toggleSelected(editor);\n          }\n          isSelected(editor) {\n            return this.#uiManager.isSelected(editor);\n          }\n          unselect(editor) {\n            this.#uiManager.unselect(editor);\n          }\n          pointerup(event) {\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            if (event.target !== this.div) {\n              return;\n            }\n            if (!this.#hadPointerDown) {\n              return;\n            }\n            this.#hadPointerDown = false;\n            if (!this.#allowClick) {\n              this.#allowClick = true;\n              return;\n            }\n            if (this.#uiManager.getMode() === _util.AnnotationEditorType.STAMP) {\n              this.#uiManager.unselectAll();\n              return;\n            }\n            this.#createAndAddNewEditor(event, false);\n          }\n          pointerdown(event) {\n            if (this.#hadPointerDown) {\n              this.#hadPointerDown = false;\n              return;\n            }\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            if (event.target !== this.div) {\n              return;\n            }\n            this.#hadPointerDown = true;\n            const editor = this.#uiManager.getActive();\n            this.#allowClick = !editor || editor.isEmpty();\n          }\n          findNewParent(editor, x, y) {\n            const layer = this.#uiManager.findParent(x, y);\n            if (layer === null || layer === this) {\n              return false;\n            }\n            layer.changeParent(editor);\n            return true;\n          }\n          destroy() {\n            if (this.#uiManager.getActive()?.parent === this) {\n              this.#uiManager.commitOrRemove();\n              this.#uiManager.setActiveEditor(null);\n            }\n            for (const editor of this.#editors.values()) {\n              this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n              editor.setParent(null);\n              editor.isAttachedToDOM = false;\n              editor.div.remove();\n            }\n            this.div = null;\n            this.#editors.clear();\n            this.#uiManager.removeLayer(this);\n          }\n          #cleanup() {\n            this.#isCleaningUp = true;\n            for (const editor of this.#editors.values()) {\n              if (editor.isEmpty()) {\n                editor.remove();\n              }\n            }\n            this.#isCleaningUp = false;\n          }\n          render(_ref42) {\n            let {\n              viewport\n            } = _ref42;\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(this.div, viewport);\n            for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n              this.add(editor);\n            }\n            this.updateMode();\n          }\n          update(_ref43) {\n            let {\n              viewport\n            } = _ref43;\n            this.#uiManager.commitOrRemove();\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(this.div, {\n              rotation: viewport.rotation\n            });\n            this.updateMode();\n          }\n          get pageDimensions() {\n            const {\n              pageWidth,\n              pageHeight\n            } = this.viewport.rawDims;\n            return [pageWidth, pageHeight];\n          }\n        }\n        exports.AnnotationEditorLayer = AnnotationEditorLayer;\n\n        /***/\n      }, /* 28 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FreeTextEditor = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _tools = __w_pdfjs_require__(5);\n        var _editor = __w_pdfjs_require__(4);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        class FreeTextEditor extends _editor.AnnotationEditor {\n          #boundEditorDivBlur = this.editorDivBlur.bind(this);\n          #boundEditorDivFocus = this.editorDivFocus.bind(this);\n          #boundEditorDivInput = this.editorDivInput.bind(this);\n          #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n          #color;\n          #content = \"\";\n          #editorDivId = `${this.id}-editor`;\n          #fontSize;\n          #initialData = null;\n          static _freeTextDefaultContent = \"\";\n          static _internalPadding = 0;\n          static _defaultColor = null;\n          static _defaultFontSize = 10;\n          static get _keyboardManager() {\n            const proto = FreeTextEditor.prototype;\n            const arrowChecker = self => self.isEmpty();\n            const small = _tools.AnnotationEditorUIManager.TRANSLATE_SMALL;\n            const big = _tools.AnnotationEditorUIManager.TRANSLATE_BIG;\n            return (0, _util.shadow)(this, \"_keyboardManager\", new _tools.KeyboardManager([[[\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"], proto.commitOrRemove, {\n              bubbles: true\n            }], [[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], proto.commitOrRemove], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._translateEmpty, {\n              args: [-small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto._translateEmpty, {\n              args: [-big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._translateEmpty, {\n              args: [small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto._translateEmpty, {\n              args: [big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._translateEmpty, {\n              args: [0, -small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto._translateEmpty, {\n              args: [0, -big],\n              checker: arrowChecker\n            }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._translateEmpty, {\n              args: [0, small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto._translateEmpty, {\n              args: [0, big],\n              checker: arrowChecker\n            }]]));\n          }\n          static _type = \"freetext\";\n          constructor(params) {\n            super({\n              ...params,\n              name: \"freeTextEditor\"\n            });\n            this.#color = params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n            this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n          }\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n, {\n              strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"]\n            });\n            const style = getComputedStyle(document.documentElement);\n            this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n          }\n          static updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                FreeTextEditor._defaultFontSize = value;\n                break;\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                FreeTextEditor._defaultColor = value;\n                break;\n            }\n          }\n          updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                this.#updateFontSize(value);\n                break;\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                this.#updateColor(value);\n                break;\n            }\n          }\n          static get defaultPropertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor]];\n          }\n          get propertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, this.#color]];\n          }\n          #updateFontSize(fontSize) {\n            const setFontsize = size => {\n              this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n              this.translate(0, -(size - this.#fontSize) * this.parentScale);\n              this.#fontSize = size;\n              this.#setEditorDimensions();\n            };\n            const savedFontsize = this.#fontSize;\n            this.addCommands({\n              cmd: () => {\n                setFontsize(fontSize);\n              },\n              undo: () => {\n                setFontsize(savedFontsize);\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          #updateColor(color) {\n            const savedColor = this.#color;\n            this.addCommands({\n              cmd: () => {\n                this.#color = this.editorDiv.style.color = color;\n              },\n              undo: () => {\n                this.#color = this.editorDiv.style.color = savedColor;\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          _translateEmpty(x, y) {\n            this._uiManager.translateSelectedEditors(x, y, true);\n          }\n          getInitialTranslation() {\n            const scale = this.parentScale;\n            return [-FreeTextEditor._internalPadding * scale, -(FreeTextEditor._internalPadding + this.#fontSize) * scale];\n          }\n          rebuild() {\n            if (!this.parent) {\n              return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n              return;\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n          enableEditMode() {\n            if (this.isInEditMode()) {\n              return;\n            }\n            this.parent.setEditingState(false);\n            this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n            super.enableEditMode();\n            this.overlayDiv.classList.remove(\"enabled\");\n            this.editorDiv.contentEditable = true;\n            this._isDraggable = false;\n            this.div.removeAttribute(\"aria-activedescendant\");\n            this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n            this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n            this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n            this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n          }\n          disableEditMode() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n            this.parent.setEditingState(true);\n            super.disableEditMode();\n            this.overlayDiv.classList.add(\"enabled\");\n            this.editorDiv.contentEditable = false;\n            this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n            this._isDraggable = true;\n            this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n            this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n            this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n            this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n            this.div.focus({\n              preventScroll: true\n            });\n            this.isEditing = false;\n            this.parent.div.classList.add(\"freeTextEditing\");\n          }\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            super.focusin(event);\n            if (event.target !== this.editorDiv) {\n              this.editorDiv.focus();\n            }\n          }\n          onceAdded() {\n            if (this.width) {\n              this.#cheatInitialRect();\n              return;\n            }\n            this.enableEditMode();\n            this.editorDiv.focus();\n            if (this._initialOptions?.isCentered) {\n              this.center();\n            }\n            this._initialOptions = null;\n          }\n          isEmpty() {\n            return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n          }\n          remove() {\n            this.isEditing = false;\n            if (this.parent) {\n              this.parent.setEditingState(true);\n              this.parent.div.classList.add(\"freeTextEditing\");\n            }\n            super.remove();\n          }\n          #extractText() {\n            const divs = this.editorDiv.getElementsByTagName(\"div\");\n            if (divs.length === 0) {\n              return this.editorDiv.innerText;\n            }\n            const buffer = [];\n            for (const div of divs) {\n              buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n            }\n            return buffer.join(\"\\n\");\n          }\n          #setEditorDimensions() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            let rect;\n            if (this.isAttachedToDOM) {\n              rect = this.div.getBoundingClientRect();\n            } else {\n              const {\n                currentLayer,\n                div\n              } = this;\n              const savedDisplay = div.style.display;\n              div.style.display = \"hidden\";\n              currentLayer.div.append(this.div);\n              rect = div.getBoundingClientRect();\n              div.remove();\n              div.style.display = savedDisplay;\n            }\n            if (this.rotation % 180 === this.parentRotation % 180) {\n              this.width = rect.width / parentWidth;\n              this.height = rect.height / parentHeight;\n            } else {\n              this.width = rect.height / parentWidth;\n              this.height = rect.width / parentHeight;\n            }\n            this.fixAndSetPosition();\n          }\n          commit() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n            super.commit();\n            this.disableEditMode();\n            const savedText = this.#content;\n            const newText = this.#content = this.#extractText().trimEnd();\n            if (savedText === newText) {\n              return;\n            }\n            const setText = text => {\n              this.#content = text;\n              if (!text) {\n                this.remove();\n                return;\n              }\n              this.#setContent();\n              this._uiManager.rebuild(this);\n              this.#setEditorDimensions();\n            };\n            this.addCommands({\n              cmd: () => {\n                setText(newText);\n              },\n              undo: () => {\n                setText(savedText);\n              },\n              mustExec: false\n            });\n            this.#setEditorDimensions();\n          }\n          shouldGetKeyboardEvents() {\n            return this.isInEditMode();\n          }\n          enterInEditMode() {\n            this.enableEditMode();\n            this.editorDiv.focus();\n          }\n          dblclick(event) {\n            this.enterInEditMode();\n          }\n          keydown(event) {\n            if (event.target === this.div && event.key === \"Enter\") {\n              this.enterInEditMode();\n              event.preventDefault();\n            }\n          }\n          editorDivKeydown(event) {\n            FreeTextEditor._keyboardManager.exec(this, event);\n          }\n          editorDivFocus(event) {\n            this.isEditing = true;\n          }\n          editorDivBlur(event) {\n            this.isEditing = false;\n          }\n          editorDivInput(event) {\n            this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n          }\n          disableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"comment\");\n            this.editorDiv.removeAttribute(\"aria-multiline\");\n          }\n          enableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"textbox\");\n            this.editorDiv.setAttribute(\"aria-multiline\", true);\n          }\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            super.render();\n            this.editorDiv = document.createElement(\"div\");\n            this.editorDiv.className = \"internal\";\n            this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n            this.enableEditing();\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_free_text2_aria_label\").then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n            _editor.AnnotationEditor._l10nPromise.get(\"free_text2_default_content\").then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n            this.editorDiv.contentEditable = true;\n            const {\n              style\n            } = this.editorDiv;\n            style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n            style.color = this.#color;\n            this.div.append(this.editorDiv);\n            this.overlayDiv = document.createElement(\"div\");\n            this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n            this.div.append(this.overlayDiv);\n            (0, _tools.bindEvents)(this, this.div, [\"dblclick\", \"keydown\"]);\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              if (this.annotationElementId) {\n                const {\n                  position\n                } = this.#initialData;\n                let [tx, ty] = this.getInitialTranslation();\n                [tx, ty] = this.pageTranslationToScreen(tx, ty);\n                const [pageWidth, pageHeight] = this.pageDimensions;\n                const [pageX, pageY] = this.pageTranslation;\n                let posX, posY;\n                switch (this.rotation) {\n                  case 0:\n                    posX = baseX + (position[0] - pageX) / pageWidth;\n                    posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n                    break;\n                  case 90:\n                    posX = baseX + (position[0] - pageX) / pageWidth;\n                    posY = baseY - (position[1] - pageY) / pageHeight;\n                    [tx, ty] = [ty, -tx];\n                    break;\n                  case 180:\n                    posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n                    posY = baseY - (position[1] - pageY) / pageHeight;\n                    [tx, ty] = [-tx, -ty];\n                    break;\n                  case 270:\n                    posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n                    posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n                    [tx, ty] = [-ty, tx];\n                    break;\n                }\n                this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n              } else {\n                this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              }\n              this.#setContent();\n              this._isDraggable = true;\n              this.editorDiv.contentEditable = false;\n            } else {\n              this._isDraggable = false;\n              this.editorDiv.contentEditable = true;\n            }\n            return this.div;\n          }\n          #setContent() {\n            this.editorDiv.replaceChildren();\n            if (!this.#content) {\n              return;\n            }\n            for (const line of this.#content.split(\"\\n\")) {\n              const div = document.createElement(\"div\");\n              div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n              this.editorDiv.append(div);\n            }\n          }\n          get contentDiv() {\n            return this.editorDiv;\n          }\n          static deserialize(data, parent, uiManager) {\n            let initialData = null;\n            if (data instanceof _annotation_layer.FreeTextAnnotationElement) {\n              const {\n                data: {\n                  defaultAppearanceData: {\n                    fontSize,\n                    fontColor\n                  },\n                  rect,\n                  rotation,\n                  id\n                },\n                textContent,\n                textPosition,\n                parent: {\n                  page: {\n                    pageNumber\n                  }\n                }\n              } = data;\n              if (!textContent || textContent.length === 0) {\n                return null;\n              }\n              initialData = data = {\n                annotationType: _util.AnnotationEditorType.FREETEXT,\n                color: Array.from(fontColor),\n                fontSize,\n                value: textContent.join(\"\\n\"),\n                position: textPosition,\n                pageIndex: pageNumber - 1,\n                rect,\n                rotation,\n                id,\n                deleted: false\n              };\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            editor.#fontSize = data.fontSize;\n            editor.#color = _util.Util.makeHexColor(...data.color);\n            editor.#content = data.value;\n            editor.annotationElementId = data.id || null;\n            editor.#initialData = initialData;\n            return editor;\n          }\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.isEmpty()) {\n              return null;\n            }\n            if (this.deleted) {\n              return {\n                pageIndex: this.pageIndex,\n                id: this.annotationElementId,\n                deleted: true\n              };\n            }\n            const padding = FreeTextEditor._internalPadding * this.parentScale;\n            const rect = this.getRect(padding, padding);\n            const color = _editor.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.#color);\n            const serialized = {\n              annotationType: _util.AnnotationEditorType.FREETEXT,\n              color,\n              fontSize: this.#fontSize,\n              value: this.#content,\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n            };\n            if (isForCopying) {\n              return serialized;\n            }\n            if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n              return null;\n            }\n            serialized.id = this.annotationElementId;\n            return serialized;\n          }\n          #hasElementChanged(serialized) {\n            const {\n              value,\n              fontSize,\n              color,\n              rect,\n              pageIndex\n            } = this.#initialData;\n            return serialized.value !== value || serialized.fontSize !== fontSize || serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) || serialized.color.some((c, i) => c !== color[i]) || serialized.pageIndex !== pageIndex;\n          }\n          #cheatInitialRect() {\n            let delayed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this.annotationElementId) {\n              return;\n            }\n            this.#setEditorDimensions();\n            if (!delayed && (this.width === 0 || this.height === 0)) {\n              setTimeout(() => this.#cheatInitialRect(true), 0);\n              return;\n            }\n            const padding = FreeTextEditor._internalPadding * this.parentScale;\n            this.#initialData.rect = this.getRect(padding, padding);\n          }\n        }\n        exports.FreeTextEditor = FreeTextEditor;\n\n        /***/\n      }, /* 29 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StampAnnotationElement = exports.InkAnnotationElement = exports.FreeTextAnnotationElement = exports.AnnotationLayer = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _annotation_storage = __w_pdfjs_require__(3);\n        var _scripting_utils = __w_pdfjs_require__(30);\n        var _displayL10n_utils = __w_pdfjs_require__(31);\n        var _xfa_layer = __w_pdfjs_require__(32);\n        const DEFAULT_TAB_INDEX = 1000;\n        const DEFAULT_FONT_SIZE = 9;\n        const GetElementsByNameSet = new WeakSet();\n        function getRectDims(rect) {\n          return {\n            width: rect[2] - rect[0],\n            height: rect[3] - rect[1]\n          };\n        }\n        class AnnotationElementFactory {\n          static create(parameters) {\n            const subtype = parameters.data.annotationType;\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n              case _util.AnnotationType.WIDGET:\n                const fieldType = parameters.data.fieldType;\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n                    return new PushButtonWidgetAnnotationElement(parameters);\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                  case \"Sig\":\n                    return new SignatureWidgetAnnotationElement(parameters);\n                }\n                return new WidgetAnnotationElement(parameters);\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n        }\n        class AnnotationElement {\n          #hasBorder = false;\n          constructor(parameters) {\n            let {\n              isRenderable = false,\n              ignoreBorder = false,\n              createQuadrilaterals = false\n            } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderForms = parameters.renderForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._fieldObjects = parameters.fieldObjects;\n            this.parent = parameters.parent;\n            if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n            }\n            if (createQuadrilaterals) {\n              this._createQuadrilaterals();\n            }\n          }\n          static _hasPopupData(_ref44) {\n            let {\n              titleObj,\n              contentsObj,\n              richText\n            } = _ref44;\n            return !!(titleObj?.str || contentsObj?.str || richText?.str);\n          }\n          get hasPopupData() {\n            return AnnotationElement._hasPopupData(this.data);\n          }\n          _createContainer(ignoreBorder) {\n            const {\n              data,\n              parent: {\n                page,\n                viewport\n              }\n            } = this;\n            const container = document.createElement(\"section\");\n            container.setAttribute(\"data-annotation-id\", data.id);\n            if (!(this instanceof WidgetAnnotationElement)) {\n              container.tabIndex = DEFAULT_TAB_INDEX;\n            }\n            container.style.zIndex = this.parent.zIndex++;\n            if (this.data.popupRef) {\n              container.setAttribute(\"aria-haspopup\", \"dialog\");\n            }\n            if (data.noRotate) {\n              container.classList.add(\"norotate\");\n            }\n            const {\n              pageWidth,\n              pageHeight,\n              pageX,\n              pageY\n            } = viewport.rawDims;\n            if (!data.rect || this instanceof PopupAnnotationElement) {\n              const {\n                rotation\n              } = data;\n              if (!data.hasOwnCanvas && rotation !== 0) {\n                this.setRotation(rotation, container);\n              }\n              return container;\n            }\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = `${data.borderStyle.width}px`;\n              const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              const verticalRadius = data.borderStyle.verticalCornerRadius;\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n                container.style.borderRadius = radius;\n              } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n                container.style.borderRadius = radius;\n              }\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n                default:\n                  break;\n              }\n              const borderColor = data.borderColor || null;\n              if (borderColor) {\n                this.#hasBorder = true;\n                container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n            container.style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n            container.style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n            const {\n              rotation\n            } = data;\n            if (data.hasOwnCanvas || rotation === 0) {\n              container.style.width = `${100 * width / pageWidth}%`;\n              container.style.height = `${100 * height / pageHeight}%`;\n            } else {\n              this.setRotation(rotation, container);\n            }\n            return container;\n          }\n          setRotation(angle) {\n            let container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n            if (!this.data.rect) {\n              return;\n            }\n            const {\n              pageWidth,\n              pageHeight\n            } = this.parent.viewport.rawDims;\n            const {\n              width,\n              height\n            } = getRectDims(this.data.rect);\n            let elementWidth, elementHeight;\n            if (angle % 180 === 0) {\n              elementWidth = 100 * width / pageWidth;\n              elementHeight = 100 * height / pageHeight;\n            } else {\n              elementWidth = 100 * height / pageWidth;\n              elementHeight = 100 * width / pageHeight;\n            }\n            container.style.width = `${elementWidth}%`;\n            container.style.height = `${elementHeight}%`;\n            container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n          }\n          get _commonActions() {\n            const setColor = (jsName, styleName, event) => {\n              const color = event.detail[jsName];\n              const colorType = color[0];\n              const colorArray = color.slice(1);\n              event.target.style[styleName] = _scripting_utils.ColorConverters[`${colorType}_HTML`](colorArray);\n              this.annotationStorage.setValue(this.data.id, {\n                [styleName]: _scripting_utils.ColorConverters[`${colorType}_rgb`](colorArray)\n              });\n            };\n            return (0, _util.shadow)(this, \"_commonActions\", {\n              display: event => {\n                const {\n                  display\n                } = event.detail;\n                const hidden = display % 2 === 1;\n                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  noView: hidden,\n                  noPrint: display === 1 || display === 2\n                });\n              },\n              print: event => {\n                this.annotationStorage.setValue(this.data.id, {\n                  noPrint: !event.detail.print\n                });\n              },\n              hidden: event => {\n                const {\n                  hidden\n                } = event.detail;\n                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  noPrint: hidden,\n                  noView: hidden\n                });\n              },\n              focus: event => {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n              userName: event => {\n                event.target.title = event.detail.userName;\n              },\n              readonly: event => {\n                event.target.disabled = event.detail.readonly;\n              },\n              required: event => {\n                this._setRequired(event.target, event.detail.required);\n              },\n              bgColor: event => {\n                setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: event => {\n                setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: event => {\n                setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: event => {\n                setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: event => {\n                setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: event => {\n                setColor(\"strokeColor\", \"borderColor\", event);\n              },\n              rotation: event => {\n                const angle = event.detail.rotation;\n                this.setRotation(angle);\n                this.annotationStorage.setValue(this.data.id, {\n                  rotation: angle\n                });\n              }\n            });\n          }\n          _dispatchEventFromSandbox(actions, jsEvent) {\n            const commonActions = this._commonActions;\n            for (const name of Object.keys(jsEvent.detail)) {\n              const action = actions[name] || commonActions[name];\n              action?.(jsEvent);\n            }\n          }\n          _setDefaultPropertiesFromJS(element) {\n            if (!this.enableScripting) {\n              return;\n            }\n            const storedData = this.annotationStorage.getRawValue(this.data.id);\n            if (!storedData) {\n              return;\n            }\n            const commonActions = this._commonActions;\n            for (const [actionName, detail] of Object.entries(storedData)) {\n              const action = commonActions[actionName];\n              if (action) {\n                const eventProxy = {\n                  detail: {\n                    [actionName]: detail\n                  },\n                  target: element\n                };\n                action(eventProxy);\n                delete storedData[actionName];\n              }\n            }\n          }\n          _createQuadrilaterals() {\n            if (!this.container) {\n              return;\n            }\n            const {\n              quadPoints\n            } = this.data;\n            if (!quadPoints) {\n              return;\n            }\n            const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n            if (quadPoints.length === 1) {\n              const [, {\n                x: trX,\n                y: trY\n              }, {\n                x: blX,\n                y: blY\n              }] = quadPoints[0];\n              if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {\n                return;\n              }\n            }\n            const {\n              style\n            } = this.container;\n            let svgBuffer;\n            if (this.#hasBorder) {\n              const {\n                borderColor,\n                borderWidth\n              } = style;\n              style.borderWidth = 0;\n              svgBuffer = [\"url('data:image/svg+xml;utf8,\", `<svg xmlns=\"http://www.w3.org/2000/svg\"`, ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`, `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];\n              this.container.classList.add(\"hasBorder\");\n            }\n            const width = rectTrX - rectBlX;\n            const height = rectTrY - rectBlY;\n            const {\n              svgFactory\n            } = this;\n            const svg = svgFactory.createElement(\"svg\");\n            svg.classList.add(\"quadrilateralsContainer\");\n            svg.setAttribute(\"width\", 0);\n            svg.setAttribute(\"height\", 0);\n            const defs = svgFactory.createElement(\"defs\");\n            svg.append(defs);\n            const clipPath = svgFactory.createElement(\"clipPath\");\n            const id = `clippath_${this.data.id}`;\n            clipPath.setAttribute(\"id\", id);\n            clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n            defs.append(clipPath);\n            for (const [, {\n              x: trX,\n              y: trY\n            }, {\n              x: blX,\n              y: blY\n            }] of quadPoints) {\n              const rect = svgFactory.createElement(\"rect\");\n              const x = (blX - rectBlX) / width;\n              const y = (rectTrY - trY) / height;\n              const rectWidth = (trX - blX) / width;\n              const rectHeight = (trY - blY) / height;\n              rect.setAttribute(\"x\", x);\n              rect.setAttribute(\"y\", y);\n              rect.setAttribute(\"width\", rectWidth);\n              rect.setAttribute(\"height\", rectHeight);\n              clipPath.append(rect);\n              svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n            }\n            if (this.#hasBorder) {\n              svgBuffer.push(`</g></svg>')`);\n              style.backgroundImage = svgBuffer.join(\"\");\n            }\n            this.container.append(svg);\n            this.container.style.clipPath = `url(#${id})`;\n          }\n          _createPopup() {\n            const {\n              container,\n              data\n            } = this;\n            container.setAttribute(\"aria-haspopup\", \"dialog\");\n            const popup = new PopupAnnotationElement({\n              data: {\n                color: data.color,\n                titleObj: data.titleObj,\n                modificationDate: data.modificationDate,\n                contentsObj: data.contentsObj,\n                richText: data.richText,\n                parentRect: data.rect,\n                borderStyle: 0,\n                id: `popup_${data.id}`,\n                rotation: data.rotation\n              },\n              parent: this.parent,\n              elements: [this]\n            });\n            this.parent.div.append(popup.render());\n          }\n          render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n          _getElementsByName(name) {\n            let skipId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const fields = [];\n            if (this._fieldObjects) {\n              const fieldObj = this._fieldObjects[name];\n              if (fieldObj) {\n                for (const {\n                  page,\n                  id,\n                  exportValues\n                } of fieldObj) {\n                  if (page === -1) {\n                    continue;\n                  }\n                  if (id === skipId) {\n                    continue;\n                  }\n                  const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                  const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                  if (domElement && !GetElementsByNameSet.has(domElement)) {\n                    (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                    continue;\n                  }\n                  fields.push({\n                    id,\n                    exportValue,\n                    domElement\n                  });\n                }\n              }\n              return fields;\n            }\n            for (const domElement of document.getElementsByName(name)) {\n              const {\n                exportValue\n              } = domElement;\n              const id = domElement.getAttribute(\"data-element-id\");\n              if (id === skipId) {\n                continue;\n              }\n              if (!GetElementsByNameSet.has(domElement)) {\n                continue;\n              }\n              fields.push({\n                id,\n                exportValue,\n                domElement\n              });\n            }\n            return fields;\n          }\n          show() {\n            if (this.container) {\n              this.container.hidden = false;\n            }\n            this.popup?.maybeShow();\n          }\n          hide() {\n            if (this.container) {\n              this.container.hidden = true;\n            }\n            this.popup?.forceHide();\n          }\n          getElementsToTriggerPopup() {\n            return this.container;\n          }\n          addHighlightArea() {\n            const triggers = this.getElementsToTriggerPopup();\n            if (Array.isArray(triggers)) {\n              for (const element of triggers) {\n                element.classList.add(\"highlightArea\");\n              }\n            } else {\n              triggers.classList.add(\"highlightArea\");\n            }\n          }\n          _editOnDoubleClick() {\n            const {\n              annotationEditorType: mode,\n              data: {\n                id: editId\n              }\n            } = this;\n            this.container.addEventListener(\"dblclick\", () => {\n              this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n                source: this,\n                mode,\n                editId\n              });\n            });\n          }\n        }\n        class LinkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: !!options?.ignoreBorder,\n              createQuadrilaterals: true\n            });\n            this.isTooltipOnly = parameters.data.isTooltipOnly;\n          }\n          render() {\n            const {\n              data,\n              linkService\n            } = this;\n            const link = document.createElement(\"a\");\n            link.setAttribute(\"data-element-id\", data.id);\n            let isBound = false;\n            if (data.url) {\n              linkService.addLinkAttributes(link, data.url, data.newWindow);\n              isBound = true;\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n              isBound = true;\n            } else if (data.attachment) {\n              this._bindAttachment(link, data.attachment);\n              isBound = true;\n            } else if (data.setOCGState) {\n              this.#bindSetOCGState(link, data.setOCGState);\n              isBound = true;\n            } else if (data.dest) {\n              this._bindLink(link, data.dest);\n              isBound = true;\n            } else {\n              if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                this._bindJSAction(link, data);\n                isBound = true;\n              }\n              if (data.resetForm) {\n                this._bindResetFormAction(link, data.resetForm);\n                isBound = true;\n              } else if (this.isTooltipOnly && !isBound) {\n                this._bindLink(link, \"\");\n                isBound = true;\n              }\n            }\n            this.container.classList.add(\"linkAnnotation\");\n            if (isBound) {\n              this.container.append(link);\n            }\n            return this.container;\n          }\n          #setInternalLink() {\n            this.container.setAttribute(\"data-internal-link\", \"\");\n          }\n          _bindLink(link, destination) {\n            link.href = this.linkService.getDestinationHash(destination);\n            link.onclick = () => {\n              if (destination) {\n                this.linkService.goToDestination(destination);\n              }\n              return false;\n            };\n            if (destination || destination === \"\") {\n              this.#setInternalLink();\n            }\n          }\n          _bindNamedAction(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n              this.linkService.executeNamedAction(action);\n              return false;\n            };\n            this.#setInternalLink();\n          }\n          _bindAttachment(link, attachment) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n              this.downloadManager?.openOrDownloadData(this.container, attachment.content, attachment.filename);\n              return false;\n            };\n            this.#setInternalLink();\n          }\n          #bindSetOCGState(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n              this.linkService.executeSetOCGState(action);\n              return false;\n            };\n            this.#setInternalLink();\n          }\n          _bindJSAction(link, data) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n            for (const name of Object.keys(data.actions)) {\n              const jsName = map.get(name);\n              if (!jsName) {\n                continue;\n              }\n              link[jsName] = () => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: data.id,\n                    name\n                  }\n                });\n                return false;\n              };\n            }\n            if (!link.onclick) {\n              link.onclick = () => false;\n            }\n            this.#setInternalLink();\n          }\n          _bindResetFormAction(link, resetForm) {\n            const otherClickAction = link.onclick;\n            if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n            }\n            this.#setInternalLink();\n            if (!this._fieldObjects) {\n              (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n              if (!otherClickAction) {\n                link.onclick = () => false;\n              }\n              return;\n            }\n            link.onclick = () => {\n              otherClickAction?.();\n              const {\n                fields: resetFormFields,\n                refs: resetFormRefs,\n                include\n              } = resetForm;\n              const allFields = [];\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                const fieldIds = new Set(resetFormRefs);\n                for (const fieldName of resetFormFields) {\n                  const fields = this._fieldObjects[fieldName] || [];\n                  for (const {\n                    id\n                  } of fields) {\n                    fieldIds.add(id);\n                  }\n                }\n                for (const fields of Object.values(this._fieldObjects)) {\n                  for (const field of fields) {\n                    if (fieldIds.has(field.id) === include) {\n                      allFields.push(field);\n                    }\n                  }\n                }\n              } else {\n                for (const fields of Object.values(this._fieldObjects)) {\n                  allFields.push(...fields);\n                }\n              }\n              const storage = this.annotationStorage;\n              const allIds = [];\n              for (const field of allFields) {\n                const {\n                  id\n                } = field;\n                allIds.push(id);\n                switch (field.type) {\n                  case \"text\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n                  case \"checkbox\":\n                  case \"radiobutton\":\n                    {\n                      const value = field.defaultValue === field.exportValues;\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n                  case \"combobox\":\n                  case \"listbox\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n                  default:\n                    continue;\n                }\n                const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                if (!domElement) {\n                  continue;\n                } else if (!GetElementsByNameSet.has(domElement)) {\n                  (0, _util.warn)(`_bindResetFormAction - element not allowed: ${id}`);\n                  continue;\n                }\n                domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n              if (this.enableScripting) {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: \"app\",\n                    ids: allIds,\n                    name: \"ResetForm\"\n                  }\n                });\n              }\n              return false;\n            };\n          }\n        }\n        class TextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"textAnnotation\");\n            const image = document.createElement(\"img\");\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.append(image);\n            return this.container;\n          }\n        }\n        class WidgetAnnotationElement extends AnnotationElement {\n          render() {\n            if (this.data.alternativeText) {\n              this.container.title = this.data.alternativeText;\n            }\n            return this.container;\n          }\n          showElementAndHideCanvas(element) {\n            if (this.data.hasOwnCanvas) {\n              if (element.previousSibling?.nodeName === \"CANVAS\") {\n                element.previousSibling.hidden = true;\n              }\n              element.hidden = false;\n            }\n          }\n          _getKeyModifier(event) {\n            const {\n              isWin,\n              isMac\n            } = _util.FeatureTest.platform;\n            return isWin && event.ctrlKey || isMac && event.metaKey;\n          }\n          _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n            if (baseName.includes(\"mouse\")) {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event),\n                    shift: event.shiftKey,\n                    modifier: this._getKeyModifier(event)\n                  }\n                });\n              });\n            } else {\n              element.addEventListener(baseName, event => {\n                if (baseName === \"blur\") {\n                  if (!elementData.focused || !event.relatedTarget) {\n                    return;\n                  }\n                  elementData.focused = false;\n                } else if (baseName === \"focus\") {\n                  if (elementData.focused) {\n                    return;\n                  }\n                  elementData.focused = true;\n                }\n                if (!valueGetter) {\n                  return;\n                }\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event)\n                  }\n                });\n              });\n            }\n          }\n          _setEventListeners(element, elementData, names, getter) {\n            for (const [baseName, eventName] of names) {\n              if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n                if (eventName === \"Focus\" || eventName === \"Blur\") {\n                  elementData ||= {\n                    focused: false\n                  };\n                }\n                this._setEventListener(element, elementData, baseName, eventName, getter);\n                if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n                  this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n                } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n                  this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n                }\n              }\n            }\n          }\n          _setBackgroundColor(element) {\n            const color = this.data.backgroundColor || null;\n            element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n          }\n          _setTextStyle(element) {\n            const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            const {\n              fontColor\n            } = this.data.defaultAppearanceData;\n            const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n            const style = element.style;\n            let computedFontSize;\n            const BORDER_SIZE = 2;\n            const roundToOneDecimal = x => Math.round(10 * x) / 10;\n            if (this.data.multiLine) {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              const numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n              const lineHeight = height / numberOfLines;\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / _util.LINE_FACTOR));\n            } else {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(height / _util.LINE_FACTOR));\n            }\n            style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n            style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n            if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n          }\n          _setRequired(element, isRequired) {\n            if (isRequired) {\n              element.setAttribute(\"required\", true);\n            } else {\n              element.removeAttribute(\"required\");\n            }\n            element.setAttribute(\"aria-required\", isRequired);\n          }\n        }\n        class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n            super(parameters, {\n              isRenderable\n            });\n          }\n          setPropertyOnSiblings(base, key, value, keyInStorage) {\n            const storage = this.annotationStorage;\n            for (const element of this._getElementsByName(base.name, base.id)) {\n              if (element.domElement) {\n                element.domElement[key] = value;\n              }\n              storage.setValue(element.id, {\n                [keyInStorage]: value\n              });\n            }\n          }\n          render() {\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            this.container.classList.add(\"textWidgetAnnotation\");\n            let element = null;\n            if (this.renderForms) {\n              const storedData = storage.getValue(id, {\n                value: this.data.fieldValue\n              });\n              let textContent = storedData.value || \"\";\n              const maxLen = storage.getValue(id, {\n                charLimit: this.data.maxLen\n              }).charLimit;\n              if (maxLen && textContent.length > maxLen) {\n                textContent = textContent.slice(0, maxLen);\n              }\n              let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n              if (fieldFormattedValues && this.data.comb) {\n                fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n              }\n              const elementData = {\n                userValue: textContent,\n                formattedValue: fieldFormattedValues,\n                lastCommittedValue: null,\n                commitKey: 1,\n                focused: false\n              };\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = fieldFormattedValues ?? textContent;\n                if (this.data.doNotScroll) {\n                  element.style.overflowY = \"hidden\";\n                }\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n                if (this.data.doNotScroll) {\n                  element.style.overflowX = \"hidden\";\n                }\n              }\n              if (this.data.hasOwnCanvas) {\n                element.hidden = true;\n              }\n              GetElementsByNameSet.add(element);\n              element.setAttribute(\"data-element-id\", id);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n              this._setRequired(element, this.data.required);\n              if (maxLen) {\n                element.maxLength = maxLen;\n              }\n              element.addEventListener(\"input\", event => {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n                this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n                elementData.formattedValue = null;\n              });\n              element.addEventListener(\"resetform\", event => {\n                const defaultValue = this.data.defaultFieldValue ?? \"\";\n                element.value = elementData.userValue = defaultValue;\n                elementData.formattedValue = null;\n              });\n              let blurListener = event => {\n                const {\n                  formattedValue\n                } = elementData;\n                if (formattedValue !== null && formattedValue !== undefined) {\n                  event.target.value = formattedValue;\n                }\n                event.target.scrollLeft = 0;\n              };\n              if (this.enableScripting && this.hasJSActions) {\n                element.addEventListener(\"focus\", event => {\n                  if (elementData.focused) {\n                    return;\n                  }\n                  const {\n                    target\n                  } = event;\n                  if (elementData.userValue) {\n                    target.value = elementData.userValue;\n                  }\n                  elementData.lastCommittedValue = target.value;\n                  elementData.commitKey = 1;\n                  elementData.focused = true;\n                });\n                element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  this.showElementAndHideCanvas(jsEvent.target);\n                  const actions = {\n                    value(event) {\n                      elementData.userValue = event.detail.value ?? \"\";\n                      storage.setValue(id, {\n                        value: elementData.userValue.toString()\n                      });\n                      event.target.value = elementData.userValue;\n                    },\n                    formattedValue(event) {\n                      const {\n                        formattedValue\n                      } = event.detail;\n                      elementData.formattedValue = formattedValue;\n                      if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                        event.target.value = formattedValue;\n                      }\n                      storage.setValue(id, {\n                        formattedValue\n                      });\n                    },\n                    selRange(event) {\n                      event.target.setSelectionRange(...event.detail.selRange);\n                    },\n                    charLimit: event => {\n                      const {\n                        charLimit\n                      } = event.detail;\n                      const {\n                        target\n                      } = event;\n                      if (charLimit === 0) {\n                        target.removeAttribute(\"maxLength\");\n                        return;\n                      }\n                      target.setAttribute(\"maxLength\", charLimit);\n                      let value = elementData.userValue;\n                      if (!value || value.length <= charLimit) {\n                        return;\n                      }\n                      value = value.slice(0, charLimit);\n                      target.value = elementData.userValue = value;\n                      storage.setValue(id, {\n                        value\n                      });\n                      this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                          id,\n                          name: \"Keystroke\",\n                          value,\n                          willCommit: true,\n                          commitKey: 1,\n                          selStart: target.selectionStart,\n                          selEnd: target.selectionEnd\n                        }\n                      });\n                    }\n                  };\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                element.addEventListener(\"keydown\", event => {\n                  elementData.commitKey = 1;\n                  let commitKey = -1;\n                  if (event.key === \"Escape\") {\n                    commitKey = 0;\n                  } else if (event.key === \"Enter\" && !this.data.multiLine) {\n                    commitKey = 2;\n                  } else if (event.key === \"Tab\") {\n                    elementData.commitKey = 3;\n                  }\n                  if (commitKey === -1) {\n                    return;\n                  }\n                  const {\n                    value\n                  } = event.target;\n                  if (elementData.lastCommittedValue === value) {\n                    return;\n                  }\n                  elementData.lastCommittedValue = value;\n                  elementData.userValue = value;\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value,\n                      willCommit: true,\n                      commitKey,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                });\n                const _blurListener = blurListener;\n                blurListener = null;\n                element.addEventListener(\"blur\", event => {\n                  if (!elementData.focused || !event.relatedTarget) {\n                    return;\n                  }\n                  elementData.focused = false;\n                  const {\n                    value\n                  } = event.target;\n                  elementData.userValue = value;\n                  if (elementData.lastCommittedValue !== value) {\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        willCommit: true,\n                        commitKey: elementData.commitKey,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  }\n                  _blurListener(event);\n                });\n                if (this.data.actions?.Keystroke) {\n                  element.addEventListener(\"beforeinput\", event => {\n                    elementData.lastCommittedValue = null;\n                    const {\n                      data,\n                      target\n                    } = event;\n                    const {\n                      value,\n                      selectionStart,\n                      selectionEnd\n                    } = target;\n                    let selStart = selectionStart,\n                      selEnd = selectionEnd;\n                    switch (event.inputType) {\n                      case \"deleteWordBackward\":\n                        {\n                          const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                          if (match) {\n                            selStart -= match[0].length;\n                          }\n                          break;\n                        }\n                      case \"deleteWordForward\":\n                        {\n                          const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                          if (match) {\n                            selEnd += match[0].length;\n                          }\n                          break;\n                        }\n                      case \"deleteContentBackward\":\n                        if (selectionStart === selectionEnd) {\n                          selStart -= 1;\n                        }\n                        break;\n                      case \"deleteContentForward\":\n                        if (selectionStart === selectionEnd) {\n                          selEnd += 1;\n                        }\n                        break;\n                    }\n                    event.preventDefault();\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        change: data || \"\",\n                        willCommit: false,\n                        selStart,\n                        selEnd\n                      }\n                    });\n                  });\n                }\n                this._setEventListeners(element, elementData, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n              }\n              if (blurListener) {\n                element.addEventListener(\"blur\", blurListener);\n              }\n              if (this.data.comb) {\n                const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                const combWidth = fieldWidth / maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n            }\n            this._setTextStyle(element);\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }\n        class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: !!parameters.data.hasOwnCanvas\n            });\n          }\n        }\n        class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n          render() {\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n            }).value;\n            if (typeof value === \"string\") {\n              value = value !== \"Off\";\n              storage.setValue(id, {\n                value\n              });\n            }\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"checkbox\";\n            element.name = data.fieldName;\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n            element.setAttribute(\"exportValue\", data.exportValue);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n              for (const checkbox of this._getElementsByName(name, id)) {\n                const curChecked = checked && checkbox.exportValue === data.exportValue;\n                if (checkbox.domElement) {\n                  checkbox.domElement.checked = curChecked;\n                }\n                storage.setValue(checkbox.id, {\n                  value: curChecked\n                });\n              }\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue || \"Off\";\n              event.target.checked = defaultValue === data.exportValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    event.target.checked = event.detail.value !== \"Off\";\n                    storage.setValue(id, {\n                      value: event.target.checked\n                    });\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }\n        class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n          render() {\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n            }).value;\n            if (typeof value === \"string\") {\n              value = value !== data.buttonValue;\n              storage.setValue(id, {\n                value\n              });\n            }\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"radio\";\n            element.name = data.fieldName;\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n              for (const radio of this._getElementsByName(name, id)) {\n                storage.setValue(radio.id, {\n                  value: false\n                });\n              }\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue;\n              event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n              const pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value: event => {\n                    const checked = pdfButtonValue === event.detail.value;\n                    for (const radio of this._getElementsByName(event.target.name)) {\n                      const curChecked = checked && radio.id === id;\n                      if (radio.domElement) {\n                        radio.domElement.checked = curChecked;\n                      }\n                      storage.setValue(radio.id, {\n                        value: curChecked\n                      });\n                    }\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }\n        class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              ignoreBorder: parameters.data.hasAppearance\n            });\n          }\n          render() {\n            const container = super.render();\n            container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n            if (this.data.alternativeText) {\n              container.title = this.data.alternativeText;\n            }\n            const linkElement = container.lastChild;\n            if (this.enableScripting && this.hasJSActions && linkElement) {\n              this._setDefaultPropertiesFromJS(linkElement);\n              linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                this._dispatchEventFromSandbox({}, jsEvent);\n              });\n            }\n            return container;\n          }\n        }\n        class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n          render() {\n            this.container.classList.add(\"choiceWidgetAnnotation\");\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            const storedData = storage.getValue(id, {\n              value: this.data.fieldValue\n            });\n            const selectElement = document.createElement(\"select\");\n            GetElementsByNameSet.add(selectElement);\n            selectElement.setAttribute(\"data-element-id\", id);\n            selectElement.disabled = this.data.readOnly;\n            this._setRequired(selectElement, this.data.required);\n            selectElement.name = this.data.fieldName;\n            selectElement.tabIndex = DEFAULT_TAB_INDEX;\n            let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n            selectElement.addEventListener(\"resetform\", event => {\n              const defaultValue = this.data.defaultFieldValue;\n              for (const option of selectElement.options) {\n                option.selected = option.value === defaultValue;\n              }\n            });\n            for (const option of this.data.options) {\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n              if (storedData.value.includes(option.exportValue)) {\n                optionElement.setAttribute(\"selected\", true);\n                addAnEmptyEntry = false;\n              }\n              selectElement.append(optionElement);\n            }\n            let removeEmptyEntry = null;\n            if (addAnEmptyEntry) {\n              const noneOptionElement = document.createElement(\"option\");\n              noneOptionElement.value = \" \";\n              noneOptionElement.setAttribute(\"hidden\", true);\n              noneOptionElement.setAttribute(\"selected\", true);\n              selectElement.prepend(noneOptionElement);\n              removeEmptyEntry = () => {\n                noneOptionElement.remove();\n                selectElement.removeEventListener(\"input\", removeEmptyEntry);\n                removeEmptyEntry = null;\n              };\n              selectElement.addEventListener(\"input\", removeEmptyEntry);\n            }\n            const getValue = isExport => {\n              const name = isExport ? \"value\" : \"textContent\";\n              const {\n                options,\n                multiple\n              } = selectElement;\n              if (!multiple) {\n                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n              }\n              return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n            };\n            let selectedValues = getValue(false);\n            const getItems = event => {\n              const options = event.target.options;\n              return Array.prototype.map.call(options, option => {\n                return {\n                  displayValue: option.textContent,\n                  exportValue: option.value\n                };\n              });\n            };\n            if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    removeEmptyEntry?.();\n                    const value = event.detail.value;\n                    const values = new Set(Array.isArray(value) ? value : [value]);\n                    for (const option of selectElement.options) {\n                      option.selected = values.has(option.value);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  multipleSelection(event) {\n                    selectElement.multiple = true;\n                  },\n                  remove(event) {\n                    const options = selectElement.options;\n                    const index = event.detail.remove;\n                    options[index].selected = false;\n                    selectElement.remove(index);\n                    if (options.length > 0) {\n                      const i = Array.prototype.findIndex.call(options, option => option.selected);\n                      if (i === -1) {\n                        options[0].selected = true;\n                      }\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  clear(event) {\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n                    storage.setValue(id, {\n                      value: null,\n                      items: []\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  insert(event) {\n                    const {\n                      index,\n                      displayValue,\n                      exportValue\n                    } = event.detail.insert;\n                    const selectChild = selectElement.children[index];\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n                    if (selectChild) {\n                      selectChild.before(optionElement);\n                    } else {\n                      selectElement.append(optionElement);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  items(event) {\n                    const {\n                      items\n                    } = event.detail;\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n                    for (const item of items) {\n                      const {\n                        displayValue,\n                        exportValue\n                      } = item;\n                      const optionElement = document.createElement(\"option\");\n                      optionElement.textContent = displayValue;\n                      optionElement.value = exportValue;\n                      selectElement.append(optionElement);\n                    }\n                    if (selectElement.options.length > 0) {\n                      selectElement.options[0].selected = true;\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  indices(event) {\n                    const indices = new Set(event.detail.indices);\n                    for (const option of event.target.options) {\n                      option.selected = indices.has(option.index);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  editable(event) {\n                    event.target.disabled = !event.detail.editable;\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", event => {\n                const exportValue = getValue(true);\n                storage.setValue(id, {\n                  value: exportValue\n                });\n                event.preventDefault();\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: selectedValues,\n                    changeEx: exportValue,\n                    willCommit: false,\n                    commitKey: 1,\n                    keyDown: false\n                  }\n                });\n              });\n              this._setEventListeners(selectElement, null, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"], [\"input\", \"Validate\"]], event => event.target.value);\n            } else {\n              selectElement.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: getValue(true)\n                });\n              });\n            }\n            if (this.data.combo) {\n              this._setTextStyle(selectElement);\n            } else {}\n            this._setBackgroundColor(selectElement);\n            this._setDefaultPropertiesFromJS(selectElement);\n            this.container.append(selectElement);\n            return this.container;\n          }\n        }\n        class PopupAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const {\n              data,\n              elements\n            } = parameters;\n            super(parameters, {\n              isRenderable: AnnotationElement._hasPopupData(data)\n            });\n            this.elements = elements;\n          }\n          render() {\n            this.container.classList.add(\"popupAnnotation\");\n            const popup = new PopupElement({\n              container: this.container,\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText,\n              rect: this.data.rect,\n              parentRect: this.data.parentRect || null,\n              parent: this.parent,\n              elements: this.elements,\n              open: this.data.open\n            });\n            const elementIds = [];\n            for (const element of this.elements) {\n              element.popup = popup;\n              elementIds.push(element.data.id);\n              element.addHighlightArea();\n            }\n            this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${_util.AnnotationPrefix}${id}`).join(\",\"));\n            return this.container;\n          }\n        }\n        class PopupElement {\n          #dateTimePromise = null;\n          #boundKeyDown = this.#keyDown.bind(this);\n          #boundHide = this.#hide.bind(this);\n          #boundShow = this.#show.bind(this);\n          #boundToggle = this.#toggle.bind(this);\n          #color = null;\n          #container = null;\n          #contentsObj = null;\n          #elements = null;\n          #parent = null;\n          #parentRect = null;\n          #pinned = false;\n          #popup = null;\n          #rect = null;\n          #richText = null;\n          #titleObj = null;\n          #wasVisible = false;\n          constructor(_ref45) {\n            let {\n              container,\n              color,\n              elements,\n              titleObj,\n              modificationDate,\n              contentsObj,\n              richText,\n              parent,\n              rect,\n              parentRect,\n              open\n            } = _ref45;\n            this.#container = container;\n            this.#titleObj = titleObj;\n            this.#contentsObj = contentsObj;\n            this.#richText = richText;\n            this.#parent = parent;\n            this.#color = color;\n            this.#rect = rect;\n            this.#parentRect = parentRect;\n            this.#elements = elements;\n            const dateObject = _display_utils.PDFDateString.toDateObject(modificationDate);\n            if (dateObject) {\n              this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n            }\n            this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n            for (const element of this.trigger) {\n              element.addEventListener(\"click\", this.#boundToggle);\n              element.addEventListener(\"mouseenter\", this.#boundShow);\n              element.addEventListener(\"mouseleave\", this.#boundHide);\n              element.classList.add(\"popupTriggerArea\");\n            }\n            for (const element of elements) {\n              element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n            }\n            this.#container.hidden = true;\n            if (open) {\n              this.#toggle();\n            }\n          }\n          render() {\n            if (this.#popup) {\n              return;\n            }\n            const {\n              page: {\n                view\n              },\n              viewport: {\n                rawDims: {\n                  pageWidth,\n                  pageHeight,\n                  pageX,\n                  pageY\n                }\n              }\n            } = this.#parent;\n            const popup = this.#popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            if (this.#color) {\n              const baseColor = popup.style.outlineColor = _util.Util.makeHexColor(...this.#color);\n              if (CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n                popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n              } else {\n                const BACKGROUND_ENLIGHT = 0.7;\n                popup.style.backgroundColor = _util.Util.makeHexColor(...this.#color.map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n              }\n            }\n            const header = document.createElement(\"span\");\n            header.className = \"header\";\n            const title = document.createElement(\"h1\");\n            header.append(title);\n            ({\n              dir: title.dir,\n              str: title.textContent\n            } = this.#titleObj);\n            popup.append(header);\n            if (this.#dateTimePromise) {\n              const modificationDate = document.createElement(\"span\");\n              modificationDate.classList.add(\"popupDate\");\n              this.#dateTimePromise.then(localized => {\n                modificationDate.textContent = localized;\n              });\n              header.append(modificationDate);\n            }\n            const contentsObj = this.#contentsObj;\n            const richText = this.#richText;\n            if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n              _xfa_layer.XfaLayer.render({\n                xfaHtml: richText.html,\n                intent: \"richText\",\n                div: popup\n              });\n              popup.lastChild.classList.add(\"richText\", \"popupContent\");\n            } else {\n              const contents = this._formatContents(contentsObj);\n              popup.append(contents);\n            }\n            let useParentRect = !!this.#parentRect;\n            let rect = useParentRect ? this.#parentRect : this.#rect;\n            for (const element of this.#elements) {\n              if (!rect || _util.Util.intersect(element.data.rect, rect) !== null) {\n                rect = element.data.rect;\n                useParentRect = true;\n                break;\n              }\n            }\n            const normalizedRect = _util.Util.normalizeRect([rect[0], view[3] - rect[1] + view[1], rect[2], view[3] - rect[3] + view[1]]);\n            const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n            const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n            const popupLeft = normalizedRect[0] + parentWidth;\n            const popupTop = normalizedRect[1];\n            const {\n              style\n            } = this.#container;\n            style.left = `${100 * (popupLeft - pageX) / pageWidth}%`;\n            style.top = `${100 * (popupTop - pageY) / pageHeight}%`;\n            this.#container.append(popup);\n          }\n          _formatContents(_ref46) {\n            let {\n              str,\n              dir\n            } = _ref46;\n            const p = document.createElement(\"p\");\n            p.classList.add(\"popupContent\");\n            p.dir = dir;\n            const lines = str.split(/(?:\\r\\n?|\\n)/);\n            for (let i = 0, ii = lines.length; i < ii; ++i) {\n              const line = lines[i];\n              p.append(document.createTextNode(line));\n              if (i < ii - 1) {\n                p.append(document.createElement(\"br\"));\n              }\n            }\n            return p;\n          }\n          #keyDown(event) {\n            if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n              return;\n            }\n            if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) {\n              this.#toggle();\n            }\n          }\n          #toggle() {\n            this.#pinned = !this.#pinned;\n            if (this.#pinned) {\n              this.#show();\n              this.#container.addEventListener(\"click\", this.#boundToggle);\n              this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n            } else {\n              this.#hide();\n              this.#container.removeEventListener(\"click\", this.#boundToggle);\n              this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n            }\n          }\n          #show() {\n            if (!this.#popup) {\n              this.render();\n            }\n            if (!this.isVisible) {\n              this.#container.hidden = false;\n              this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n            } else if (this.#pinned) {\n              this.#container.classList.add(\"focused\");\n            }\n          }\n          #hide() {\n            this.#container.classList.remove(\"focused\");\n            if (this.#pinned || !this.isVisible) {\n              return;\n            }\n            this.#container.hidden = true;\n            this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n          }\n          forceHide() {\n            this.#wasVisible = this.isVisible;\n            if (!this.#wasVisible) {\n              return;\n            }\n            this.#container.hidden = true;\n          }\n          maybeShow() {\n            if (!this.#wasVisible) {\n              return;\n            }\n            this.#wasVisible = false;\n            this.#container.hidden = false;\n          }\n          get isVisible() {\n            return this.#container.hidden === false;\n          }\n        }\n        class FreeTextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.textContent = parameters.data.textContent;\n            this.textPosition = parameters.data.textPosition;\n            this.annotationEditorType = _util.AnnotationEditorType.FREETEXT;\n          }\n          render() {\n            this.container.classList.add(\"freeTextAnnotation\");\n            if (this.textContent) {\n              const content = document.createElement(\"div\");\n              content.classList.add(\"annotationTextContent\");\n              content.setAttribute(\"role\", \"comment\");\n              for (const line of this.textContent) {\n                const lineSpan = document.createElement(\"span\");\n                lineSpan.textContent = line;\n                content.append(lineSpan);\n              }\n              this.container.append(content);\n            }\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this._editOnDoubleClick();\n            return this.container;\n          }\n        }\n        exports.FreeTextAnnotationElement = FreeTextAnnotationElement;\n        class LineAnnotationElement extends AnnotationElement {\n          #line = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"lineAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            line.setAttribute(\"fill\", \"transparent\");\n            svg.append(line);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#line;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class SquareAnnotationElement extends AnnotationElement {\n          #square = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"squareAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const borderWidth = data.borderStyle.width;\n            const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"transparent\");\n            svg.append(square);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#square;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class CircleAnnotationElement extends AnnotationElement {\n          #circle = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"circleAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const borderWidth = data.borderStyle.width;\n            const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"transparent\");\n            svg.append(circle);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#circle;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class PolylineAnnotationElement extends AnnotationElement {\n          #polyline = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"polylineAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n          render() {\n            this.container.classList.add(this.containerClassName);\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            let points = [];\n            for (const coordinate of data.vertices) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(x + \",\" + y);\n            }\n            points = points.join(\" \");\n            const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            svg.append(polyline);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#polyline;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class PolygonAnnotationElement extends PolylineAnnotationElement {\n          constructor(parameters) {\n            super(parameters);\n            this.containerClassName = \"polygonAnnotation\";\n            this.svgElementName = \"svg:polygon\";\n          }\n        }\n        class CaretAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"caretAnnotation\");\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n        }\n        class InkAnnotationElement extends AnnotationElement {\n          #polylines = [];\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"inkAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n            this.annotationEditorType = _util.AnnotationEditorType.INK;\n          }\n          render() {\n            this.container.classList.add(this.containerClassName);\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            for (const inkList of data.inkLists) {\n              let points = [];\n              for (const coordinate of inkList) {\n                const x = coordinate.x - data.rect[0];\n                const y = data.rect[3] - coordinate.y;\n                points.push(`${x},${y}`);\n              }\n              points = points.join(\" \");\n              const polyline = this.svgFactory.createElement(this.svgElementName);\n              this.#polylines.push(polyline);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"transparent\");\n              if (!data.popupRef && this.hasPopupData) {\n                this._createPopup();\n              }\n              svg.append(polyline);\n            }\n            this.container.append(svg);\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#polylines;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        exports.InkAnnotationElement = InkAnnotationElement;\n        class HighlightAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"highlightAnnotation\");\n            return this.container;\n          }\n        }\n        class UnderlineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"underlineAnnotation\");\n            return this.container;\n          }\n        }\n        class SquigglyAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"squigglyAnnotation\");\n            return this.container;\n          }\n        }\n        class StrikeOutAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"strikeoutAnnotation\");\n            return this.container;\n          }\n        }\n        class StampAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"stampAnnotation\");\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n        }\n        exports.StampAnnotationElement = StampAnnotationElement;\n        class FileAttachmentAnnotationElement extends AnnotationElement {\n          #trigger = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n            const {\n              filename,\n              content\n            } = this.data.file;\n            this.filename = (0, _display_utils.getFilenameFromUrl)(filename, true);\n            this.content = content;\n            this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              filename,\n              content\n            });\n          }\n          render() {\n            this.container.classList.add(\"fileAttachmentAnnotation\");\n            const {\n              container,\n              data\n            } = this;\n            let trigger;\n            if (data.hasAppearance || data.fillAlpha === 0) {\n              trigger = document.createElement(\"div\");\n            } else {\n              trigger = document.createElement(\"img\");\n              trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n              if (data.fillAlpha && data.fillAlpha < 1) {\n                trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n              }\n            }\n            trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n            this.#trigger = trigger;\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            container.addEventListener(\"keydown\", evt => {\n              if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n                this.#download();\n              }\n            });\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            } else {\n              trigger.classList.add(\"popupTriggerArea\");\n            }\n            container.append(trigger);\n            return container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#trigger;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n          #download() {\n            this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n          }\n        }\n        class AnnotationLayer {\n          #accessibilityManager = null;\n          #annotationCanvasMap = null;\n          #editableAnnotations = new Map();\n          constructor(_ref47) {\n            let {\n              div,\n              accessibilityManager,\n              annotationCanvasMap,\n              l10n,\n              page,\n              viewport\n            } = _ref47;\n            this.div = div;\n            this.#accessibilityManager = accessibilityManager;\n            this.#annotationCanvasMap = annotationCanvasMap;\n            this.l10n = l10n;\n            this.page = page;\n            this.viewport = viewport;\n            this.zIndex = 0;\n            this.l10n ||= _displayL10n_utils.NullL10n;\n          }\n          #appendElement(element, id) {\n            const contentElement = element.firstChild || element;\n            contentElement.id = `${_util.AnnotationPrefix}${id}`;\n            this.div.append(element);\n            this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n          }\n          async render(params) {\n            const {\n              annotations\n            } = params;\n            const layer = this.div;\n            (0, _display_utils.setLayerDimensions)(layer, this.viewport);\n            const popupToElements = new Map();\n            const elementParams = {\n              data: null,\n              layer,\n              linkService: params.linkService,\n              downloadManager: params.downloadManager,\n              imageResourcesPath: params.imageResourcesPath || \"\",\n              renderForms: params.renderForms !== false,\n              svgFactory: new _display_utils.DOMSVGFactory(),\n              annotationStorage: params.annotationStorage || new _annotation_storage.AnnotationStorage(),\n              enableScripting: params.enableScripting === true,\n              hasJSActions: params.hasJSActions,\n              fieldObjects: params.fieldObjects,\n              parent: this,\n              elements: null\n            };\n            for (const data of annotations) {\n              if (data.noHTML) {\n                continue;\n              }\n              const isPopupAnnotation = data.annotationType === _util.AnnotationType.POPUP;\n              if (!isPopupAnnotation) {\n                const {\n                  width,\n                  height\n                } = getRectDims(data.rect);\n                if (width <= 0 || height <= 0) {\n                  continue;\n                }\n              } else {\n                const elements = popupToElements.get(data.id);\n                if (!elements) {\n                  continue;\n                }\n                elementParams.elements = elements;\n              }\n              elementParams.data = data;\n              const element = AnnotationElementFactory.create(elementParams);\n              if (!element.isRenderable) {\n                continue;\n              }\n              if (!isPopupAnnotation && data.popupRef) {\n                const elements = popupToElements.get(data.popupRef);\n                if (!elements) {\n                  popupToElements.set(data.popupRef, [element]);\n                } else {\n                  elements.push(element);\n                }\n              }\n              if (element.annotationEditorType > 0) {\n                this.#editableAnnotations.set(element.data.id, element);\n              }\n              const rendered = element.render();\n              if (data.hidden) {\n                rendered.style.visibility = \"hidden\";\n              }\n              this.#appendElement(rendered, data.id);\n            }\n            this.#setAnnotationCanvasMap();\n            await this.l10n.translate(layer);\n          }\n          update(_ref48) {\n            let {\n              viewport\n            } = _ref48;\n            const layer = this.div;\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(layer, {\n              rotation: viewport.rotation\n            });\n            this.#setAnnotationCanvasMap();\n            layer.hidden = false;\n          }\n          #setAnnotationCanvasMap() {\n            if (!this.#annotationCanvasMap) {\n              return;\n            }\n            const layer = this.div;\n            for (const [id, canvas] of this.#annotationCanvasMap) {\n              const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n              if (!element) {\n                continue;\n              }\n              const {\n                firstChild\n              } = element;\n              if (!firstChild) {\n                element.append(canvas);\n              } else if (firstChild.nodeName === \"CANVAS\") {\n                firstChild.replaceWith(canvas);\n              } else {\n                firstChild.before(canvas);\n              }\n            }\n            this.#annotationCanvasMap.clear();\n          }\n          getEditableAnnotations() {\n            return Array.from(this.#editableAnnotations.values());\n          }\n          getEditableAnnotation(id) {\n            return this.#editableAnnotations.get(id);\n          }\n        }\n        exports.AnnotationLayer = AnnotationLayer;\n\n        /***/\n      }, /* 30 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.ColorConverters = void 0;\n        function makeColorComp(n) {\n          return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n        }\n        function scaleAndClamp(x) {\n          return Math.max(0, Math.min(255, 255 * x));\n        }\n        class ColorConverters {\n          static CMYK_G(_ref49) {\n            let [c, y, m, k] = _ref49;\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n          }\n          static G_CMYK(_ref50) {\n            let [g] = _ref50;\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n          }\n          static G_RGB(_ref51) {\n            let [g] = _ref51;\n            return [\"RGB\", g, g, g];\n          }\n          static G_rgb(_ref52) {\n            let [g] = _ref52;\n            g = scaleAndClamp(g);\n            return [g, g, g];\n          }\n          static G_HTML(_ref53) {\n            let [g] = _ref53;\n            const G = makeColorComp(g);\n            return `#${G}${G}${G}`;\n          }\n          static RGB_G(_ref54) {\n            let [r, g, b] = _ref54;\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n          }\n          static RGB_rgb(color) {\n            return color.map(scaleAndClamp);\n          }\n          static RGB_HTML(color) {\n            return `#${color.map(makeColorComp).join(\"\")}`;\n          }\n          static T_HTML() {\n            return \"#00000000\";\n          }\n          static T_rgb() {\n            return [null];\n          }\n          static CMYK_RGB(_ref55) {\n            let [c, y, m, k] = _ref55;\n            return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n          }\n          static CMYK_rgb(_ref56) {\n            let [c, y, m, k] = _ref56;\n            return [scaleAndClamp(1 - Math.min(1, c + k)), scaleAndClamp(1 - Math.min(1, m + k)), scaleAndClamp(1 - Math.min(1, y + k))];\n          }\n          static CMYK_HTML(components) {\n            const rgb = this.CMYK_RGB(components).slice(1);\n            return this.RGB_HTML(rgb);\n          }\n          static RGB_CMYK(_ref57) {\n            let [r, g, b] = _ref57;\n            const c = 1 - r;\n            const m = 1 - g;\n            const y = 1 - b;\n            const k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n          }\n        }\n        exports.ColorConverters = ColorConverters;\n\n        /***/\n      }, /* 31 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NullL10n = void 0;\n        exports.getL10nFallback = getL10nFallback;\n        const DEFAULT_L10N_STRINGS = {\n          of_pages: \"of {{pagesCount}}\",\n          page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n          document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n          document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n          document_properties_date_string: \"{{date}}, {{time}}\",\n          document_properties_page_size_unit_inches: \"in\",\n          document_properties_page_size_unit_millimeters: \"mm\",\n          document_properties_page_size_orientation_portrait: \"portrait\",\n          document_properties_page_size_orientation_landscape: \"landscape\",\n          document_properties_page_size_name_a3: \"A3\",\n          document_properties_page_size_name_a4: \"A4\",\n          document_properties_page_size_name_letter: \"Letter\",\n          document_properties_page_size_name_legal: \"Legal\",\n          document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n          document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n          document_properties_linearized_yes: \"Yes\",\n          document_properties_linearized_no: \"No\",\n          additional_layers: \"Additional Layers\",\n          page_landmark: \"Page {{page}}\",\n          thumb_page_title: \"Page {{page}}\",\n          thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n          find_reached_top: \"Reached top of document, continued from bottom\",\n          find_reached_bottom: \"Reached end of document, continued from top\",\n          \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n          \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n          \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n          \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n          find_not_found: \"Phrase not found\",\n          page_scale_width: \"Page Width\",\n          page_scale_fit: \"Page Fit\",\n          page_scale_auto: \"Automatic Zoom\",\n          page_scale_actual: \"Actual Size\",\n          page_scale_percent: \"{{scale}}%\",\n          loading_error: \"An error occurred while loading the PDF.\",\n          invalid_file_error: \"Invalid or corrupted PDF file.\",\n          missing_file_error: \"Missing PDF file.\",\n          unexpected_response_error: \"Unexpected server response.\",\n          rendering_error: \"An error occurred while rendering the page.\",\n          annotation_date_string: \"{{date}}, {{time}}\",\n          printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\n          printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n          web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n          free_text2_default_content: \"Start typing…\",\n          editor_free_text2_aria_label: \"Text Editor\",\n          editor_ink2_aria_label: \"Draw Editor\",\n          editor_ink_canvas_aria_label: \"User-created image\",\n          editor_alt_text_button_label: \"Alt text\",\n          editor_alt_text_edit_button_label: \"Edit alt text\",\n          editor_alt_text_decorative_tooltip: \"Marked as decorative\"\n        };\n        {\n          DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n        }\n        function getL10nFallback(key, args) {\n          switch (key) {\n            case \"find_match_count\":\n              key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n              break;\n            case \"find_match_count_limit\":\n              key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n              break;\n          }\n          return DEFAULT_L10N_STRINGS[key] || \"\";\n        }\n        function formatL10nValue(text, args) {\n          if (!args) {\n            return text;\n          }\n          return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n            return name in args ? args[name] : \"{{\" + name + \"}}\";\n          });\n        }\n        const NullL10n = {\n          async getLanguage() {\n            return \"en-us\";\n          },\n          async getDirection() {\n            return \"ltr\";\n          },\n          async get(key) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getL10nFallback(key, args);\n            return formatL10nValue(fallback, args);\n          },\n          async translate(element) {}\n        };\n        exports.NullL10n = NullL10n;\n\n        /***/\n      }, /* 32 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaLayer = void 0;\n        var _xfa_text = __w_pdfjs_require__(25);\n        class XfaLayer {\n          static setupStorage(html, id, element, storage, intent) {\n            const storedData = storage.getValue(id, {\n              value: null\n            });\n            switch (element.name) {\n              case \"textarea\":\n                if (storedData.value !== null) {\n                  html.textContent = storedData.value;\n                }\n                if (intent === \"print\") {\n                  break;\n                }\n                html.addEventListener(\"input\", event => {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n                break;\n              case \"input\":\n                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                  if (storedData.value === element.attributes.xfaOn) {\n                    html.setAttribute(\"checked\", true);\n                  } else if (storedData.value === element.attributes.xfaOff) {\n                    html.removeAttribute(\"checked\");\n                  }\n                  if (intent === \"print\") {\n                    break;\n                  }\n                  html.addEventListener(\"change\", event => {\n                    storage.setValue(id, {\n                      value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                    });\n                  });\n                } else {\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n                  if (intent === \"print\") {\n                    break;\n                  }\n                  html.addEventListener(\"input\", event => {\n                    storage.setValue(id, {\n                      value: event.target.value\n                    });\n                  });\n                }\n                break;\n              case \"select\":\n                if (storedData.value !== null) {\n                  html.setAttribute(\"value\", storedData.value);\n                  for (const option of element.children) {\n                    if (option.attributes.value === storedData.value) {\n                      option.attributes.selected = true;\n                    } else if (option.attributes.hasOwnProperty(\"selected\")) {\n                      delete option.attributes.selected;\n                    }\n                  }\n                }\n                html.addEventListener(\"input\", event => {\n                  const options = event.target.options;\n                  const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                  storage.setValue(id, {\n                    value\n                  });\n                });\n                break;\n            }\n          }\n          static setAttributes(_ref58) {\n            let {\n              html,\n              element,\n              storage = null,\n              intent,\n              linkService\n            } = _ref58;\n            const {\n              attributes\n            } = element;\n            const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n            if (attributes.type === \"radio\") {\n              attributes.name = `${attributes.name}-${intent}`;\n            }\n            for (const [key, value] of Object.entries(attributes)) {\n              if (value === null || value === undefined) {\n                continue;\n              }\n              switch (key) {\n                case \"class\":\n                  if (value.length) {\n                    html.setAttribute(key, value.join(\" \"));\n                  }\n                  break;\n                case \"dataId\":\n                  break;\n                case \"id\":\n                  html.setAttribute(\"data-element-id\", value);\n                  break;\n                case \"style\":\n                  Object.assign(html.style, value);\n                  break;\n                case \"textContent\":\n                  html.textContent = value;\n                  break;\n                default:\n                  if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n                    html.setAttribute(key, value);\n                  }\n              }\n            }\n            if (isHTMLAnchorElement) {\n              linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n            }\n            if (storage && attributes.dataId) {\n              this.setupStorage(html, attributes.dataId, element, storage);\n            }\n          }\n          static render(parameters) {\n            const storage = parameters.annotationStorage;\n            const linkService = parameters.linkService;\n            const root = parameters.xfaHtml;\n            const intent = parameters.intent || \"display\";\n            const rootHtml = document.createElement(root.name);\n            if (root.attributes) {\n              this.setAttributes({\n                html: rootHtml,\n                element: root,\n                intent,\n                linkService\n              });\n            }\n            const stack = [[root, -1, rootHtml]];\n            const rootDiv = parameters.div;\n            rootDiv.append(rootHtml);\n            if (parameters.viewport) {\n              const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n              rootDiv.style.transform = transform;\n            }\n            if (intent !== \"richText\") {\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n            }\n            const textDivs = [];\n            while (stack.length > 0) {\n              const [parent, i, html] = stack.at(-1);\n              if (i + 1 === parent.children.length) {\n                stack.pop();\n                continue;\n              }\n              const child = parent.children[++stack.at(-1)[1]];\n              if (child === null) {\n                continue;\n              }\n              const {\n                name\n              } = child;\n              if (name === \"#text\") {\n                const node = document.createTextNode(child.value);\n                textDivs.push(node);\n                html.append(node);\n                continue;\n              }\n              const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n              html.append(childHtml);\n              if (child.attributes) {\n                this.setAttributes({\n                  html: childHtml,\n                  element: child,\n                  storage,\n                  intent,\n                  linkService\n                });\n              }\n              if (child.children && child.children.length > 0) {\n                stack.push([child, -1, childHtml]);\n              } else if (child.value) {\n                const node = document.createTextNode(child.value);\n                if (_xfa_text.XfaText.shouldBuildText(name)) {\n                  textDivs.push(node);\n                }\n                childHtml.append(node);\n              }\n            }\n            for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n              el.setAttribute(\"readOnly\", true);\n            }\n            return {\n              textDivs\n            };\n          }\n          static update(parameters) {\n            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            parameters.div.style.transform = transform;\n            parameters.div.hidden = false;\n          }\n        }\n        exports.XfaLayer = XfaLayer;\n\n        /***/\n      }, /* 33 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.InkEditor = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _tools = __w_pdfjs_require__(5);\n        class InkEditor extends _editor.AnnotationEditor {\n          #baseHeight = 0;\n          #baseWidth = 0;\n          #boundCanvasPointermove = this.canvasPointermove.bind(this);\n          #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n          #boundCanvasPointerup = this.canvasPointerup.bind(this);\n          #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n          #currentPath2D = new Path2D();\n          #disableEditing = false;\n          #hasSomethingToDraw = false;\n          #isCanvasInitialized = false;\n          #observer = null;\n          #realWidth = 0;\n          #realHeight = 0;\n          #requestFrameCallback = null;\n          static _defaultColor = null;\n          static _defaultOpacity = 1;\n          static _defaultThickness = 1;\n          static _type = \"ink\";\n          constructor(params) {\n            super({\n              ...params,\n              name: \"inkEditor\"\n            });\n            this.color = params.color || null;\n            this.thickness = params.thickness || null;\n            this.opacity = params.opacity || null;\n            this.paths = [];\n            this.bezierPath2D = [];\n            this.allRawPaths = [];\n            this.currentPath = [];\n            this.scaleFactor = 1;\n            this.translationX = this.translationY = 0;\n            this.x = 0;\n            this.y = 0;\n            this._willKeepAspectRatio = true;\n          }\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n, {\n              strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"]\n            });\n          }\n          static updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                InkEditor._defaultThickness = value;\n                break;\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                InkEditor._defaultColor = value;\n                break;\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                InkEditor._defaultOpacity = value / 100;\n                break;\n            }\n          }\n          updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                this.#updateThickness(value);\n                break;\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                this.#updateColor(value);\n                break;\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                this.#updateOpacity(value);\n                break;\n            }\n          }\n          static get defaultPropertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(InkEditor._defaultOpacity * 100)]];\n          }\n          get propertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity))]];\n          }\n          #updateThickness(thickness) {\n            const savedThickness = this.thickness;\n            this.addCommands({\n              cmd: () => {\n                this.thickness = thickness;\n                this.#fitToContent();\n              },\n              undo: () => {\n                this.thickness = savedThickness;\n                this.#fitToContent();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          #updateColor(color) {\n            const savedColor = this.color;\n            this.addCommands({\n              cmd: () => {\n                this.color = color;\n                this.#redraw();\n              },\n              undo: () => {\n                this.color = savedColor;\n                this.#redraw();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_COLOR,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          #updateOpacity(opacity) {\n            opacity /= 100;\n            const savedOpacity = this.opacity;\n            this.addCommands({\n              cmd: () => {\n                this.opacity = opacity;\n                this.#redraw();\n              },\n              undo: () => {\n                this.opacity = savedOpacity;\n                this.#redraw();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_OPACITY,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          rebuild() {\n            if (!this.parent) {\n              return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n              return;\n            }\n            if (!this.canvas) {\n              this.#createCanvas();\n              this.#createObserver();\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n              this.#setCanvasDims();\n            }\n            this.#fitToContent();\n          }\n          remove() {\n            if (this.canvas === null) {\n              return;\n            }\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.remove();\n            this.canvas = null;\n            this.#observer.disconnect();\n            this.#observer = null;\n            super.remove();\n          }\n          setParent(parent) {\n            if (!this.parent && parent) {\n              this._uiManager.removeShouldRescale(this);\n            } else if (this.parent && parent === null) {\n              this._uiManager.addShouldRescale(this);\n            }\n            super.setParent(parent);\n          }\n          onScaleChanging() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const width = this.width * parentWidth;\n            const height = this.height * parentHeight;\n            this.setDimensions(width, height);\n          }\n          enableEditMode() {\n            if (this.#disableEditing || this.canvas === null) {\n              return;\n            }\n            super.enableEditMode();\n            this._isDraggable = false;\n            this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n          }\n          disableEditMode() {\n            if (!this.isInEditMode() || this.canvas === null) {\n              return;\n            }\n            super.disableEditMode();\n            this._isDraggable = !this.isEmpty();\n            this.div.classList.remove(\"editing\");\n            this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n          }\n          onceAdded() {\n            this._isDraggable = !this.isEmpty();\n          }\n          isEmpty() {\n            return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n          }\n          #getInitialBBox() {\n            const {\n              parentRotation,\n              parentDimensions: [width, height]\n            } = this;\n            switch (parentRotation) {\n              case 90:\n                return [0, height, height, width];\n              case 180:\n                return [width, height, width, height];\n              case 270:\n                return [width, 0, height, width];\n              default:\n                return [0, 0, width, height];\n            }\n          }\n          #setStroke() {\n            const {\n              ctx,\n              color,\n              opacity,\n              thickness,\n              parentScale,\n              scaleFactor\n            } = this;\n            ctx.lineWidth = thickness * parentScale / scaleFactor;\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            ctx.miterLimit = 10;\n            ctx.strokeStyle = `${color}${(0, _tools.opacityToHex)(opacity)}`;\n          }\n          #startDrawing(x, y) {\n            this.canvas.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n            this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n            this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n            this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n            this.isEditing = true;\n            if (!this.#isCanvasInitialized) {\n              this.#isCanvasInitialized = true;\n              this.#setCanvasDims();\n              this.thickness ||= InkEditor._defaultThickness;\n              this.color ||= InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n              this.opacity ??= InkEditor._defaultOpacity;\n            }\n            this.currentPath.push([x, y]);\n            this.#hasSomethingToDraw = false;\n            this.#setStroke();\n            this.#requestFrameCallback = () => {\n              this.#drawPoints();\n              if (this.#requestFrameCallback) {\n                window.requestAnimationFrame(this.#requestFrameCallback);\n              }\n            };\n            window.requestAnimationFrame(this.#requestFrameCallback);\n          }\n          #draw(x, y) {\n            const [lastX, lastY] = this.currentPath.at(-1);\n            if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n              return;\n            }\n            const currentPath = this.currentPath;\n            let path2D = this.#currentPath2D;\n            currentPath.push([x, y]);\n            this.#hasSomethingToDraw = true;\n            if (currentPath.length <= 2) {\n              path2D.moveTo(...currentPath[0]);\n              path2D.lineTo(x, y);\n              return;\n            }\n            if (currentPath.length === 3) {\n              this.#currentPath2D = path2D = new Path2D();\n              path2D.moveTo(...currentPath[0]);\n            }\n            this.#makeBezierCurve(path2D, ...currentPath.at(-3), ...currentPath.at(-2), x, y);\n          }\n          #endPath() {\n            if (this.currentPath.length === 0) {\n              return;\n            }\n            const lastPoint = this.currentPath.at(-1);\n            this.#currentPath2D.lineTo(...lastPoint);\n          }\n          #stopDrawing(x, y) {\n            this.#requestFrameCallback = null;\n            x = Math.min(Math.max(x, 0), this.canvas.width);\n            y = Math.min(Math.max(y, 0), this.canvas.height);\n            this.#draw(x, y);\n            this.#endPath();\n            let bezier;\n            if (this.currentPath.length !== 1) {\n              bezier = this.#generateBezierPoints();\n            } else {\n              const xy = [x, y];\n              bezier = [[xy, xy.slice(), xy.slice(), xy]];\n            }\n            const path2D = this.#currentPath2D;\n            const currentPath = this.currentPath;\n            this.currentPath = [];\n            this.#currentPath2D = new Path2D();\n            const cmd = () => {\n              this.allRawPaths.push(currentPath);\n              this.paths.push(bezier);\n              this.bezierPath2D.push(path2D);\n              this.rebuild();\n            };\n            const undo = () => {\n              this.allRawPaths.pop();\n              this.paths.pop();\n              this.bezierPath2D.pop();\n              if (this.paths.length === 0) {\n                this.remove();\n              } else {\n                if (!this.canvas) {\n                  this.#createCanvas();\n                  this.#createObserver();\n                }\n                this.#fitToContent();\n              }\n            };\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: true\n            });\n          }\n          #drawPoints() {\n            if (!this.#hasSomethingToDraw) {\n              return;\n            }\n            this.#hasSomethingToDraw = false;\n            const thickness = Math.ceil(this.thickness * this.parentScale);\n            const lastPoints = this.currentPath.slice(-3);\n            const x = lastPoints.map(xy => xy[0]);\n            const y = lastPoints.map(xy => xy[1]);\n            const xMin = Math.min(...x) - thickness;\n            const xMax = Math.max(...x) + thickness;\n            const yMin = Math.min(...y) - thickness;\n            const yMax = Math.max(...y) + thickness;\n            const {\n              ctx\n            } = this;\n            ctx.save();\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            for (const path of this.bezierPath2D) {\n              ctx.stroke(path);\n            }\n            ctx.stroke(this.#currentPath2D);\n            ctx.restore();\n          }\n          #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n            const prevX = (x0 + x1) / 2;\n            const prevY = (y0 + y1) / 2;\n            const x3 = (x1 + x2) / 2;\n            const y3 = (y1 + y2) / 2;\n            path2D.bezierCurveTo(prevX + 2 * (x1 - prevX) / 3, prevY + 2 * (y1 - prevY) / 3, x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3, x3, y3);\n          }\n          #generateBezierPoints() {\n            const path = this.currentPath;\n            if (path.length <= 2) {\n              return [[path[0], path[0], path.at(-1), path.at(-1)]];\n            }\n            const bezierPoints = [];\n            let i;\n            let [x0, y0] = path[0];\n            for (i = 1; i < path.length - 2; i++) {\n              const [x1, y1] = path[i];\n              const [x2, y2] = path[i + 1];\n              const x3 = (x1 + x2) / 2;\n              const y3 = (y1 + y2) / 2;\n              const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n              const control2 = [x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3];\n              bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n              [x0, y0] = [x3, y3];\n            }\n            const [x1, y1] = path[i];\n            const [x2, y2] = path[i + 1];\n            const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n            const control2 = [x2 + 2 * (x1 - x2) / 3, y2 + 2 * (y1 - y2) / 3];\n            bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n            return bezierPoints;\n          }\n          #redraw() {\n            if (this.isEmpty()) {\n              this.#updateTransform();\n              return;\n            }\n            this.#setStroke();\n            const {\n              canvas,\n              ctx\n            } = this;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            this.#updateTransform();\n            for (const path of this.bezierPath2D) {\n              ctx.stroke(path);\n            }\n          }\n          commit() {\n            if (this.#disableEditing) {\n              return;\n            }\n            super.commit();\n            this.isEditing = false;\n            this.disableEditMode();\n            this.setInForeground();\n            this.#disableEditing = true;\n            this.div.classList.add(\"disabled\");\n            this.#fitToContent(true);\n            this.makeResizable();\n            this.parent.addInkEditorIfNeeded(true);\n            this.moveInDOM();\n            this.div.focus({\n              preventScroll: true\n            });\n          }\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            super.focusin(event);\n            this.enableEditMode();\n          }\n          canvasPointerdown(event) {\n            if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n              return;\n            }\n            this.setInForeground();\n            event.preventDefault();\n            if (event.type !== \"mouse\") {\n              this.div.focus();\n            }\n            this.#startDrawing(event.offsetX, event.offsetY);\n          }\n          canvasPointermove(event) {\n            event.preventDefault();\n            this.#draw(event.offsetX, event.offsetY);\n          }\n          canvasPointerup(event) {\n            event.preventDefault();\n            this.#endDrawing(event);\n          }\n          canvasPointerleave(event) {\n            this.#endDrawing(event);\n          }\n          #endDrawing(event) {\n            this.canvas.removeEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n            this.canvas.removeEventListener(\"pointermove\", this.#boundCanvasPointermove);\n            this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n            this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n            setTimeout(() => {\n              this.canvas.removeEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            }, 10);\n            this.#stopDrawing(event.offsetX, event.offsetY);\n            this.addToAnnotationStorage();\n            this.setInBackground();\n          }\n          #createCanvas() {\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.className = \"inkEditorCanvas\";\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n            this.div.append(this.canvas);\n            this.ctx = this.canvas.getContext(\"2d\");\n          }\n          #createObserver() {\n            this.#observer = new ResizeObserver(entries => {\n              const rect = entries[0].contentRect;\n              if (rect.width && rect.height) {\n                this.setDimensions(rect.width, rect.height);\n              }\n            });\n            this.#observer.observe(this.div);\n          }\n          get isResizable() {\n            return !this.isEmpty() && this.#disableEditing;\n          }\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            super.render();\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_ink2_aria_label\").then(msg => this.div?.setAttribute(\"aria-label\", msg));\n            const [x, y, w, h] = this.#getInitialBBox();\n            this.setAt(x, y, 0, 0);\n            this.setDims(w, h);\n            this.#createCanvas();\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              this.#isCanvasInitialized = true;\n              this.#setCanvasDims();\n              this.setDims(this.width * parentWidth, this.height * parentHeight);\n              this.#redraw();\n              this.div.classList.add(\"disabled\");\n            } else {\n              this.div.classList.add(\"editing\");\n              this.enableEditMode();\n            }\n            this.#createObserver();\n            return this.div;\n          }\n          #setCanvasDims() {\n            if (!this.#isCanvasInitialized) {\n              return;\n            }\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.canvas.width = Math.ceil(this.width * parentWidth);\n            this.canvas.height = Math.ceil(this.height * parentHeight);\n            this.#updateTransform();\n          }\n          setDimensions(width, height) {\n            const roundedWidth = Math.round(width);\n            const roundedHeight = Math.round(height);\n            if (this.#realWidth === roundedWidth && this.#realHeight === roundedHeight) {\n              return;\n            }\n            this.#realWidth = roundedWidth;\n            this.#realHeight = roundedHeight;\n            this.canvas.style.visibility = \"hidden\";\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.fixAndSetPosition();\n            if (this.#disableEditing) {\n              this.#setScaleFactor(width, height);\n            }\n            this.#setCanvasDims();\n            this.#redraw();\n            this.canvas.style.visibility = \"visible\";\n            this.fixDims();\n          }\n          #setScaleFactor(width, height) {\n            const padding = this.#getPadding();\n            const scaleFactorW = (width - padding) / this.#baseWidth;\n            const scaleFactorH = (height - padding) / this.#baseHeight;\n            this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n          }\n          #updateTransform() {\n            const padding = this.#getPadding() / 2;\n            this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n          }\n          static #buildPath2D(bezier) {\n            const path2D = new Path2D();\n            for (let i = 0, ii = bezier.length; i < ii; i++) {\n              const [first, control1, control2, second] = bezier[i];\n              if (i === 0) {\n                path2D.moveTo(...first);\n              }\n              path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n            }\n            return path2D;\n          }\n          static #toPDFCoordinates(points, rect, rotation) {\n            const [blX, blY, trX, trY] = rect;\n            switch (rotation) {\n              case 0:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] += blX;\n                  points[i + 1] = trY - points[i + 1];\n                }\n                break;\n              case 90:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = points[i + 1] + blX;\n                  points[i + 1] = x + blY;\n                }\n                break;\n              case 180:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] = trX - points[i];\n                  points[i + 1] += blY;\n                }\n                break;\n              case 270:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = trX - points[i + 1];\n                  points[i + 1] = trY - x;\n                }\n                break;\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n            return points;\n          }\n          static #fromPDFCoordinates(points, rect, rotation) {\n            const [blX, blY, trX, trY] = rect;\n            switch (rotation) {\n              case 0:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] -= blX;\n                  points[i + 1] = trY - points[i + 1];\n                }\n                break;\n              case 90:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = points[i + 1] - blY;\n                  points[i + 1] = x - blX;\n                }\n                break;\n              case 180:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] = trX - points[i];\n                  points[i + 1] -= blY;\n                }\n                break;\n              case 270:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = trY - points[i + 1];\n                  points[i + 1] = trX - x;\n                }\n                break;\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n            return points;\n          }\n          #serializePaths(s, tx, ty, rect) {\n            const paths = [];\n            const padding = this.thickness / 2;\n            const shiftX = s * tx + padding;\n            const shiftY = s * ty + padding;\n            for (const bezier of this.paths) {\n              const buffer = [];\n              const points = [];\n              for (let j = 0, jj = bezier.length; j < jj; j++) {\n                const [first, control1, control2, second] = bezier[j];\n                const p10 = s * first[0] + shiftX;\n                const p11 = s * first[1] + shiftY;\n                const p20 = s * control1[0] + shiftX;\n                const p21 = s * control1[1] + shiftY;\n                const p30 = s * control2[0] + shiftX;\n                const p31 = s * control2[1] + shiftY;\n                const p40 = s * second[0] + shiftX;\n                const p41 = s * second[1] + shiftY;\n                if (j === 0) {\n                  buffer.push(p10, p11);\n                  points.push(p10, p11);\n                }\n                buffer.push(p20, p21, p30, p31, p40, p41);\n                points.push(p20, p21);\n                if (j === jj - 1) {\n                  points.push(p40, p41);\n                }\n              }\n              paths.push({\n                bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n                points: InkEditor.#toPDFCoordinates(points, rect, this.rotation)\n              });\n            }\n            return paths;\n          }\n          #getBbox() {\n            let xMin = Infinity;\n            let xMax = -Infinity;\n            let yMin = Infinity;\n            let yMax = -Infinity;\n            for (const path of this.paths) {\n              for (const [first, control1, control2, second] of path) {\n                const bbox = _util.Util.bezierBoundingBox(...first, ...control1, ...control2, ...second);\n                xMin = Math.min(xMin, bbox[0]);\n                yMin = Math.min(yMin, bbox[1]);\n                xMax = Math.max(xMax, bbox[2]);\n                yMax = Math.max(yMax, bbox[3]);\n              }\n            }\n            return [xMin, yMin, xMax, yMax];\n          }\n          #getPadding() {\n            return this.#disableEditing ? Math.ceil(this.thickness * this.parentScale) : 0;\n          }\n          #fitToContent() {\n            let firstTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.isEmpty()) {\n              return;\n            }\n            if (!this.#disableEditing) {\n              this.#redraw();\n              return;\n            }\n            const bbox = this.#getBbox();\n            const padding = this.#getPadding();\n            this.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n            this.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n            const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n            const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.setAspectRatio(width, height);\n            const prevTranslationX = this.translationX;\n            const prevTranslationY = this.translationY;\n            this.translationX = -bbox[0];\n            this.translationY = -bbox[1];\n            this.#setCanvasDims();\n            this.#redraw();\n            this.#realWidth = width;\n            this.#realHeight = height;\n            this.setDims(width, height);\n            const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n            this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n          }\n          static deserialize(data, parent, uiManager) {\n            if (data instanceof _annotation_layer.InkAnnotationElement) {\n              return null;\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            editor.thickness = data.thickness;\n            editor.color = _util.Util.makeHexColor(...data.color);\n            editor.opacity = data.opacity;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const width = editor.width * pageWidth;\n            const height = editor.height * pageHeight;\n            const scaleFactor = editor.parentScale;\n            const padding = data.thickness / 2;\n            editor.#disableEditing = true;\n            editor.#realWidth = Math.round(width);\n            editor.#realHeight = Math.round(height);\n            const {\n              paths,\n              rect,\n              rotation\n            } = data;\n            for (let {\n              bezier\n            } of paths) {\n              bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n              const path = [];\n              editor.paths.push(path);\n              let p0 = scaleFactor * (bezier[0] - padding);\n              let p1 = scaleFactor * (bezier[1] - padding);\n              for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n                const p10 = scaleFactor * (bezier[i] - padding);\n                const p11 = scaleFactor * (bezier[i + 1] - padding);\n                const p20 = scaleFactor * (bezier[i + 2] - padding);\n                const p21 = scaleFactor * (bezier[i + 3] - padding);\n                const p30 = scaleFactor * (bezier[i + 4] - padding);\n                const p31 = scaleFactor * (bezier[i + 5] - padding);\n                path.push([[p0, p1], [p10, p11], [p20, p21], [p30, p31]]);\n                p0 = p30;\n                p1 = p31;\n              }\n              const path2D = this.#buildPath2D(path);\n              editor.bezierPath2D.push(path2D);\n            }\n            const bbox = editor.#getBbox();\n            editor.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n            editor.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n            editor.#setScaleFactor(width, height);\n            return editor;\n          }\n          serialize() {\n            if (this.isEmpty()) {\n              return null;\n            }\n            const rect = this.getRect(0, 0);\n            const color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n            return {\n              annotationType: _util.AnnotationEditorType.INK,\n              color,\n              thickness: this.thickness,\n              opacity: this.opacity,\n              paths: this.#serializePaths(this.scaleFactor / this.parentScale, this.translationX, this.translationY, rect),\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n            };\n          }\n        }\n        exports.InkEditor = InkEditor;\n\n        /***/\n      }, /* 34 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StampEditor = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        class StampEditor extends _editor.AnnotationEditor {\n          #bitmap = null;\n          #bitmapId = null;\n          #bitmapPromise = null;\n          #bitmapUrl = null;\n          #bitmapFile = null;\n          #canvas = null;\n          #observer = null;\n          #resizeTimeoutId = null;\n          #isSvg = false;\n          #hasBeenAddedInUndoStack = false;\n          static _type = \"stamp\";\n          constructor(params) {\n            super({\n              ...params,\n              name: \"stampEditor\"\n            });\n            this.#bitmapUrl = params.bitmapUrl;\n            this.#bitmapFile = params.bitmapFile;\n          }\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n);\n          }\n          static get supportedTypes() {\n            const types = [\"apng\", \"avif\", \"bmp\", \"gif\", \"jpeg\", \"png\", \"svg+xml\", \"webp\", \"x-icon\"];\n            return (0, _util.shadow)(this, \"supportedTypes\", types.map(type => `image/${type}`));\n          }\n          static get supportedTypesStr() {\n            return (0, _util.shadow)(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n          }\n          static isHandlingMimeForPasting(mime) {\n            return this.supportedTypes.includes(mime);\n          }\n          static paste(item, parent) {\n            parent.pasteEditor(_util.AnnotationEditorType.STAMP, {\n              bitmapFile: item.getAsFile()\n            });\n          }\n          #getBitmapFetched(data) {\n            let fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            if (!data) {\n              this.remove();\n              return;\n            }\n            this.#bitmap = data.bitmap;\n            if (!fromId) {\n              this.#bitmapId = data.id;\n              this.#isSvg = data.isSvg;\n            }\n            this.#createCanvas();\n          }\n          #getBitmapDone() {\n            this.#bitmapPromise = null;\n            this._uiManager.enableWaiting(false);\n            if (this.#canvas) {\n              this.div.focus();\n            }\n          }\n          #getBitmap() {\n            if (this.#bitmapId) {\n              this._uiManager.enableWaiting(true);\n              this._uiManager.imageManager.getFromId(this.#bitmapId).then(data => this.#getBitmapFetched(data, true)).finally(() => this.#getBitmapDone());\n              return;\n            }\n            if (this.#bitmapUrl) {\n              const url = this.#bitmapUrl;\n              this.#bitmapUrl = null;\n              this._uiManager.enableWaiting(true);\n              this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n              return;\n            }\n            if (this.#bitmapFile) {\n              const file = this.#bitmapFile;\n              this.#bitmapFile = null;\n              this._uiManager.enableWaiting(true);\n              this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n              return;\n            }\n            const input = document.createElement(\"input\");\n            input.type = \"file\";\n            input.accept = StampEditor.supportedTypesStr;\n            this.#bitmapPromise = new Promise(resolve => {\n              input.addEventListener(\"change\", async () => {\n                if (!input.files || input.files.length === 0) {\n                  this.remove();\n                } else {\n                  this._uiManager.enableWaiting(true);\n                  const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n                  this.#getBitmapFetched(data);\n                }\n                resolve();\n              });\n              input.addEventListener(\"cancel\", () => {\n                this.remove();\n                resolve();\n              });\n            }).finally(() => this.#getBitmapDone());\n            input.click();\n          }\n          remove() {\n            if (this.#bitmapId) {\n              this.#bitmap = null;\n              this._uiManager.imageManager.deleteId(this.#bitmapId);\n              this.#canvas?.remove();\n              this.#canvas = null;\n              this.#observer?.disconnect();\n              this.#observer = null;\n            }\n            super.remove();\n          }\n          rebuild() {\n            if (!this.parent) {\n              if (this.#bitmapId) {\n                this.#getBitmap();\n              }\n              return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n              return;\n            }\n            if (this.#bitmapId) {\n              this.#getBitmap();\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n          onceAdded() {\n            this._isDraggable = true;\n            this.div.focus();\n          }\n          isEmpty() {\n            return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile);\n          }\n          get isResizable() {\n            return true;\n          }\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            super.render();\n            this.div.hidden = true;\n            if (this.#bitmap) {\n              this.#createCanvas();\n            } else {\n              this.#getBitmap();\n            }\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n            }\n            return this.div;\n          }\n          #createCanvas() {\n            const {\n              div\n            } = this;\n            let {\n              width,\n              height\n            } = this.#bitmap;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const MAX_RATIO = 0.75;\n            if (this.width) {\n              width = this.width * pageWidth;\n              height = this.height * pageHeight;\n            } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n              const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n              width *= factor;\n              height *= factor;\n            }\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);\n            this._uiManager.enableWaiting(false);\n            const canvas = this.#canvas = document.createElement(\"canvas\");\n            div.append(canvas);\n            div.hidden = false;\n            this.#drawBitmap(width, height);\n            this.#createObserver();\n            if (!this.#hasBeenAddedInUndoStack) {\n              this.parent.addUndoableEditor(this);\n              this.#hasBeenAddedInUndoStack = true;\n            }\n            this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n              source: this,\n              details: {\n                type: \"editing\",\n                subtype: this.editorType,\n                data: {\n                  action: \"inserted_image\"\n                }\n              }\n            });\n            this.addAltTextButton();\n          }\n          #setDimensions(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.setDims(width, height);\n            if (this._initialOptions?.isCentered) {\n              this.center();\n            } else {\n              this.fixAndSetPosition();\n            }\n            this._initialOptions = null;\n            if (this.#resizeTimeoutId !== null) {\n              clearTimeout(this.#resizeTimeoutId);\n            }\n            const TIME_TO_WAIT = 200;\n            this.#resizeTimeoutId = setTimeout(() => {\n              this.#resizeTimeoutId = null;\n              this.#drawBitmap(width, height);\n            }, TIME_TO_WAIT);\n          }\n          #scaleBitmap(width, height) {\n            const {\n              width: bitmapWidth,\n              height: bitmapHeight\n            } = this.#bitmap;\n            let newWidth = bitmapWidth;\n            let newHeight = bitmapHeight;\n            let bitmap = this.#bitmap;\n            while (newWidth > 2 * width || newHeight > 2 * height) {\n              const prevWidth = newWidth;\n              const prevHeight = newHeight;\n              if (newWidth > 2 * width) {\n                newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n              }\n              if (newHeight > 2 * height) {\n                newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n              }\n              const offscreen = new OffscreenCanvas(newWidth, newHeight);\n              const ctx = offscreen.getContext(\"2d\");\n              ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n              bitmap = offscreen.transferToImageBitmap();\n            }\n            return bitmap;\n          }\n          #drawBitmap(width, height) {\n            width = Math.ceil(width);\n            height = Math.ceil(height);\n            const canvas = this.#canvas;\n            if (!canvas || canvas.width === width && canvas.height === height) {\n              return;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(width, height);\n            const ctx = canvas.getContext(\"2d\");\n            ctx.filter = this._uiManager.hcmFilter;\n            ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, width, height);\n          }\n          #serializeBitmap(toUrl) {\n            if (toUrl) {\n              if (this.#isSvg) {\n                const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n                if (url) {\n                  return url;\n                }\n              }\n              const canvas = document.createElement(\"canvas\");\n              ({\n                width: canvas.width,\n                height: canvas.height\n              } = this.#bitmap);\n              const ctx = canvas.getContext(\"2d\");\n              ctx.drawImage(this.#bitmap, 0, 0);\n              return canvas.toDataURL();\n            }\n            if (this.#isSvg) {\n              const [pageWidth, pageHeight] = this.pageDimensions;\n              const width = Math.round(this.width * pageWidth * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n              const height = Math.round(this.height * pageHeight * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n              const offscreen = new OffscreenCanvas(width, height);\n              const ctx = offscreen.getContext(\"2d\");\n              ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n              return offscreen.transferToImageBitmap();\n            }\n            return structuredClone(this.#bitmap);\n          }\n          #createObserver() {\n            this.#observer = new ResizeObserver(entries => {\n              const rect = entries[0].contentRect;\n              if (rect.width && rect.height) {\n                this.#setDimensions(rect.width, rect.height);\n              }\n            });\n            this.#observer.observe(this.div);\n          }\n          static deserialize(data, parent, uiManager) {\n            if (data instanceof _annotation_layer.StampAnnotationElement) {\n              return null;\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            const {\n              rect,\n              bitmapUrl,\n              bitmapId,\n              isSvg,\n              accessibilityData\n            } = data;\n            if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n              editor.#bitmapId = bitmapId;\n            } else {\n              editor.#bitmapUrl = bitmapUrl;\n            }\n            editor.#isSvg = isSvg;\n            const [parentWidth, parentHeight] = editor.pageDimensions;\n            editor.width = (rect[2] - rect[0]) / parentWidth;\n            editor.height = (rect[3] - rect[1]) / parentHeight;\n            if (accessibilityData) {\n              editor.altTextData = accessibilityData;\n            }\n            return editor;\n          }\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (this.isEmpty()) {\n              return null;\n            }\n            const serialized = {\n              annotationType: _util.AnnotationEditorType.STAMP,\n              bitmapId: this.#bitmapId,\n              pageIndex: this.pageIndex,\n              rect: this.getRect(0, 0),\n              rotation: this.rotation,\n              isSvg: this.#isSvg,\n              structTreeParentId: this._structTreeParentId\n            };\n            if (isForCopying) {\n              serialized.bitmapUrl = this.#serializeBitmap(true);\n              serialized.accessibilityData = this.altTextData;\n              return serialized;\n            }\n            const {\n              decorative,\n              altText\n            } = this.altTextData;\n            if (!decorative && altText) {\n              serialized.accessibilityData = {\n                type: \"Figure\",\n                alt: altText\n              };\n            }\n            if (context === null) {\n              return serialized;\n            }\n            context.stamps ||= new Map();\n            const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n            if (!context.stamps.has(this.#bitmapId)) {\n              context.stamps.set(this.#bitmapId, {\n                area,\n                serialized\n              });\n              serialized.bitmap = this.#serializeBitmap(false);\n            } else if (this.#isSvg) {\n              const prevData = context.stamps.get(this.#bitmapId);\n              if (area > prevData.area) {\n                prevData.area = area;\n                prevData.serialized.bitmap.close();\n                prevData.serialized.bitmap = this.#serializeBitmap(false);\n              }\n            }\n            return serialized;\n          }\n        }\n        exports.StampEditor = StampEditor;\n\n        /***/\n      }\n      /******/];\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __w_pdfjs_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      var __webpack_exports__ = {};\n      // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n      (() => {\n        var exports = __webpack_exports__;\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"AbortException\", {\n          enumerable: true,\n          get: function () {\n            return _util.AbortException;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_editor_layer.AnnotationEditorLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorParamsType\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationEditorParamsType;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorType\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationEditorType;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorUIManager\", {\n          enumerable: true,\n          get: function () {\n            return _tools.AnnotationEditorUIManager;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_layer.AnnotationLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationMode\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationMode;\n          }\n        });\n        Object.defineProperty(exports, \"CMapCompressionType\", {\n          enumerable: true,\n          get: function () {\n            return _util.CMapCompressionType;\n          }\n        });\n        Object.defineProperty(exports, \"DOMSVGFactory\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.DOMSVGFactory;\n          }\n        });\n        Object.defineProperty(exports, \"FeatureTest\", {\n          enumerable: true,\n          get: function () {\n            return _util.FeatureTest;\n          }\n        });\n        Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n          enumerable: true,\n          get: function () {\n            return _worker_options.GlobalWorkerOptions;\n          }\n        });\n        Object.defineProperty(exports, \"ImageKind\", {\n          enumerable: true,\n          get: function () {\n            return _util.ImageKind;\n          }\n        });\n        Object.defineProperty(exports, \"InvalidPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.InvalidPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"MissingPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.MissingPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"OPS\", {\n          enumerable: true,\n          get: function () {\n            return _util.OPS;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFDataRangeTransport;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDateString\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PDFDateString;\n          }\n        });\n        Object.defineProperty(exports, \"PDFWorker\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFWorker;\n          }\n        });\n        Object.defineProperty(exports, \"PasswordResponses\", {\n          enumerable: true,\n          get: function () {\n            return _util.PasswordResponses;\n          }\n        });\n        Object.defineProperty(exports, \"PermissionFlag\", {\n          enumerable: true,\n          get: function () {\n            return _util.PermissionFlag;\n          }\n        });\n        Object.defineProperty(exports, \"PixelsPerInch\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PixelsPerInch;\n          }\n        });\n        Object.defineProperty(exports, \"PromiseCapability\", {\n          enumerable: true,\n          get: function () {\n            return _util.PromiseCapability;\n          }\n        });\n        Object.defineProperty(exports, \"RenderingCancelledException\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.RenderingCancelledException;\n          }\n        });\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _api.SVGGraphics;\n          }\n        });\n        Object.defineProperty(exports, \"UnexpectedResponseException\", {\n          enumerable: true,\n          get: function () {\n            return _util.UnexpectedResponseException;\n          }\n        });\n        Object.defineProperty(exports, \"Util\", {\n          enumerable: true,\n          get: function () {\n            return _util.Util;\n          }\n        });\n        Object.defineProperty(exports, \"VerbosityLevel\", {\n          enumerable: true,\n          get: function () {\n            return _util.VerbosityLevel;\n          }\n        });\n        Object.defineProperty(exports, \"XfaLayer\", {\n          enumerable: true,\n          get: function () {\n            return _xfa_layer.XfaLayer;\n          }\n        });\n        Object.defineProperty(exports, \"build\", {\n          enumerable: true,\n          get: function () {\n            return _api.build;\n          }\n        });\n        Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n          enumerable: true,\n          get: function () {\n            return _util.createValidAbsoluteUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getDocument\", {\n          enumerable: true,\n          get: function () {\n            return _api.getDocument;\n          }\n        });\n        Object.defineProperty(exports, \"getFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getPdfFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getXfaPageViewport\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getXfaPageViewport;\n          }\n        });\n        Object.defineProperty(exports, \"isDataScheme\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isDataScheme;\n          }\n        });\n        Object.defineProperty(exports, \"isPdfFile\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isPdfFile;\n          }\n        });\n        Object.defineProperty(exports, \"loadScript\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.loadScript;\n          }\n        });\n        Object.defineProperty(exports, \"noContextMenu\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.noContextMenu;\n          }\n        });\n        Object.defineProperty(exports, \"normalizeUnicode\", {\n          enumerable: true,\n          get: function () {\n            return _util.normalizeUnicode;\n          }\n        });\n        Object.defineProperty(exports, \"renderTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.renderTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"setLayerDimensions\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.setLayerDimensions;\n          }\n        });\n        Object.defineProperty(exports, \"shadow\", {\n          enumerable: true,\n          get: function () {\n            return _util.shadow;\n          }\n        });\n        Object.defineProperty(exports, \"updateTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.updateTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"version\", {\n          enumerable: true,\n          get: function () {\n            return _api.version;\n          }\n        });\n        var _util = __w_pdfjs_require__(1);\n        var _api = __w_pdfjs_require__(2);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _text_layer = __w_pdfjs_require__(26);\n        var _annotation_editor_layer = __w_pdfjs_require__(27);\n        var _tools = __w_pdfjs_require__(5);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        var _worker_options = __w_pdfjs_require__(14);\n        var _xfa_layer = __w_pdfjs_require__(32);\n        const pdfjsVersion = '3.11.174';\n        const pdfjsBuild = 'ce8716743';\n      })();\n\n      /******/\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});",
  "externalDependencies": [],
  "map": {
    "version": 3,
    "mappings": "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",
    "names": [
      "module",
      "define",
      "exports",
      "root",
      "isNodeJS",
      "process",
      "versions",
      "nw",
      "electron",
      "type",
      "IDENTITY_MATRIX",
      "FONT_IDENTITY_MATRIX",
      "MAX_IMAGE_SIZE_TO_CACHE",
      "LINE_FACTOR",
      "LINE_DESCENT_FACTOR",
      "BASELINE_FACTOR",
      "RenderingIntentFlag",
      "ANY",
      "DISPLAY",
      "PRINT",
      "SAVE",
      "ANNOTATIONS_FORMS",
      "ANNOTATIONS_STORAGE",
      "ANNOTATIONS_DISABLE",
      "OPLIST",
      "AnnotationMode",
      "DISABLE",
      "ENABLE",
      "ENABLE_FORMS",
      "ENABLE_STORAGE",
      "AnnotationEditorPrefix",
      "AnnotationEditorType",
      "NONE",
      "FREETEXT",
      "STAMP",
      "INK",
      "AnnotationEditorParamsType",
      "RESIZE",
      "CREATE",
      "FREETEXT_SIZE",
      "FREETEXT_COLOR",
      "FREETEXT_OPACITY",
      "INK_COLOR",
      "INK_THICKNESS",
      "INK_OPACITY",
      "PermissionFlag",
      "MODIFY_CONTENTS",
      "COPY",
      "MODIFY_ANNOTATIONS",
      "FILL_INTERACTIVE_FORMS",
      "COPY_FOR_ACCESSIBILITY",
      "ASSEMBLE",
      "PRINT_HIGH_QUALITY",
      "TextRenderingMode",
      "FILL",
      "STROKE",
      "FILL_STROKE",
      "INVISIBLE",
      "FILL_ADD_TO_PATH",
      "STROKE_ADD_TO_PATH",
      "FILL_STROKE_ADD_TO_PATH",
      "ADD_TO_PATH",
      "FILL_STROKE_MASK",
      "ADD_TO_PATH_FLAG",
      "ImageKind",
      "GRAYSCALE_1BPP",
      "RGB_24BPP",
      "RGBA_32BPP",
      "AnnotationType",
      "TEXT",
      "LINK",
      "LINE",
      "SQUARE",
      "CIRCLE",
      "POLYGON",
      "POLYLINE",
      "HIGHLIGHT",
      "UNDERLINE",
      "SQUIGGLY",
      "STRIKEOUT",
      "CARET",
      "POPUP",
      "FILEATTACHMENT",
      "SOUND",
      "MOVIE",
      "WIDGET",
      "SCREEN",
      "PRINTERMARK",
      "TRAPNET",
      "WATERMARK",
      "THREED",
      "REDACT",
      "AnnotationReplyType",
      "GROUP",
      "REPLY",
      "AnnotationFlag",
      "HIDDEN",
      "NOZOOM",
      "NOROTATE",
      "NOVIEW",
      "READONLY",
      "LOCKED",
      "TOGGLENOVIEW",
      "LOCKEDCONTENTS",
      "AnnotationFieldFlag",
      "REQUIRED",
      "NOEXPORT",
      "MULTILINE",
      "PASSWORD",
      "NOTOGGLETOOFF",
      "RADIO",
      "PUSHBUTTON",
      "COMBO",
      "EDIT",
      "SORT",
      "FILESELECT",
      "MULTISELECT",
      "DONOTSPELLCHECK",
      "DONOTSCROLL",
      "COMB",
      "RICHTEXT",
      "RADIOSINUNISON",
      "COMMITONSELCHANGE",
      "AnnotationBorderStyleType",
      "SOLID",
      "DASHED",
      "BEVELED",
      "INSET",
      "AnnotationActionEventType",
      "E",
      "X",
      "D",
      "U",
      "Fo",
      "Bl",
      "PO",
      "PC",
      "PV",
      "PI",
      "K",
      "F",
      "V",
      "C",
      "DocumentActionEventType",
      "WC",
      "WS",
      "DS",
      "WP",
      "DP",
      "PageActionEventType",
      "O",
      "VerbosityLevel",
      "ERRORS",
      "WARNINGS",
      "INFOS",
      "CMapCompressionType",
      "BINARY",
      "OPS",
      "dependency",
      "setLineWidth",
      "setLineCap",
      "setLineJoin",
      "setMiterLimit",
      "setDash",
      "setRenderingIntent",
      "setFlatness",
      "setGState",
      "save",
      "restore",
      "transform",
      "moveTo",
      "lineTo",
      "curveTo",
      "curveTo2",
      "curveTo3",
      "closePath",
      "rectangle",
      "stroke",
      "closeStroke",
      "fill",
      "eoFill",
      "fillStroke",
      "eoFillStroke",
      "closeFillStroke",
      "closeEOFillStroke",
      "endPath",
      "clip",
      "eoClip",
      "beginText",
      "endText",
      "setCharSpacing",
      "setWordSpacing",
      "setHScale",
      "setLeading",
      "setFont",
      "setTextRenderingMode",
      "setTextRise",
      "moveText",
      "setLeadingMoveText",
      "setTextMatrix",
      "nextLine",
      "showText",
      "showSpacedText",
      "nextLineShowText",
      "nextLineSetSpacingShowText",
      "setCharWidth",
      "setCharWidthAndBounds",
      "setStrokeColorSpace",
      "setFillColorSpace",
      "setStrokeColor",
      "setStrokeColorN",
      "setFillColor",
      "setFillColorN",
      "setStrokeGray",
      "setFillGray",
      "setStrokeRGBColor",
      "setFillRGBColor",
      "setStrokeCMYKColor",
      "setFillCMYKColor",
      "shadingFill",
      "beginInlineImage",
      "beginImageData",
      "endInlineImage",
      "paintXObject",
      "markPoint",
      "markPointProps",
      "beginMarkedContent",
      "beginMarkedContentProps",
      "endMarkedContent",
      "beginCompat",
      "endCompat",
      "paintFormXObjectBegin",
      "paintFormXObjectEnd",
      "beginGroup",
      "endGroup",
      "beginAnnotation",
      "endAnnotation",
      "paintImageMaskXObject",
      "paintImageMaskXObjectGroup",
      "paintImageXObject",
      "paintInlineImageXObject",
      "paintInlineImageXObjectGroup",
      "paintImageXObjectRepeat",
      "paintImageMaskXObjectRepeat",
      "paintSolidColorImageMask",
      "constructPath",
      "PasswordResponses",
      "NEED_PASSWORD",
      "INCORRECT_PASSWORD",
      "verbosity",
      "setVerbosityLevel",
      "level",
      "Number",
      "isInteger",
      "getVerbosityLevel",
      "info",
      "msg",
      "console",
      "log",
      "warn",
      "unreachable",
      "Error",
      "assert",
      "cond",
      "_isValidProtocol",
      "url",
      "protocol",
      "createValidAbsoluteUrl",
      "baseUrl",
      "options",
      "addDefaultProtocol",
      "startsWith",
      "dots",
      "match",
      "length",
      "tryConvertEncoding",
      "stringToUTF8String",
      "absoluteUrl",
      "URL",
      "shadow",
      "obj",
      "prop",
      "value",
      "nonSerializable",
      "Object",
      "defineProperty",
      "enumerable",
      "configurable",
      "writable",
      "BaseException",
      "BaseExceptionClosure",
      "message",
      "name",
      "constructor",
      "prototype",
      "PasswordException",
      "code",
      "UnknownErrorException",
      "details",
      "InvalidPDFException",
      "MissingPDFException",
      "UnexpectedResponseException",
      "status",
      "FormatError",
      "AbortException",
      "bytesToString",
      "bytes",
      "undefined",
      "MAX_ARGUMENT_COUNT",
      "String",
      "fromCharCode",
      "apply",
      "strBuf",
      "i",
      "chunkEnd",
      "Math",
      "min",
      "chunk",
      "subarray",
      "push",
      "join",
      "stringToBytes",
      "str",
      "Uint8Array",
      "charCodeAt",
      "string32",
      "objectSize",
      "keys",
      "objectFromMap",
      "map",
      "create",
      "key",
      "isLittleEndian",
      "buffer8",
      "view32",
      "Uint32Array",
      "buffer",
      "isEvalSupported",
      "Function",
      "FeatureTest",
      "isOffscreenCanvasSupported",
      "OffscreenCanvas",
      "platform",
      "navigator",
      "isWin",
      "isMac",
      "includes",
      "isCSSRoundSupported",
      "globalThis",
      "CSS",
      "supports",
      "hexNumbers",
      "Array",
      "n",
      "toString",
      "padStart",
      "Util",
      "makeHexColor",
      "r",
      "g",
      "b",
      "scaleMinMax",
      "minMax",
      "temp",
      "m1",
      "m2",
      "applyTransform",
      "p",
      "m",
      "xt",
      "yt",
      "applyInverseTransform",
      "d",
      "getAxialAlignedBoundingBox",
      "p1",
      "p2",
      "slice",
      "p3",
      "p4",
      "max",
      "inverseTransform",
      "singularValueDecompose2dScale",
      "transpose",
      "a",
      "c",
      "first",
      "second",
      "sqrt",
      "sx",
      "sy",
      "normalizeRect",
      "rect",
      "intersect",
      "rect1",
      "rect2",
      "xLow",
      "xHigh",
      "yLow",
      "yHigh",
      "bezierBoundingBox",
      "x0",
      "y0",
      "x1",
      "y1",
      "x2",
      "y2",
      "x3",
      "y3",
      "tvalues",
      "bounds",
      "t",
      "t1",
      "t2",
      "b2ac",
      "sqrtb2ac",
      "abs",
      "j",
      "mt",
      "jlen",
      "PDFStringTranslateTable",
      "stringToPDFString",
      "encoding",
      "decoder",
      "TextDecoder",
      "fatal",
      "decode",
      "ex",
      "ii",
      "charAt",
      "decodeURIComponent",
      "escape",
      "utf8StringToString",
      "unescape",
      "encodeURIComponent",
      "isArrayBuffer",
      "v",
      "byteLength",
      "isArrayEqual",
      "arr1",
      "arr2",
      "getModificationDate",
      "date",
      "Date",
      "getUTCFullYear",
      "getUTCMonth",
      "getUTCDate",
      "getUTCHours",
      "getUTCMinutes",
      "getUTCSeconds",
      "PromiseCapability",
      "promise",
      "Promise",
      "resolve",
      "reject",
      "data",
      "reason",
      "settled",
      "NormalizeRegex",
      "NormalizationMap",
      "normalizeUnicode",
      "Map",
      "replaceAll",
      "_",
      "normalize",
      "get",
      "getUuid",
      "crypto",
      "randomUUID",
      "buf",
      "getRandomValues",
      "floor",
      "random",
      "AnnotationPrefix",
      "DEFAULT_RANGE_CHUNK_SIZE",
      "RENDERING_CANCELLED_TIMEOUT",
      "DELAYED_CLEANUP_TIMEOUT",
      "DefaultCanvasFactory",
      "NodeCanvasFactory",
      "DOMCanvasFactory",
      "DefaultCMapReaderFactory",
      "NodeCMapReaderFactory",
      "DOMCMapReaderFactory",
      "DefaultFilterFactory",
      "NodeFilterFactory",
      "DOMFilterFactory",
      "DefaultStandardFontDataFactory",
      "NodeStandardFontDataFactory",
      "DOMStandardFontDataFactory",
      "getDocument",
      "src",
      "range",
      "task",
      "PDFDocumentLoadingTask",
      "docId",
      "getUrlProp",
      "getDataProp",
      "httpHeaders",
      "withCredentials",
      "password",
      "rangeTransport",
      "PDFDataRangeTransport",
      "rangeChunkSize",
      "worker",
      "PDFWorker",
      "docBaseUrl",
      "cMapUrl",
      "cMapPacked",
      "CMapReaderFactory",
      "standardFontDataUrl",
      "StandardFontDataFactory",
      "ignoreErrors",
      "stopAtErrors",
      "maxImageSize",
      "canvasMaxAreaInBytes",
      "disableFontFace",
      "fontExtraProperties",
      "enableXfa",
      "ownerDocument",
      "document",
      "disableRange",
      "disableStream",
      "disableAutoFetch",
      "pdfBug",
      "NaN",
      "useSystemFonts",
      "useWorkerFetch",
      "baseURI",
      "canvasFactory",
      "filterFactory",
      "styleElement",
      "transportFactory",
      "cMapReaderFactory",
      "isCompressed",
      "standardFontDataFactory",
      "workerParams",
      "port",
      "GlobalWorkerOptions",
      "workerPort",
      "fromPort",
      "_worker",
      "fetchDocParams",
      "apiVersion",
      "evaluatorOptions",
      "transportParams",
      "then",
      "destroyed",
      "workerIdPromise",
      "_fetchDocument",
      "networkStreamPromise",
      "networkStream",
      "PDFDataTransportStream",
      "initialData",
      "progressiveDone",
      "contentDispositionFilename",
      "createPDFNetworkStream",
      "params",
      "PDFNodeStream",
      "PDFFetchStream",
      "PDFNetworkStream",
      "all",
      "workerId",
      "messageHandler",
      "MessageHandler",
      "transport",
      "WorkerTransport",
      "_transport",
      "send",
      "catch",
      "_capability",
      "source",
      "sendWithPromise",
      "val",
      "href",
      "window",
      "location",
      "Buffer",
      "isNaN",
      "onPassword",
      "onProgress",
      "destroy",
      "_pendingDestroy",
      "_rangeListeners",
      "_progressListeners",
      "_progressiveReadListeners",
      "_progressiveDoneListeners",
      "_readyCapability",
      "addRangeListener",
      "listener",
      "addProgressListener",
      "addProgressiveReadListener",
      "addProgressiveDoneListener",
      "onDataRange",
      "begin",
      "onDataProgress",
      "loaded",
      "total",
      "onDataProgressiveRead",
      "onDataProgressiveDone",
      "transportReady",
      "requestDataRange",
      "end",
      "abort",
      "PDFDocumentProxy",
      "pdfInfo",
      "_pdfInfo",
      "getJSActions",
      "js",
      "jsArr",
      "annotationStorage",
      "numPages",
      "fingerprints",
      "isPureXfa",
      "_htmlForXfa",
      "allXfaHtml",
      "getPage",
      "pageNumber",
      "getPageIndex",
      "ref",
      "getDestinations",
      "getDestination",
      "id",
      "getPageLabels",
      "getPageLayout",
      "getPageMode",
      "getViewerPreferences",
      "getOpenAction",
      "getAttachments",
      "getDocJSActions",
      "getOutline",
      "getOptionalContentConfig",
      "getPermissions",
      "getMetadata",
      "getMarkInfo",
      "getData",
      "saveDocument",
      "getDownloadInfo",
      "downloadInfoCapability",
      "cleanup",
      "keepLoadedFonts",
      "startCleanup",
      "loadingTask",
      "loadingParams",
      "getFieldObjects",
      "hasJSActions",
      "getCalculationOrderIds",
      "PDFPageProxy",
      "pageIndex",
      "pageInfo",
      "_pageIndex",
      "_pageInfo",
      "_stats",
      "StatTimer",
      "_pdfBug",
      "commonObjs",
      "objs",
      "PDFObjects",
      "_maybeCleanupAfterRender",
      "_intentStates",
      "rotate",
      "userUnit",
      "view",
      "getViewport",
      "scale",
      "rotation",
      "offsetX",
      "offsetY",
      "dontFlip",
      "PageViewport",
      "viewBox",
      "getAnnotations",
      "intent",
      "intentArgs",
      "getRenderingIntent",
      "renderingIntent",
      "getPageJSActions",
      "getXfa",
      "children",
      "render",
      "canvasContext",
      "viewport",
      "annotationMode",
      "background",
      "optionalContentConfigPromise",
      "annotationCanvasMap",
      "pageColors",
      "printAnnotationStorage",
      "time",
      "intentState",
      "cacheKey",
      "set",
      "streamReaderCancelTimeout",
      "clearTimeout",
      "intentPrint",
      "displayReadyCapability",
      "operatorList",
      "fnArray",
      "argsArray",
      "lastChunk",
      "separateAnnots",
      "_pumpOperatorList",
      "complete",
      "error",
      "renderTasks",
      "delete",
      "internalRenderTask",
      "capability",
      "_abortOperatorList",
      "timeEnd",
      "InternalRenderTask",
      "callback",
      "useRequestAnimationFrame",
      "Set",
      "add",
      "renderTask",
      "transparency",
      "optionalContentConfig",
      "initializeGraphics",
      "operatorListChanged",
      "getOperatorList",
      "opListReadCapability",
      "opListTask",
      "streamTextContent",
      "includeMarkedContent",
      "disableNormalization",
      "TEXT_CONTENT_CHUNK_SIZE",
      "sendWithStream",
      "highWaterMark",
      "size",
      "textContent",
      "items",
      "getTextContent",
      "xfa",
      "XfaText",
      "readableStream",
      "pump",
      "reader",
      "read",
      "done",
      "assign",
      "styles",
      "getReader",
      "getStructTree",
      "_destroy",
      "waitOn",
      "values",
      "force",
      "completed",
      "cancel",
      "clear",
      "resetStats",
      "success",
      "delayed",
      "setTimeout",
      "_startRenderPage",
      "_renderPageChunk",
      "operatorListChunk",
      "annotationStorageSerializable",
      "transfers",
      "streamReader",
      "RenderingCancelledException",
      "delay",
      "extraDelay",
      "curCacheKey",
      "curIntentState",
      "stats",
      "LoopbackPort",
      "postMessage",
      "transfer",
      "event",
      "structuredClone",
      "call",
      "addEventListener",
      "removeEventListener",
      "terminate",
      "PDFWorkerUtil",
      "isWorkerDisabled",
      "fallbackWorkerSrc",
      "fakeWorkerId",
      "__non_webpack_require__",
      "pdfjsFilePath",
      "currentScript",
      "replace",
      "isSameOrigin",
      "otherUrl",
      "base",
      "origin",
      "other",
      "createCDNWrapper",
      "wrapper",
      "createObjectURL",
      "Blob",
      "_port",
      "_webWorker",
      "_messageHandler",
      "has",
      "WeakMap",
      "_initializeFromPort",
      "_initialize",
      "on",
      "_mainThreadWorkerMessageHandler",
      "workerSrc",
      "Worker",
      "terminateEarly",
      "onWorkerError",
      "_setupFakeWorker",
      "sendTest",
      "testObj",
      "_setupFakeWorkerGlobal",
      "WorkerMessageHandler",
      "workerHandler",
      "setup",
      "cachedPort",
      "pdfjsWorker",
      "loader",
      "mainWorkerMessageHandler",
      "eval",
      "factory",
      "fontLoader",
      "FontLoader",
      "_params",
      "destroyCapability",
      "_networkStream",
      "_fullReader",
      "_lastProgress",
      "setupMessageHandler",
      "cachedPromise",
      "AnnotationStorage",
      "isOpList",
      "SerializableEmpty",
      "PrintAnnotationStorage",
      "serializable",
      "hash",
      "page",
      "hasOwnProperty",
      "resetModified",
      "terminated",
      "cancelAllRequests",
      "sink",
      "getFullReader",
      "evt",
      "onPull",
      "close",
      "ArrayBuffer",
      "enqueue",
      "onCancel",
      "ready",
      "readyReason",
      "headersCapability",
      "fullReader",
      "headersReady",
      "isStreamingSupported",
      "isRangeSupported",
      "contentLength",
      "rangeReader",
      "getRangeReader",
      "_numPages",
      "htmlForXfa",
      "exception",
      "updatePassword",
      "exportedData",
      "exportedError",
      "inspectFont",
      "FontInspector",
      "enabled",
      "font",
      "fontAdded",
      "FontFaceObject",
      "bind",
      "finally",
      "imageData",
      "pageProxy",
      "bitmap",
      "width",
      "height",
      "fetch",
      "filename",
      "num",
      "gen",
      "results",
      "OptionalContentConfig",
      "metadata",
      "Metadata",
      "cleanupSuccessful",
      "objId",
      "RenderTask",
      "onContinue",
      "form",
      "canvas",
      "WeakSet",
      "operatorListIdx",
      "running",
      "graphicsReadyCallback",
      "graphicsReady",
      "_useRequestAnimationFrame",
      "cancelled",
      "_cancelBound",
      "_continueBound",
      "_continue",
      "_scheduleNextBound",
      "_scheduleNext",
      "_nextBound",
      "_next",
      "_canvas",
      "StepperManager",
      "stepper",
      "init",
      "nextBreakPoint",
      "getNextBreakPoint",
      "gfx",
      "CanvasGraphics",
      "beginDrawing",
      "endDrawing",
      "updateOperatorList",
      "requestAnimationFrame",
      "executeOperatorList",
      "version",
      "build",
      "freeze",
      "onSetModified",
      "onResetModified",
      "onAnnotationEditor",
      "getValue",
      "defaultValue",
      "getRawValue",
      "remove",
      "AnnotationEditor",
      "setValue",
      "modified",
      "entry",
      "entries",
      "_type",
      "getAll",
      "setAll",
      "print",
      "MurmurHash3_64",
      "context",
      "hasBitmap",
      "serialized",
      "serialize",
      "update",
      "JSON",
      "stringify",
      "hexdigest",
      "parent",
      "clone",
      "focusin",
      "focusout",
      "_initialOptions",
      "_uiManager",
      "_focusEventsAllowed",
      "_l10nPromise",
      "_zIndex",
      "_borderLineWidth",
      "_colorManager",
      "ColorManager",
      "SMALL_EDITOR_SIZE",
      "parameters",
      "div",
      "uiManager",
      "annotationElementId",
      "_willKeepAspectRatio",
      "isCentered",
      "_structTreeParentId",
      "rawDims",
      "pageWidth",
      "pageHeight",
      "pageX",
      "pageY",
      "pageRotation",
      "viewParameters",
      "pageDimensions",
      "pageTranslation",
      "parentDimensions",
      "x",
      "y",
      "isAttachedToDOM",
      "deleted",
      "editorType",
      "getPrototypeOf",
      "_defaultLineColor",
      "getHexCode",
      "deleteAnnotationElement",
      "editor",
      "fakeEditor",
      "FakeEditor",
      "getNextId",
      "addToAnnotationStorage",
      "initialize",
      "l10n",
      "strings",
      "style",
      "getComputedStyle",
      "documentElement",
      "parseFloat",
      "getPropertyValue",
      "updateDefaultParams",
      "_value",
      "defaultPropertiesToUpdate",
      "isHandlingMimeForPasting",
      "mime",
      "paste",
      "item",
      "propertiesToUpdate",
      "_isDraggable",
      "classList",
      "toggle",
      "center",
      "parentRotation",
      "fixAndSetPosition",
      "addCommands",
      "currentLayer",
      "setInBackground",
      "zIndex",
      "setInForeground",
      "setParent",
      "setSelected",
      "target",
      "relatedTarget",
      "closest",
      "preventDefault",
      "isMultipleSelection",
      "commitOrRemove",
      "isEmpty",
      "commit",
      "setAt",
      "tx",
      "ty",
      "screenToPageTranslation",
      "translate",
      "translateInPage",
      "scrollIntoView",
      "block",
      "drag",
      "parentWidth",
      "parentHeight",
      "getBoundingClientRect",
      "findNewParent",
      "bx",
      "by",
      "left",
      "toFixed",
      "top",
      "moveInDOM",
      "rotatePoint",
      "angle",
      "pageTranslationToScreen",
      "parentScale",
      "realScale",
      "scaledWidth",
      "scaledHeight",
      "round",
      "setDims",
      "fixDims",
      "widthPercent",
      "endsWith",
      "heightPercent",
      "getInitialTranslation",
      "createElement",
      "classes",
      "append",
      "noContextMenu",
      "prepend",
      "button",
      "ctrlKey",
      "boundResizerPointermove",
      "savedDraggable",
      "pointerMoveOptions",
      "passive",
      "capture",
      "savedX",
      "savedY",
      "savedWidth",
      "savedHeight",
      "savedParentCursor",
      "cursor",
      "savedCursor",
      "pointerUpCallback",
      "newX",
      "newY",
      "newWidth",
      "newHeight",
      "cmd",
      "undo",
      "mustExec",
      "minWidth",
      "MIN_SIZE",
      "minHeight",
      "rotationMatrix",
      "transf",
      "invRotationMatrix",
      "invTransf",
      "getPoint",
      "getOpposite",
      "isDiagonal",
      "isHorizontal",
      "w",
      "h",
      "point",
      "oppositePoint",
      "transfOppositePoint",
      "oppositeX",
      "oppositeY",
      "ratioX",
      "ratioY",
      "deltaX",
      "deltaY",
      "movementX",
      "movementY",
      "oldDiag",
      "hypot",
      "addAltTextButton",
      "altText",
      "className",
      "setAttribute",
      "tabIndex",
      "stopPropagation",
      "editAltText",
      "PERCENT",
      "setAltTextButtonState",
      "tooltip",
      "DELAY_TO_SHOW_TOOLTIP",
      "_eventBus",
      "dispatch",
      "subtype",
      "action",
      "innerText",
      "parentNode",
      "getClientDimensions",
      "altTextData",
      "decorative",
      "maxWidth",
      "maxHeight",
      "pointerdown",
      "isSelected",
      "setUpDragSession",
      "pointerMoveCallback",
      "e",
      "dragSelectedEditors",
      "endDragSession",
      "shiftKey",
      "metaKey",
      "toggleSelected",
      "moveEditorInDOM",
      "_setParentAndPosition",
      "changeParent",
      "getRect",
      "shiftX",
      "shiftY",
      "getRectInCurrentCoords",
      "onceAdded",
      "enableEditMode",
      "disableEditMode",
      "isInEditMode",
      "shouldGetKeyboardEvents",
      "needsToBeRebuilt",
      "rebuild",
      "isForCopying",
      "deserialize",
      "removeEditor",
      "isResizable",
      "makeResizable",
      "select",
      "unselect",
      "contains",
      "activeElement",
      "focus",
      "updateParams",
      "disableEditing",
      "hidden",
      "enableEditing",
      "enterInEditMode",
      "contentDiv",
      "isEditing",
      "setActiveEditor",
      "setAspectRatio",
      "aspectRatio",
      "bindEvents",
      "element",
      "names",
      "opacityToHex",
      "opacity",
      "IdManager",
      "getId",
      "ImageManager",
      "_isSVGFittingCanvas",
      "svg",
      "ctx",
      "getContext",
      "image",
      "Image",
      "drawImage",
      "getImageData",
      "rawData",
      "refCounter",
      "isSvg",
      "response",
      "ok",
      "statusText",
      "blob",
      "file",
      "mustRemoveAspectRatioPromise",
      "fileReader",
      "FileReader",
      "imageElement",
      "imagePromise",
      "onload",
      "svgUrl",
      "result",
      "onerror",
      "readAsDataURL",
      "createImageBitmap",
      "getFromFile",
      "lastModified",
      "getFromUrl",
      "getFromId",
      "getSvgUrl",
      "deleteId",
      "isValidId",
      "CommandManager",
      "maxSize",
      "overwriteIfSameType",
      "keepUndo",
      "next",
      "splice",
      "redo",
      "hasSomethingToUndo",
      "hasSomethingToRedo",
      "KeyboardManager",
      "callbacks",
      "allKeys",
      "isMacKey",
      "split",
      "at",
      "altKey",
      "exec",
      "self",
      "bubbles",
      "args",
      "checker",
      "_colorsMapping",
      "_colors",
      "colors",
      "convert",
      "color",
      "rgb",
      "matchMedia",
      "matches",
      "RGB",
      "every",
      "AnnotationEditorUIManager",
      "blur",
      "copy",
      "cut",
      "keydown",
      "onEditingAction",
      "onPageChanging",
      "onScaleChanging",
      "onRotationChanging",
      "hasSelectedEditor",
      "TRANSLATE_SMALL",
      "TRANSLATE_BIG",
      "_keyboardManager",
      "proto",
      "arrowChecker",
      "hasSomethingToControl",
      "small",
      "big",
      "selectAll",
      "unselectAll",
      "translateSelectedEditors",
      "container",
      "viewer",
      "altTextManager",
      "eventBus",
      "pdfDocument",
      "_on",
      "PixelsPerInch",
      "PDF_TO_CSS_UNITS",
      "_off",
      "layer",
      "hcmFilter",
      "addHCMFilter",
      "foreground",
      "direction",
      "focusMainContainer",
      "findParent",
      "layerX",
      "layerY",
      "disableUserSelect",
      "addShouldRescale",
      "removeShouldRescale",
      "pagesRotation",
      "hasSelection",
      "lastEditor",
      "lastActiveElement",
      "once",
      "addEditListeners",
      "removeEditListeners",
      "editors",
      "clipboardData",
      "setData",
      "parse",
      "isArray",
      "newEditors",
      "deserializedEditor",
      "getActive",
      "hasChanged",
      "some",
      "setEditingState",
      "registerEditorTypes",
      "types",
      "getLayer",
      "currentPageIndex",
      "addLayer",
      "enable",
      "disable",
      "removeLayer",
      "updateMode",
      "mode",
      "editId",
      "updateToolbar",
      "addNewEditor",
      "enableWaiting",
      "mustWait",
      "disableClick",
      "enableClick",
      "getEditors",
      "getEditor",
      "addEditor",
      "addDeletedAnnotationElement",
      "isDeletedAnnotationElement",
      "removeDeletedAnnotationElement",
      "addOrRebuild",
      "ed",
      "noCommit",
      "totalX",
      "totalY",
      "TIME_TO_WAIT",
      "savedPageIndex",
      "newPageIndex",
      "mustBeAddedInUndoStack",
      "move",
      "isActive",
      "getMode",
      "imageManager",
      "SVG_NS",
      "PDF",
      "BaseFilterFactory",
      "cache",
      "defs",
      "visibility",
      "contain",
      "position",
      "createElementNS",
      "body",
      "addFilter",
      "maps",
      "tableR",
      "tableG",
      "tableB",
      "mapR",
      "mapG",
      "mapB",
      "bufferR",
      "bufferG",
      "bufferB",
      "filter",
      "fgColor",
      "bgColor",
      "fgRGB",
      "bgRGB",
      "table",
      "getSteps",
      "start",
      "arr",
      "addHighlightHCMFilter",
      "newFgColor",
      "newBgColor",
      "fgGray",
      "bgGray",
      "newFgRGB",
      "newBgRGB",
      "fg",
      "bg",
      "step",
      "newStart",
      "newStep",
      "prev",
      "k",
      "keepHCM",
      "feColorMatrix",
      "feComponentTransfer",
      "func",
      "feFunc",
      "rTable",
      "gTable",
      "bTable",
      "getRGB",
      "BaseCanvasFactory",
      "_document",
      "_createCanvas",
      "fetchData",
      "asTypedArray",
      "isValidFetchUrl",
      "arrayBuffer",
      "text",
      "request",
      "XMLHttpRequest",
      "open",
      "responseType",
      "onreadystatechange",
      "readyState",
      "DONE",
      "responseText",
      "BaseCMapReaderFactory",
      "_fetchData",
      "compressionType",
      "cMapData",
      "BaseStandardFontDataFactory",
      "DOMSVGFactory",
      "BaseSVGFactory",
      "_createSVG",
      "centerX",
      "centerY",
      "rotateA",
      "rotateB",
      "rotateC",
      "rotateD",
      "offsetCanvasX",
      "offsetCanvasY",
      "convertToViewportPoint",
      "convertToViewportRectangle",
      "topLeft",
      "bottomRight",
      "convertToPdfPoint",
      "isDataScheme",
      "trim",
      "substring",
      "toLowerCase",
      "isPdfFile",
      "test",
      "getFilenameFromUrl",
      "onlyStripPath",
      "lastIndexOf",
      "getPdfFilenameFromUrl",
      "defaultFilename",
      "reURI",
      "reFilename",
      "splitURI",
      "suggestedFilename",
      "started",
      "times",
      "now",
      "outBuf",
      "longest",
      "padEnd",
      "loadScript",
      "removeScriptElement",
      "script",
      "head",
      "deprecated",
      "pdfDateStringRegex",
      "PDFDateString",
      "toDateObject",
      "input",
      "RegExp",
      "year",
      "parseInt",
      "month",
      "day",
      "hour",
      "minute",
      "universalTimeRelation",
      "offsetHour",
      "offsetMinute",
      "UTC",
      "getXfaPageViewport",
      "xfaPage",
      "attributes",
      "colorRGB",
      "getColorValues",
      "span",
      "computedColor",
      "getCurrentTransform",
      "f",
      "getTransform",
      "getCurrentTransformInverse",
      "invertSelf",
      "setLayerDimensions",
      "mustFlip",
      "mustRotate",
      "useRound",
      "widthStr",
      "heightStr",
      "reset",
      "canvasAndContext",
      "skipDimensions",
      "SEED",
      "MASK_HIGH",
      "MASK_LOW",
      "seed",
      "h1",
      "h2",
      "blockCounts",
      "tailLength",
      "dataUint32",
      "k1",
      "k2",
      "C1",
      "C2",
      "C1_LOW",
      "C2_LOW",
      "nativeFontFaces",
      "loadingRequests",
      "loadTestFontId",
      "addNativeFontFace",
      "nativeFontFace",
      "fonts",
      "removeNativeFontFace",
      "insertRule",
      "rule",
      "getElementsByTagName",
      "styleSheet",
      "sheet",
      "cssRules",
      "loadSystemFont",
      "loadedName",
      "isFontLoadingAPISupported",
      "fontFace",
      "FontFace",
      "load",
      "baseFontName",
      "attached",
      "missingFile",
      "systemFontInfo",
      "createNativeFontFace",
      "family",
      "createFontFaceRule",
      "isSyncFontLoadingSupported",
      "_queueLoadingCallback",
      "_prepareFontLoadEvent",
      "hasFonts",
      "supported",
      "userAgent",
      "completeRequest",
      "otherRequest",
      "shift",
      "_loadTestFont",
      "testFont",
      "atob",
      "int32",
      "offset",
      "spliceString",
      "s",
      "insert",
      "chunk1",
      "chunk2",
      "called",
      "isFontReady",
      "fillText",
      "COMMENT_OFFSET",
      "CFF_CHECKSUM_OFFSET",
      "XXXX_VALUE",
      "checksum",
      "btoa",
      "fontFamily",
      "translatedData",
      "compiledGlyphs",
      "_inspectFont",
      "cssFontInfo",
      "css",
      "weight",
      "fontWeight",
      "italicAngle",
      "mimetype",
      "getPathGenerator",
      "character",
      "cmds",
      "jsBuf",
      "current",
      "fs",
      "readFile",
      "Canvas",
      "createCanvas",
      "MIN_FONT_SIZE",
      "MAX_FONT_SIZE",
      "MAX_GROUP_SIZE",
      "EXECUTION_TIME",
      "EXECUTION_STEPS",
      "MAX_SIZE_TO_COMPILE",
      "FULL_CHUNK_HEIGHT",
      "mirrorContextOperations",
      "destCtx",
      "_removeMirroring",
      "__originalSave",
      "__originalRestore",
      "__originalRotate",
      "__originalScale",
      "__originalTranslate",
      "__originalTransform",
      "__originalSetTransform",
      "setTransform",
      "__originalResetTransform",
      "resetTransform",
      "__originalClip",
      "__originalMoveTo",
      "__originalLineTo",
      "__originalBezierCurveTo",
      "bezierCurveTo",
      "__originalRect",
      "__originalClosePath",
      "__originalBeginPath",
      "beginPath",
      "ctxSave",
      "ctxRestore",
      "ctxTranslate",
      "ctxScale",
      "ctxTransform",
      "ctxSetTransform",
      "ctxResetTransform",
      "ctxRotate",
      "cp1x",
      "cp1y",
      "cp2x",
      "cp2y",
      "CachedCanvases",
      "getCanvas",
      "canvasEntry",
      "drawImageAtIntegerCoords",
      "srcImg",
      "srcX",
      "srcY",
      "srcW",
      "srcH",
      "destX",
      "destY",
      "destW",
      "destH",
      "tlX",
      "rTlX",
      "tlY",
      "rTlY",
      "brX",
      "rWidth",
      "brY",
      "rHeight",
      "sign",
      "scaleX",
      "scaleY",
      "compileType3Glyph",
      "imgData",
      "POINT_TO_PROCESS_LIMIT",
      "POINT_TYPES",
      "width1",
      "points",
      "j0",
      "lineSize",
      "pos",
      "elem",
      "mask",
      "count",
      "sum",
      "steps",
      "Int32Array",
      "path",
      "Path2D",
      "p0",
      "pp",
      "drawOutline",
      "CanvasExtraState",
      "alphaIsShape",
      "fontSize",
      "fontSizeScale",
      "textMatrix",
      "textMatrixScale",
      "fontMatrix",
      "leading",
      "lineX",
      "lineY",
      "charSpacing",
      "wordSpacing",
      "textHScale",
      "textRenderingMode",
      "textRise",
      "fillColor",
      "strokeColor",
      "patternFill",
      "fillAlpha",
      "strokeAlpha",
      "lineWidth",
      "activeSMask",
      "transferMaps",
      "startNewPathAndClipBox",
      "clipBox",
      "setCurrentPoint",
      "updatePathMinMax",
      "minX",
      "minY",
      "maxX",
      "maxY",
      "updateRectMinMax",
      "updateScalingPathMinMax",
      "updateCurvePathMinMax",
      "box",
      "getPathBoundingBox",
      "pathType",
      "PathType",
      "xStrokePad",
      "yStrokePad",
      "updateClipFromPath",
      "isEmptyClip",
      "Infinity",
      "getClippedPathBoundingBox",
      "putBinaryImageData",
      "ImageData",
      "putImageData",
      "partialChunkHeight",
      "fullChunks",
      "totalChunks",
      "chunkImgData",
      "createImageData",
      "srcPos",
      "destPos",
      "dest",
      "thisChunkHeight",
      "elemsInThisChunk",
      "kind",
      "srcLength",
      "dest32",
      "dest32DataLength",
      "fullSrcDiff",
      "white",
      "black",
      "srcDiff",
      "kEnd",
      "kEndUnrolled",
      "srcByte",
      "putBinaryImageMask",
      "nonBlackColor",
      "copyCtxState",
      "sourceCtx",
      "properties",
      "property",
      "setLineDash",
      "getLineDash",
      "lineDashOffset",
      "resetCtxToDefault",
      "strokeStyle",
      "fillStyle",
      "fillRule",
      "globalAlpha",
      "lineCap",
      "lineJoin",
      "miterLimit",
      "globalCompositeOperation",
      "composeSMaskBackdrop",
      "r0",
      "g0",
      "b0",
      "alpha",
      "alpha_",
      "composeSMaskAlpha",
      "maskData",
      "layerData",
      "transferMap",
      "composeSMaskLuminosity",
      "genericComposeSMask",
      "maskCtx",
      "layerCtx",
      "backdrop",
      "layerOffsetX",
      "layerOffsetY",
      "maskOffsetX",
      "maskOffsetY",
      "hasBackdrop",
      "composeFn",
      "PIXELS_TO_PROCESS",
      "chunkSize",
      "ceil",
      "row",
      "chunkHeight",
      "composeSMask",
      "smask",
      "layerBox",
      "layerWidth",
      "layerHeight",
      "getImageSmoothingEnabled",
      "interpolate",
      "fround",
      "actualScale",
      "devicePixelRatio",
      "LINE_CAP_STYLES",
      "LINE_JOIN_STYLES",
      "NORMAL_CLIP",
      "EO_CLIP",
      "canvasCtx",
      "markedContentStack",
      "stateStack",
      "pendingClip",
      "pendingEOFill",
      "res",
      "xobjs",
      "groupStack",
      "processingType3",
      "baseTransform",
      "baseTransformStack",
      "groupLevel",
      "smaskStack",
      "smaskCounter",
      "tempSMask",
      "suspendedCtx",
      "contentVisible",
      "cachedCanvases",
      "cachedPatterns",
      "viewportScale",
      "outputScaleX",
      "outputScaleY",
      "_cachedScaleForStroking",
      "_cachedGetSinglePixelWidth",
      "_cachedBitmapsMap",
      "getObject",
      "fallback",
      "savedFillStyle",
      "fillRect",
      "transparentCanvas",
      "compositeCtx",
      "executionStartIdx",
      "continueCallback",
      "argsArrayLen",
      "chunkOperations",
      "endTime",
      "fnId",
      "breakIt",
      "depObjId",
      "objsPool",
      "inSMaskMode",
      "HTMLCanvasElement",
      "hcmFilterId",
      "savedFilter",
      "_scaleImage",
      "img",
      "widthScale",
      "heightScale",
      "paintWidth",
      "paintHeight",
      "tmpCanvasId",
      "tmpCanvas",
      "tmpCtx",
      "clearRect",
      "_createMaskCanvas",
      "isPatternFill",
      "currentTransform",
      "scaled",
      "maskCanvas",
      "mainKey",
      "cachedImage",
      "maskToCanvas",
      "cord1",
      "cord2",
      "drawnWidth",
      "drawnHeight",
      "fillCanvas",
      "fillCtx",
      "imageSmoothingEnabled",
      "inverse",
      "getPattern",
      "limit",
      "dashArray",
      "dashPhase",
      "flatness",
      "states",
      "checkSMaskState",
      "beginSMaskMode",
      "endSMaskMode",
      "cacheId",
      "scratchCanvas",
      "compose",
      "dirtyBox",
      "old",
      "pop",
      "ops",
      "startX",
      "startY",
      "isScalingMatrix",
      "minMaxForBezier",
      "xw",
      "yh",
      "consumePath",
      "rescaleAndStroke",
      "needRestore",
      "paths",
      "pendingTextPaths",
      "addToPath",
      "spacing",
      "fontRefName",
      "fontObj",
      "fontDirection",
      "isType3Font",
      "typeface",
      "fallbackName",
      "bold",
      "italic",
      "browserFontSize",
      "rise",
      "paintChar",
      "patternTransform",
      "fillStrokeMode",
      "isAddToPathSet",
      "strokeText",
      "isFontSubpixelAAEnabled",
      "glyphs",
      "showType3Text",
      "glyphsLength",
      "vertical",
      "spacingDir",
      "defaultVMetrics",
      "widthAdvanceScale",
      "simpleFillText",
      "pattern",
      "getSinglePixelWidth",
      "isInvalidPDFjsFont",
      "chars",
      "glyph",
      "unicode",
      "restoreNeeded",
      "isSpace",
      "fontChar",
      "accent",
      "scaledX",
      "scaledY",
      "vmetric",
      "vx",
      "vy",
      "remeasure",
      "measuredWidth",
      "measureText",
      "characterScaleX",
      "isInFont",
      "scaledAccentX",
      "scaledAccentY",
      "charWidth",
      "isTextInvisible",
      "spacingLength",
      "charProcOperatorList",
      "operatorListId",
      "transformed",
      "xWidth",
      "yWidth",
      "llx",
      "lly",
      "urx",
      "ury",
      "getColorN_Pattern",
      "IR",
      "canvasGraphicsFactory",
      "createCanvasGraphics",
      "TilingPattern",
      "_getPattern",
      "arguments",
      "matrix",
      "SHADING",
      "inv",
      "bbox",
      "group",
      "currentCtx",
      "isolated",
      "knockout",
      "canvasBounds",
      "groupCtx",
      "startTransformInverse",
      "currentMtx",
      "hasOwnCanvas",
      "canvasWidth",
      "canvasHeight",
      "annotationCanvas",
      "savedCtx",
      "compiled",
      "skewX",
      "skewY",
      "positions",
      "trans",
      "images",
      "applyTransferMapsToCanvas",
      "applyTransferMapsToBitmap",
      "imgToPaint",
      "HTMLElement",
      "tag",
      "visible",
      "isVisible",
      "isContentVisible",
      "absDet",
      "normX",
      "normY",
      "getScaleForStroking",
      "scaledLineWidth",
      "scaledXLineWidth",
      "scaledYLineWidth",
      "baseArea",
      "saveRestore",
      "dashes",
      "op",
      "applyBoundingBox",
      "region",
      "BaseShadingPattern",
      "RadialAxialShadingPattern",
      "_bbox",
      "_colorStops",
      "_p0",
      "_p1",
      "_r0",
      "_r1",
      "_createGradient",
      "grad",
      "createLinearGradient",
      "createRadialGradient",
      "colorStop",
      "addColorStop",
      "owner",
      "ownerBBox",
      "createPattern",
      "domMatrix",
      "DOMMatrix",
      "drawTriangle",
      "c1",
      "c2",
      "c3",
      "coords",
      "rowSize",
      "tmp",
      "c1r",
      "c1g",
      "c1b",
      "c2r",
      "c2g",
      "c2b",
      "c3r",
      "c3g",
      "c3b",
      "xa",
      "car",
      "cag",
      "cab",
      "xb",
      "cbr",
      "cbg",
      "cbb",
      "x1_",
      "x2_",
      "drawFigure",
      "figure",
      "ps",
      "cs",
      "verticesPerRow",
      "rows",
      "cols",
      "q",
      "MeshShadingPattern",
      "_coords",
      "_figures",
      "_bounds",
      "_background",
      "_createMeshCanvas",
      "combinedScale",
      "backgroundColor",
      "EXPECTED_SCALE",
      "MAX_PATTERN_SIZE",
      "BORDER_SIZE",
      "boundsWidth",
      "boundsHeight",
      "paddedWidth",
      "paddedHeight",
      "matrixScale",
      "temporaryPatternCanvas",
      "DummyShadingPattern",
      "getShadingPattern",
      "PaintType",
      "COLORED",
      "UNCOLORED",
      "xstep",
      "ystep",
      "paintType",
      "tilingType",
      "createPatternCanvas",
      "curMatrixScale",
      "dimx",
      "getSizeAndScale",
      "dimy",
      "graphics",
      "setFillAndStrokeStyleToContext",
      "adjustedX0",
      "adjustedY0",
      "adjustedX1",
      "adjustedY1",
      "clipBbox",
      "realOutputSize",
      "bboxWidth",
      "bboxHeight",
      "cssColor",
      "convertToRGBA",
      "convertBlackAndWhiteToRGBA",
      "convertRGBToRGBA",
      "inverseDecode",
      "zeroMapping",
      "oneMapping",
      "widthInSource",
      "widthRemainder",
      "len32",
      "src32",
      "s1",
      "s2",
      "s3",
      "jj",
      "grayToRGBA",
      "CallbackKind",
      "UNKNOWN",
      "DATA",
      "ERROR",
      "StreamKind",
      "CANCEL",
      "CANCEL_COMPLETE",
      "CLOSE",
      "ENQUEUE",
      "PULL",
      "PULL_COMPLETE",
      "START_COMPLETE",
      "wrapReason",
      "sourceName",
      "targetName",
      "comObj",
      "callbackId",
      "streamId",
      "streamSinks",
      "streamControllers",
      "callbackCapabilities",
      "actionHandler",
      "_onComObjOnMessage",
      "stream",
      "cbSourceName",
      "cbTargetName",
      "actionName",
      "handler",
      "ah",
      "queueingStrategy",
      "ReadableStream",
      "controller",
      "startCapability",
      "startCall",
      "pullCall",
      "cancelCall",
      "isClosed",
      "desiredSize",
      "pull",
      "pullCapability",
      "cancelCapability",
      "streamSink",
      "isCancelled",
      "lastDesiredSize",
      "sinkCapability",
      "streamController",
      "deleteStreamController",
      "allSettled",
      "parsedData",
      "getRaw",
      "INTERNAL",
      "Symbol",
      "OptionalContentGroup",
      "_setVisible",
      "internal",
      "creator",
      "order",
      "groups",
      "baseState",
      "off",
      "getHash",
      "array",
      "operator",
      "state",
      "expression",
      "policy",
      "ids",
      "setVisibility",
      "hasInitialVisibility",
      "getOrder",
      "getGroups",
      "getGroup",
      "pdfDataRangeTransport",
      "_queuedChunks",
      "_progressiveDone",
      "_contentDispositionFilename",
      "_pdfDataRangeTransport",
      "_isStreamingSupported",
      "_isRangeSupported",
      "_contentLength",
      "_fullRequestReader",
      "_rangeReaders",
      "_onReceiveData",
      "_onProgress",
      "_onProgressiveDone",
      "_enqueue",
      "found",
      "_begin",
      "_progressiveDataLength",
      "_loaded",
      "_removeRangeReader",
      "indexOf",
      "queuedChunks",
      "PDFDataTransportStreamReader",
      "PDFDataTransportStreamRangeReader",
      "_stream",
      "_done",
      "_filename",
      "_requests",
      "_headersReady",
      "requestCapability",
      "_end",
      "_queuedChunk",
      "requestsCapability",
      "createFetchOptions",
      "headers",
      "abortController",
      "method",
      "signal",
      "credentials",
      "redirect",
      "createHeaders",
      "Headers",
      "getArrayBuffer",
      "isHttp",
      "_rangeRequestReaders",
      "PDFFetchStreamReader",
      "PDFFetchStreamRangeReader",
      "_reader",
      "_withCredentials",
      "_headersCapability",
      "_disableRange",
      "_rangeChunkSize",
      "_abortController",
      "AbortController",
      "_headers",
      "getResponseHeader",
      "allowRangeRequests",
      "suggestedLength",
      "_readCapability",
      "validateRangeRequestCapabilities",
      "returnValues",
      "contentEncoding",
      "extractFilenameFromHeader",
      "contentDisposition",
      "createResponseStatusError",
      "validateResponseStatus",
      "getFilenameFromContentDispositionHeader",
      "needsEncodingFixup",
      "toParamRegExp",
      "rfc2616unquote",
      "rfc5987decode",
      "rfc2047decode",
      "fixupEncoding",
      "rfc2231getparam",
      "attributePattern",
      "flags",
      "textdecode",
      "contentDispositionStr",
      "iter",
      "quot",
      "part",
      "parts",
      "quotindex",
      "extvalue",
      "encodingend",
      "langvalue",
      "charset",
      "hex",
      "OK_RESPONSE",
      "PARTIAL_CONTENT_RESPONSE",
      "xhr",
      "NetworkManager",
      "currXhrId",
      "pendingRequests",
      "requestRange",
      "listeners",
      "requestFull",
      "xhrId",
      "pendingRequest",
      "setRequestHeader",
      "expectedStatus",
      "onError",
      "onStateChange",
      "onprogress",
      "onHeadersReceived",
      "onDone",
      "xhrStatus",
      "ok_response_on_range_request",
      "rangeHeader",
      "getRequestXhr",
      "isPendingRequest",
      "abortRequest",
      "_source",
      "_manager",
      "_onRangeRequestReaderClosed",
      "PDFNetworkStreamFullRequestReader",
      "PDFNetworkStreamRangeRequestReader",
      "onClosed",
      "manager",
      "_onHeadersReceived",
      "_onDone",
      "_onError",
      "_url",
      "_fullRequestId",
      "_headersReceivedCapability",
      "_cachedChunks",
      "_storedError",
      "fullRequestXhrId",
      "fullRequestXhr",
      "lengthComputable",
      "_requestId",
      "_close",
      "fileUriRegex",
      "parseUrl",
      "sourceUrl",
      "parsedUrl",
      "host",
      "isFsUrl",
      "PDFNodeStreamFsFullReader",
      "PDFNodeStreamFullReader",
      "PDFNodeStreamFsRangeReader",
      "PDFNodeStreamRangeReader",
      "BaseFullReader",
      "_readableStream",
      "_error",
      "_setReadableStream",
      "BaseRangeReader",
      "createRequestOptions",
      "auth",
      "hostname",
      "handleResponse",
      "statusCode",
      "_request",
      "http",
      "https",
      "_httpHeaders",
      "Range",
      "lstat",
      "stat",
      "createReadStream",
      "SVG_DEFAULTS",
      "fontStyle",
      "XML_NS",
      "XLINK_NS",
      "contentType",
      "forceDataSchema",
      "digits",
      "b1",
      "b2",
      "b3",
      "d1",
      "d2",
      "d3",
      "d4",
      "convertImgDataToPng",
      "PNG_HEADER",
      "CHUNK_WRAPPER_SIZE",
      "crcTable",
      "crc32",
      "crc",
      "writePngChunk",
      "len",
      "adler32",
      "deflateSync",
      "literals",
      "deflateSyncUncompressed",
      "node",
      "from",
      "output",
      "maxBlockLength",
      "deflateBlocks",
      "idat",
      "pi",
      "adler",
      "encode",
      "isMask",
      "bitDepth",
      "colorType",
      "offsetLiterals",
      "offsetBytes",
      "ihdr",
      "pngLength",
      "SVGExtraState",
      "dependencies",
      "activeClipUrl",
      "clipGroup",
      "maskId",
      "opListToTree",
      "opList",
      "opTree",
      "opListElement",
      "fn",
      "pf",
      "pm",
      "acos",
      "clipCount",
      "maskCount",
      "shadingCount",
      "SVGGraphics",
      "svgFactory",
      "transformMatrix",
      "transformStack",
      "extraStack",
      "embedFonts",
      "embeddedFonts",
      "cssStyle",
      "_operatorIdMapping",
      "tgrp",
      "executeOpTree",
      "loadDependencies",
      "getSVG",
      "svgElement",
      "convertOpList",
      "operatorIdMapping",
      "opTreeElement",
      "lineMatrix",
      "xcoords",
      "ycoords",
      "tspan",
      "setAttributeNS",
      "txtElement",
      "txtgrp",
      "lineWidthScale",
      "_setStrokeAttributes",
      "_ensureTransformGroup",
      "addFontStyle",
      "hasChildNodes",
      "setStrokeAlpha",
      "setFillAlpha",
      "_makeColorN_Pattern",
      "_makeShadingPattern",
      "_makeTilingPattern",
      "tilingId",
      "tx0",
      "ty0",
      "tx1",
      "ty1",
      "xscale",
      "yscale",
      "txstep",
      "tystep",
      "tiling",
      "childNodes",
      "shadingId",
      "colorStops",
      "gradient",
      "point0",
      "point1",
      "focalPoint",
      "circlePoint",
      "focalRadius",
      "circleRadius",
      "stop",
      "getAttributeNS",
      "clipId",
      "clipPath",
      "clipElement",
      "cloneNode",
      "imgSrc",
      "cliprect",
      "imgEl",
      "definitions",
      "rootGroup",
      "_ensureClipGroup",
      "walk",
      "shouldBuildText",
      "child",
      "MAX_TEXT_DIVS_TO_RENDER",
      "DEFAULT_FONT_SIZE",
      "DEFAULT_FONT_ASCENT",
      "ascentCache",
      "getCtx",
      "getAscent",
      "cachedAscent",
      "metrics",
      "ascent",
      "fontBoundingBoxAscent",
      "descent",
      "fontBoundingBoxDescent",
      "ratio",
      "pixels",
      "appendText",
      "geom",
      "textDiv",
      "textDivProperties",
      "hasText",
      "hasEOL",
      "_textDivs",
      "_transform",
      "atan2",
      "fontName",
      "fontHeight",
      "fontAscent",
      "_isOffscreenCanvasSupported",
      "sin",
      "cos",
      "scaleFactorStr",
      "divStyle",
      "_container",
      "_rootContainer",
      "_pageWidth",
      "_pageHeight",
      "dir",
      "_fontInspectorEnabled",
      "dataset",
      "shouldScaleText",
      "absScaleX",
      "absScaleY",
      "_textDivProperties",
      "_isReadableStream",
      "_layoutText",
      "layout",
      "prevFontSize",
      "prevFontFamily",
      "_canceled",
      "textDivs",
      "textDivsLength",
      "TextLayerRenderTask",
      "textContentSource",
      "textContentItemsStr",
      "_textContentSource",
      "_textContentItemsStr",
      "_layoutTextParams",
      "_processItems",
      "styleCache",
      "br",
      "_render",
      "renderTextLayer",
      "textContentStream",
      "scaleFactor",
      "updateTextLayer",
      "mustRescale",
      "AnnotationEditorLayer",
      "pointerup",
      "_initialized",
      "accessibilityManager",
      "annotationLayer",
      "editorTypes",
      "FreeTextEditor",
      "InkEditor",
      "StampEditor",
      "addInkEditorIfNeeded",
      "isCommitting",
      "pointerEvents",
      "annotationElementIds",
      "editables",
      "getEditableAnnotations",
      "editable",
      "hide",
      "hiddenAnnotationIds",
      "getEditableAnnotation",
      "show",
      "currentActive",
      "attach",
      "detach",
      "removePointerInTextLayer",
      "moveElementInDOM",
      "addUndoableEditor",
      "pasteEditor",
      "annotationType",
      "annotationEditorType",
      "innerWidth",
      "innerHeight",
      "editorDivBlur",
      "editorDivFocus",
      "editorDivInput",
      "editorDivKeydown",
      "_freeTextDefaultContent",
      "_internalPadding",
      "_defaultColor",
      "_defaultFontSize",
      "_translateEmpty",
      "setFontsize",
      "editorDiv",
      "savedFontsize",
      "savedColor",
      "overlayDiv",
      "contentEditable",
      "removeAttribute",
      "preventScroll",
      "divs",
      "savedDisplay",
      "display",
      "savedText",
      "newText",
      "trimEnd",
      "setText",
      "dblclick",
      "baseX",
      "baseY",
      "posX",
      "posY",
      "replaceChildren",
      "line",
      "createTextNode",
      "FreeTextAnnotationElement",
      "defaultAppearanceData",
      "fontColor",
      "textPosition",
      "padding",
      "structTreeParentId",
      "DEFAULT_TAB_INDEX",
      "GetElementsByNameSet",
      "getRectDims",
      "AnnotationElementFactory",
      "LinkAnnotationElement",
      "TextAnnotationElement",
      "fieldType",
      "TextWidgetAnnotationElement",
      "radioButton",
      "RadioButtonWidgetAnnotationElement",
      "checkBox",
      "CheckboxWidgetAnnotationElement",
      "PushButtonWidgetAnnotationElement",
      "ChoiceWidgetAnnotationElement",
      "SignatureWidgetAnnotationElement",
      "WidgetAnnotationElement",
      "PopupAnnotationElement",
      "LineAnnotationElement",
      "SquareAnnotationElement",
      "CircleAnnotationElement",
      "PolylineAnnotationElement",
      "CaretAnnotationElement",
      "InkAnnotationElement",
      "PolygonAnnotationElement",
      "HighlightAnnotationElement",
      "UnderlineAnnotationElement",
      "SquigglyAnnotationElement",
      "StrikeOutAnnotationElement",
      "StampAnnotationElement",
      "FileAttachmentAnnotationElement",
      "AnnotationElement",
      "isRenderable",
      "ignoreBorder",
      "createQuadrilaterals",
      "linkService",
      "downloadManager",
      "imageResourcesPath",
      "renderForms",
      "enableScripting",
      "_fieldObjects",
      "fieldObjects",
      "_createContainer",
      "_createQuadrilaterals",
      "_hasPopupData",
      "titleObj",
      "contentsObj",
      "richText",
      "hasPopupData",
      "popupRef",
      "noRotate",
      "setRotation",
      "borderStyle",
      "borderWidth",
      "horizontalRadius",
      "horizontalCornerRadius",
      "verticalRadius",
      "verticalCornerRadius",
      "radius",
      "borderRadius",
      "borderBottomStyle",
      "borderColor",
      "elementWidth",
      "elementHeight",
      "_commonActions",
      "setColor",
      "jsName",
      "styleName",
      "detail",
      "colorArray",
      "ColorConverters",
      "noView",
      "noPrint",
      "userName",
      "title",
      "readonly",
      "disabled",
      "required",
      "_setRequired",
      "textColor",
      "_dispatchEventFromSandbox",
      "actions",
      "jsEvent",
      "commonActions",
      "_setDefaultPropertiesFromJS",
      "storedData",
      "eventProxy",
      "quadPoints",
      "rectBlX",
      "rectBlY",
      "rectTrX",
      "rectTrY",
      "trX",
      "trY",
      "blX",
      "blY",
      "svgBuffer",
      "rectWidth",
      "rectHeight",
      "backgroundImage",
      "_createPopup",
      "popup",
      "modificationDate",
      "parentRect",
      "elements",
      "_getElementsByName",
      "skipId",
      "fields",
      "fieldObj",
      "exportValues",
      "exportValue",
      "domElement",
      "querySelector",
      "getElementsByName",
      "getAttribute",
      "maybeShow",
      "forceHide",
      "getElementsToTriggerPopup",
      "addHighlightArea",
      "triggers",
      "_editOnDoubleClick",
      "isTooltipOnly",
      "link",
      "isBound",
      "addLinkAttributes",
      "newWindow",
      "_bindNamedAction",
      "attachment",
      "_bindAttachment",
      "setOCGState",
      "_bindLink",
      "Action",
      "_bindJSAction",
      "resetForm",
      "_bindResetFormAction",
      "destination",
      "getDestinationHash",
      "onclick",
      "goToDestination",
      "getAnchorUrl",
      "executeNamedAction",
      "openOrDownloadData",
      "content",
      "executeSetOCGState",
      "otherClickAction",
      "resetFormFields",
      "refs",
      "resetFormRefs",
      "include",
      "allFields",
      "fieldIds",
      "fieldName",
      "field",
      "storage",
      "allIds",
      "dispatchEvent",
      "Event",
      "alt",
      "l10nId",
      "l10nArgs",
      "alternativeText",
      "showElementAndHideCanvas",
      "previousSibling",
      "nodeName",
      "_getKeyModifier",
      "_setEventListener",
      "elementData",
      "baseName",
      "eventName",
      "valueGetter",
      "modifier",
      "focused",
      "_setEventListeners",
      "getter",
      "Blur",
      "Focus",
      "_setBackgroundColor",
      "_setTextStyle",
      "TEXT_ALIGNMENT",
      "computedFontSize",
      "roundToOneDecimal",
      "multiLine",
      "numberOfLines",
      "lineHeight",
      "textAlignment",
      "textAlign",
      "isRequired",
      "hasAppearance",
      "fieldValue",
      "setPropertyOnSiblings",
      "keyInStorage",
      "maxLen",
      "charLimit",
      "fieldFormattedValues",
      "formattedValue",
      "comb",
      "userValue",
      "lastCommittedValue",
      "commitKey",
      "doNotScroll",
      "overflowY",
      "overflowX",
      "readOnly",
      "maxLength",
      "defaultFieldValue",
      "blurListener",
      "scrollLeft",
      "selRange",
      "setSelectionRange",
      "willCommit",
      "selStart",
      "selectionStart",
      "selEnd",
      "selectionEnd",
      "_blurListener",
      "Keystroke",
      "inputType",
      "change",
      "fieldWidth",
      "combWidth",
      "letterSpacing",
      "verticalAlign",
      "checked",
      "checkbox",
      "curChecked",
      "buttonValue",
      "radio",
      "pdfButtonValue",
      "linkElement",
      "lastChild",
      "selectElement",
      "addAnEmptyEntry",
      "combo",
      "multiSelect",
      "multiple",
      "option",
      "selected",
      "optionElement",
      "displayValue",
      "removeEmptyEntry",
      "noneOptionElement",
      "isExport",
      "selectedIndex",
      "selectedValues",
      "getItems",
      "multipleSelection",
      "index",
      "findIndex",
      "selectChild",
      "before",
      "indices",
      "changeEx",
      "keyDown",
      "PopupElement",
      "elementIds",
      "dateObject",
      "toLocaleDateString",
      "toLocaleTimeString",
      "trigger",
      "flatMap",
      "baseColor",
      "outlineColor",
      "BACKGROUND_ENLIGHT",
      "header",
      "localized",
      "XfaLayer",
      "xfaHtml",
      "html",
      "contents",
      "_formatContents",
      "useParentRect",
      "normalizedRect",
      "HORIZONTAL_SPACE_AFTER_ANNOTATION",
      "popupLeft",
      "popupTop",
      "lines",
      "lineSpan",
      "lineCoordinates",
      "square",
      "circle",
      "containerClassName",
      "svgElementName",
      "coordinate",
      "vertices",
      "polyline",
      "inkList",
      "inkLists",
      "AnnotationLayer",
      "NullL10n",
      "contentElement",
      "firstChild",
      "annotations",
      "popupToElements",
      "elementParams",
      "noHTML",
      "isPopupAnnotation",
      "rendered",
      "replaceWith",
      "makeColorComp",
      "scaleAndClamp",
      "CMYK_G",
      "G_CMYK",
      "G_RGB",
      "G_rgb",
      "G_HTML",
      "G",
      "RGB_G",
      "RGB_rgb",
      "RGB_HTML",
      "T_HTML",
      "T_rgb",
      "CMYK_RGB",
      "CMYK_rgb",
      "CMYK_HTML",
      "components",
      "RGB_CMYK",
      "DEFAULT_L10N_STRINGS",
      "of_pages",
      "page_of_pages",
      "document_properties_kb",
      "document_properties_mb",
      "document_properties_date_string",
      "document_properties_page_size_unit_inches",
      "document_properties_page_size_unit_millimeters",
      "document_properties_page_size_orientation_portrait",
      "document_properties_page_size_orientation_landscape",
      "document_properties_page_size_name_a3",
      "document_properties_page_size_name_a4",
      "document_properties_page_size_name_letter",
      "document_properties_page_size_name_legal",
      "document_properties_page_size_dimension_string",
      "document_properties_page_size_dimension_name_string",
      "document_properties_linearized_yes",
      "document_properties_linearized_no",
      "additional_layers",
      "page_landmark",
      "thumb_page_title",
      "thumb_page_canvas",
      "find_reached_top",
      "find_reached_bottom",
      "find_not_found",
      "page_scale_width",
      "page_scale_fit",
      "page_scale_auto",
      "page_scale_actual",
      "page_scale_percent",
      "loading_error",
      "invalid_file_error",
      "missing_file_error",
      "unexpected_response_error",
      "rendering_error",
      "annotation_date_string",
      "printing_not_supported",
      "printing_not_ready",
      "web_fonts_disabled",
      "free_text2_default_content",
      "editor_free_text2_aria_label",
      "editor_ink2_aria_label",
      "editor_ink_canvas_aria_label",
      "editor_alt_text_button_label",
      "editor_alt_text_edit_button_label",
      "editor_alt_text_decorative_tooltip",
      "print_progress_percent",
      "getL10nFallback",
      "formatL10nValue",
      "getLanguage",
      "getDirection",
      "setupStorage",
      "xfaOn",
      "xfaOff",
      "setAttributes",
      "isHTMLAnchorElement",
      "HTMLAnchorElement",
      "dataId",
      "rootHtml",
      "stack",
      "rootDiv",
      "childHtml",
      "xmlns",
      "el",
      "querySelectorAll",
      "canvasPointermove",
      "canvasPointerleave",
      "canvasPointerup",
      "canvasPointerdown",
      "_defaultOpacity",
      "_defaultThickness",
      "thickness",
      "bezierPath2D",
      "allRawPaths",
      "currentPath",
      "translationX",
      "translationY",
      "savedThickness",
      "savedOpacity",
      "disconnect",
      "setDimensions",
      "lastX",
      "lastY",
      "path2D",
      "lastPoint",
      "bezier",
      "xy",
      "lastPoints",
      "xMin",
      "xMax",
      "yMin",
      "yMax",
      "prevX",
      "prevY",
      "bezierPoints",
      "control1",
      "control2",
      "ResizeObserver",
      "contentRect",
      "observe",
      "roundedWidth",
      "roundedHeight",
      "scaleFactorW",
      "scaleFactorH",
      "buildPath2D",
      "toPDFCoordinates",
      "fromPDFCoordinates",
      "p10",
      "p11",
      "p20",
      "p21",
      "p30",
      "p31",
      "p40",
      "p41",
      "firstTime",
      "prevTranslationX",
      "prevTranslationY",
      "unscaledPadding",
      "bitmapUrl",
      "bitmapFile",
      "supportedTypes",
      "supportedTypesStr",
      "getAsFile",
      "fromId",
      "accept",
      "files",
      "click",
      "MAX_RATIO",
      "factor",
      "bitmapWidth",
      "bitmapHeight",
      "prevWidth",
      "prevHeight",
      "offscreen",
      "transferToImageBitmap",
      "toUrl",
      "toDataURL",
      "bitmapId",
      "accessibilityData",
      "stamps",
      "area",
      "prevData",
      "__webpack_modules__",
      "pdfjsVersion",
      "pdfjsBuild"
    ],
    "sources": [
      "webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition",
      "webpack://pdfjs-dist/build/pdf/src/shared/util.js",
      "webpack://pdfjs-dist/build/pdf/src/display/api.js",
      "webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js",
      "webpack://pdfjs-dist/build/pdf/src/display/editor/editor.js",
      "webpack://pdfjs-dist/build/pdf/src/display/editor/tools.js",
      "webpack://pdfjs-dist/build/pdf/src/display/display_utils.js",
      "webpack://pdfjs-dist/build/pdf/src/display/base_factory.js",
      "webpack://pdfjs-dist/build/pdf/src/shared/murmurhash3.js",
      "webpack://pdfjs-dist/build/pdf/src/display/font_loader.js",
      "webpack://pdfjs-dist/build/pdf/src/display/node_utils.js",
      "webpack://pdfjs-dist/build/pdf/src/display/canvas.js",
      "webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js",
      "webpack://pdfjs-dist/build/pdf/src/shared/image_utils.js",
      "webpack://pdfjs-dist/build/pdf/src/display/worker_options.js",
      "webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js",
      "webpack://pdfjs-dist/build/pdf/src/display/metadata.js",
      "webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js",
      "webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js",
      "webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js",
      "webpack://pdfjs-dist/build/pdf/src/display/network_utils.js",
      "webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js",
      "webpack://pdfjs-dist/build/pdf/src/display/network.js",
      "webpack://pdfjs-dist/build/pdf/src/display/node_stream.js",
      "webpack://pdfjs-dist/build/pdf/src/display/svg.js",
      "webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js",
      "webpack://pdfjs-dist/build/pdf/src/display/text_layer.js",
      "webpack://pdfjs-dist/build/pdf/src/display/editor/annotation_editor_layer.js",
      "webpack://pdfjs-dist/build/pdf/src/display/editor/freetext.js",
      "webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js",
      "webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js",
      "webpack://pdfjs-dist/build/pdf/web/l10n_utils.js",
      "webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js",
      "webpack://pdfjs-dist/build/pdf/src/display/editor/ink.js",
      "webpack://pdfjs-dist/build/pdf/src/display/editor/stamp.js",
      "webpack://pdfjs-dist/build/pdf/webpack/bootstrap",
      "webpack://pdfjs-dist/build/pdf/src/pdf.js"
    ],
    "sourcesContent": [
      "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = root.pdfjsLib = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(globalThis, () => {\nreturn ",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  STAMP: 13,\n  INK: 15,\n};\n\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n\n  static get platform() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      typeof navigator === \"undefined\"\n    ) {\n      return shadow(this, \"platform\", { isWin: false, isMac: false });\n    }\n    return shadow(this, \"platform\", {\n      isWin: navigator.platform.includes(\"Win\"),\n      isMac: navigator.platform.includes(\"Mac\"),\n    });\n  }\n\n  static get isCSSRoundSupported() {\n    return shadow(\n      this,\n      \"isCSSRoundSupported\",\n      globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\")\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v?.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\nclass PromiseCapability {\n  #settled = false;\n\n  constructor() {\n    /**\n     * @type {Promise<any>} The Promise object.\n     */\n    this.promise = new Promise((resolve, reject) => {\n      /**\n       * @type {function} Fulfills the Promise.\n       */\n      this.resolve = data => {\n        this.#settled = true;\n        resolve(data);\n      };\n\n      /**\n       * @type {function} Rejects the Promise.\n       */\n      this.reject = reason => {\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n          assert(reason instanceof Error, 'Expected valid \"reason\" argument.');\n        }\n        this.#settled = true;\n        reject(reason);\n      };\n    });\n  }\n\n  /**\n   * @type {boolean} If the Promise has been fulfilled/rejected.\n   */\n  get settled() {\n    return this.#settled;\n  }\n}\n\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    // In order to generate the following regex:\n    //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //    a NFKC which is different of the char.\n    //  - copy and paste all those chars and get the ones where NFKC is\n    //    required.\n    // It appears that most the chars here contain some ligatures.\n    NormalizeRegex =\n      /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n    return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n  });\n}\n\nfunction getUuid() {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\")\n  ) {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (\n    typeof crypto !== \"undefined\" &&\n    typeof crypto?.getRandomValues === \"function\"\n  ) {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\n\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMode,\n  AnnotationPrefix,\n  AnnotationReplyType,\n  AnnotationType,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FormatError,\n  getModificationDate,\n  getUuid,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isNodeJS,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  normalizeUnicode,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isNodeJS,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  AnnotationStorage,\n  PrintAnnotationStorage,\n  SerializableEmpty,\n} from \"./annotation_storage.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n} from \"display-node_utils\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { PDFFetchStream } from \"display-fetch_stream\";\nimport { PDFNetworkStream } from \"display-network\";\nimport { PDFNodeStream } from \"display-node_stream\";\nimport { SVGGraphics } from \"display-svg\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\nconst DELAYED_CLEANUP_TIMEOUT = 5000; // ms\n\nconst DefaultCanvasFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultFilterFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeFilterFactory\n    : DOMFilterFactory;\nconst DefaultStandardFontDataFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef { TypedArray | ArrayBuffer | Array<number> | string } BinaryData\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string | URL} [url] - The URL of the PDF.\n * @property {BinaryData} [data] - Binary PDF data.\n *   Use TypedArrays (Uint8Array) to improve the memory usage. If PDF data is\n *   BASE64-encoded, use `atob()` to convert it to a binary string first.\n *\n *   NOTE: If TypedArrays are used they will generally be transferred to the\n *   worker-thread. This will help reduce main-thread memory usage, however\n *   it will take ownership of the TypedArrays.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not. The default value is `true`.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [isOffscreenCanvasSupported] - Determines if we can use\n *   `OffscreenCanvas` in the worker. Primarily used to improve performance of\n *   image conversion/rendering.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {number} [canvasMaxAreaInBytes] - The integer value is used to\n *   know when an image must be resized (uses `OffscreenCanvas` in the worker).\n *   If it's -1 then a possibly slow algorithm is used to guess the max value.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object} [filterFactory] - A factory instance that will be used\n *   to create SVG filters when rendering some images on the main canvas.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string | URL | TypedArray | ArrayBuffer | DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    if (typeof src === \"string\" || src instanceof URL) {\n      src = { url: src };\n    } else if (isArrayBuffer(src)) {\n      src = { data: src };\n    }\n  }\n  if (typeof src !== \"object\") {\n    throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n  }\n  if (!src.url && !src.data && !src.range) {\n    throw new Error(\n      \"Invalid parameter object: need either .data, .range or .url\"\n    );\n  }\n  const task = new PDFDocumentLoadingTask();\n  const { docId } = task;\n\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport =\n    src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize =\n    Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0\n      ? src.rangeChunkSize\n      : DEFAULT_RANGE_CHUNK_SIZE;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n  // URLs anyway. We want to avoid sending them to the worker-thread, since\n  // they contain the *entire* PDF document and can thus be arbitrarily long.\n  const docBaseUrl =\n    typeof src.docBaseUrl === \"string\" && !isDataScheme(src.docBaseUrl)\n      ? src.docBaseUrl\n      : null;\n  const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n  const standardFontDataUrl =\n    typeof src.standardFontDataUrl === \"string\"\n      ? src.standardFontDataUrl\n      : null;\n  const StandardFontDataFactory =\n    src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize =\n    Number.isInteger(src.maxImageSize) && src.maxImageSize > -1\n      ? src.maxImageSize\n      : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported =\n    typeof src.isOffscreenCanvasSupported === \"boolean\"\n      ? src.isOffscreenCanvasSupported\n      : !isNodeJS;\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes)\n    ? src.canvasMaxAreaInBytes\n    : -1;\n  const disableFontFace =\n    typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n\n  // Parameters whose default values depend on other parameters.\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts =\n    typeof src.useSystemFonts === \"boolean\"\n      ? src.useSystemFonts\n      : !isNodeJS && !disableFontFace;\n  const useWorkerFetch =\n    typeof src.useWorkerFetch === \"boolean\"\n      ? src.useWorkerFetch\n      : (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        (CMapReaderFactory === DOMCMapReaderFactory &&\n          StandardFontDataFactory === DOMStandardFontDataFactory &&\n          cMapUrl &&\n          standardFontDataUrl &&\n          isValidFetchUrl(cMapUrl, document.baseURI) &&\n          isValidFetchUrl(standardFontDataUrl, document.baseURI));\n  const canvasFactory =\n    src.canvasFactory || new DefaultCanvasFactory({ ownerDocument });\n  const filterFactory =\n    src.filterFactory || new DefaultFilterFactory({ docId, ownerDocument });\n\n  // Parameters only intended for development/testing purposes.\n  const styleElement =\n    typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n      ? src.styleElement\n      : null;\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(verbosity);\n\n  // Ensure that the various factories can be initialized, when necessary,\n  // since the user may provide *custom* ones.\n  const transportFactory = {\n    canvasFactory,\n    filterFactory,\n  };\n  if (!useWorkerFetch) {\n    transportFactory.cMapReaderFactory = new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked,\n    });\n    transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl,\n    });\n  }\n\n  if (!worker) {\n    const workerParams = {\n      verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const fetchDocParams = {\n    docId,\n    apiVersion:\n      typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n        ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n        : null,\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      cMapUrl: useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null,\n    },\n  };\n  const transportParams = {\n    ignoreErrors,\n    isEvalSupported,\n    disableFontFace,\n    fontExtraProperties,\n    enableXfa,\n    ownerDocument,\n    disableAutoFetch,\n    pdfBug,\n    styleElement,\n  };\n\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length,\n              initialData: rangeTransport.initialData,\n              progressiveDone: rangeTransport.progressiveDone,\n              contentDispositionFilename:\n                rangeTransport.contentDispositionFilename,\n              disableRange,\n              disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!data) {\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n            throw new Error(\"Not implemented: createPDFNetworkStream\");\n          }\n          const createPDFNetworkStream = params => {\n            if (\n              typeof PDFJSDev !== \"undefined\" &&\n              PDFJSDev.test(\"GENERIC\") &&\n              isNodeJS\n            ) {\n              return new PDFNodeStream(params);\n            }\n            return isValidFetchUrl(params.url)\n              ? new PDFFetchStream(params)\n              : new PDFNetworkStream(params);\n          };\n\n          networkStream = createPDFNetworkStream({\n            url,\n            length,\n            httpHeaders,\n            withCredentials,\n            rangeChunkSize,\n            disableRange,\n            disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            transportParams,\n            transportFactory\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    source,\n    source.data ? [source.data.buffer] : null\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\nfunction getUrlProp(val) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    return null; // The 'url' is unused with `PDFDataRangeTransport`.\n  }\n  if (val instanceof URL) {\n    return val.href;\n  }\n  try {\n    // The full path is required in the 'url' field.\n    return new URL(val, window.location).href;\n  } catch {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      isNodeJS &&\n      typeof val === \"string\"\n    ) {\n      return val; // Use the url as-is in Node.js environments.\n    }\n  }\n  throw new Error(\n    \"Invalid PDF url data: \" +\n      \"either string or URL-object is expected in the url property.\"\n  );\n}\n\nfunction getDataProp(val) {\n  // Converting string or array-like data to Uint8Array.\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"GENERIC\") &&\n    isNodeJS &&\n    typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n    val instanceof Buffer // eslint-disable-line no-undef\n  ) {\n    throw new Error(\n      \"Please provide binary data as `Uint8Array`, rather than `Buffer`.\"\n    );\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    // Use the data as-is when it's already a Uint8Array that completely\n    // \"utilizes\" its underlying ArrayBuffer, to prevent any possible\n    // issues when transferring it to the worker-thread.\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return stringToBytes(val);\n  }\n  if ((typeof val === \"object\" && !isNaN(val?.length)) || isArrayBuffer(val)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\n    \"Invalid PDF binary data: either TypedArray, \" +\n      \"string, or array-like object is expected in the data property.\"\n  );\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = new PromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n *\n * NOTE: The TypedArrays passed to the constructor and relevant methods below\n * will generally be transferred to the worker-thread. This will help reduce\n * main-thread memory usage, however it will take ownership of the TypedArrays.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array|null} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = new PromiseCapability();\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  /**\n   * @param {number} begin\n   * @param {Uint8Array|null} chunk\n   */\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  /**\n   * @param {number} loaded\n   * @param {number|undefined} total\n   */\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  /**\n   * @param {Uint8Array|null} chunk\n   */\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  /**\n   * @param {number} begin\n   * @param {number} end\n   */\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"getJavaScript\", {\n        value: () => {\n          deprecated(\n            \"`PDFDocumentProxy.getJavaScript`, \" +\n              \"please use `PDFDocumentProxy.getJSActions` instead.\"\n          );\n          return this.getJSActions().then(js => {\n            if (!js) {\n              return js;\n            }\n            const jsArr = [];\n            for (const name in js) {\n              jsArr.push(...js[name]);\n            }\n            return jsArr;\n          });\n        },\n      });\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this._transport.getXFADatasets();\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this._transport.getXRefPrevValue();\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this._transport.getAnnotArray(pageIndex);\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree.\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the raw data of the PDF document.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n * @property {boolean} [disableNormalization] - When true the text is *not*\n *   normalized in the worker-thread. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {CanvasRenderingContext2D} canvasContext - A 2D context of a DOM\n *   Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {CanvasGradient | CanvasPattern | string} [background] - Background\n *   to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n *\n *   NOTE: This option may be partially, or completely, ignored when the\n *   `pageColors`-option is used.\n * @property {Object} [pageColors] - Overwrites background and foreground colors\n *   with user defined ones in order to improve readability in high contrast\n *   mode.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  #delayedCleanupTimeout = null;\n\n  #pendingCleanup = false;\n\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this._maybeCleanupAfterRender = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    return this._transport.getAnnotations(\n      this._pageIndex,\n      intentArgs.renderingIntent\n    );\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null,\n  }) {\n    this._stats?.time(\"Overall\");\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render...\n    this.#pendingCleanup = false;\n    // ... and ensure that a delayed cleanup is always aborted.\n    this.#abortDelayedCleanup();\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = new PromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup immediately once rendering has finished.\n      if (this._maybeCleanupAfterRender || intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup(/* delayed = */ !intentPrint);\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      this._stats?.timeEnd(\"Rendering\");\n      this._stats?.timeEnd(\"Overall\");\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.destroyed) {\n          complete();\n          return;\n        }\n        this._stats?.time(\"Rendering\");\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n  } = {}) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      throw new Error(\"Not implemented: getOperatorList\");\n    }\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = new PromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        includeMarkedContent: includeMarkedContent === true,\n        disableNormalization: disableNormalization === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup(/* delayed = */ false);\n\n    if (resetStats && success) {\n      this._stats &&= new StatTimer();\n    }\n    return success;\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @param {boolean} [delayed] - Delay the cleanup, to e.g. improve zooming\n   *   performance in documents with large images.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  #tryCleanup(delayed = false) {\n    this.#abortDelayedCleanup();\n\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    if (delayed) {\n      this.#delayedCleanupTimeout = setTimeout(() => {\n        this.#delayedCleanupTimeout = null;\n        this.#tryCleanup(/* delayed = */ false);\n      }, DELAYED_CLEANUP_TIMEOUT);\n\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n\n  #abortDelayedCleanup() {\n    if (this.#delayedCleanupTimeout) {\n      clearTimeout(this.#delayedCleanupTimeout);\n      this.#delayedCleanupTimeout = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    this._stats?.timeEnd(\"Page Request\");\n\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup(/* delayed = */ true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable,\n  }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n    const { map, transfers } = annotationStorageSerializable;\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage: map,\n      },\n      transfers\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this.#tryCleanup(/* delayed = */ true);\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < /* ms = */ 1000) {\n          // Above, we prevent the total delay from becoming arbitrarily large.\n          delay += reason.extraDelay;\n        }\n\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({ intentState, reason, force: true });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {StatTimer | null} Returns page stats, if enabled; returns `null`\n   *   otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  #listeners = new Set();\n\n  #deferred = Promise.resolve();\n\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(\n        obj,\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n          transfer\n          ? { transfer }\n          : null\n      ),\n    };\n\n    this.#deferred.then(() => {\n      for (const listener of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this.#listeners.add(listener);\n  }\n\n  removeEventListener(name, listener) {\n    this.#listeners.delete(listener);\n  }\n\n  terminate() {\n    this.#listeners.clear();\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Worker} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  // Check if URLs have the same origin. For non-HTTP based URLs, returns false.\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false; // non-HTTP url\n      }\n    } catch {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static #workerPorts;\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = new PromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (\n      (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n      port\n    ) {\n      if (PDFWorker.#workerPorts?.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _initializeFromPort\");\n    }\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n    // Send global setting, e.g. verbosity level.\n    this._messageHandler.send(\"configure\", {\n      verbosity: this.verbosity,\n    });\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let { workerSrc } = PDFWorker;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        const worker =\n          typeof PDFJSDev === \"undefined\" &&\n          !workerSrc.endsWith(\"/build/pdf.worker.js\")\n            ? new Worker(workerSrc, { type: \"module\" })\n            : new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          // Ensure that we can use `postMessage` transfers.\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts?.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: fromPort\");\n    }\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    const cachedPort = this.#workerPorts?.get(params.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\n          \"PDFWorker.fromPort - the worker is being destroyed.\\n\" +\n            \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\"\n        );\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      PDFWorkerUtil.fallbackWorkerSrc !== null\n    ) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\") {\n        const worker = await import(\"pdfjs/pdf.worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #methodPromises = new Map();\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #passwordCapability = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params, factory) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = new PromiseCapability();\n\n    this.setupMessageHandler();\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXFADatasets\", null);\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXRefPrevValue\", null);\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this.messageHandler.sendWithPromise(\"GetAnnotArray\", {\n            pageIndex,\n          });\n        },\n      });\n    }\n  }\n\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let annotationStorageSerializable = SerializableEmpty;\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        const annotationStorage =\n          renderingIntent & RenderingIntentFlag.PRINT &&\n          printAnnotationStorage instanceof PrintAnnotationStorage\n            ? printAnnotationStorage\n            : this.annotationStorage;\n\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n      annotationStorageSerializable,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = new PromiseCapability();\n\n    this.#passwordCapability?.reject(\n      new Error(\"Worker was destroyed during onPassword callback\")\n    );\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n\n      this._networkStream?.cancelAllRequests(\n        new AbortException(\"Worker was terminated.\")\n      );\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = new PromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this.#passwordCapability = new PromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this.#passwordCapability.reject(ex);\n        }\n      } else {\n        this.#passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this.#passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          const inspectFont =\n            params.pdfBug && globalThis.FontInspector?.enabled\n              ? (font, url) => globalThis.FontInspector.fontAdded(font, url)\n              : null;\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            inspectFont,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const { width, height } = imageData;\n              length = width * height * 4;\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_CACHE) {\n              pageProxy._maybeCleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.cMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.cMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.standardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.standardFontDataFactory.fetch(data);\n    });\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      warn(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    const { map, transfers } = this.annotationStorage.serializable;\n\n    return this.messageHandler\n      .sendWithPromise(\n        \"SaveDocument\",\n        {\n          isPureXfa: !!this._htmlForXfa,\n          numPages: this._numPages,\n          annotationStorage: map,\n          filename: this._fullReader?.filename ?? null,\n        },\n        transfers\n      )\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(name, null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(/* keepHCM = */ true);\n  }\n\n  get loadingParams() {\n    const { disableAutoFetch, enableXfa } = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch,\n      enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    return (this.#objs[objId] ||= {\n      capability: new PromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    for (const objId in this.#objs) {\n      const { data } = this.#objs[objId];\n      data?.bitmap?.close(); // Release any `ImageBitmap` data.\n    }\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  #internalRenderTask = null;\n\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   *\n   * @param {number} [extraDelay]\n   */\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(/* error = */ null, extraDelay);\n  }\n\n  /**\n   * Whether form fields are rendered separately from the main operatorList.\n   * @type {boolean}\n   */\n  get separateAnnots() {\n    const { separateAnnots } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const { annotationCanvasMap } = this.#internalRenderTask;\n    return (\n      separateAnnots.form ||\n      (separateAnnots.canvas && annotationCanvasMap?.size > 0)\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = new PromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, background } = this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      this.filterFactory,\n      { optionalContentConfig },\n      this.annotationCanvasMap,\n      this.pageColors\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          extraDelay\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.stepper?.updateOperatorList(this.operatorList);\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultFilterFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  PDFWorkerUtil,\n  RenderTask,\n  SVGGraphics,\n  version,\n};\n",
      "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable } from \"../shared/util.js\";\nimport { AnnotationEditor } from \"./editor/editor.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfers: undefined,\n});\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  #modified = false;\n\n  #storage = new Map();\n\n  constructor() {\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Get the value for a given key.\n   * @param {string} key\n   * @returns {Object}\n   */\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n\n  /**\n   * Remove a value from the storage.\n   * @param {string} key\n   */\n  remove(key) {\n    this.#storage.delete(key);\n\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n\n  /**\n   * Set the value for a given key\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n\n    if (\n      value instanceof AnnotationEditor &&\n      typeof this.onAnnotationEditor === \"function\"\n    ) {\n      this.onAnnotationEditor(value.constructor._type);\n    }\n  }\n\n  /**\n   * Check if the storage contains the given key.\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has(key) {\n    return this.#storage.has(key);\n  }\n\n  /**\n   * @returns {Object | null}\n   */\n  getAll() {\n    return this.#storage.size > 0 ? objectFromMap(this.#storage) : null;\n  }\n\n  /**\n   * @param {Object} obj\n   */\n  setAll(obj) {\n    for (const [key, val] of Object.entries(obj)) {\n      this.setValue(key, val);\n    }\n  }\n\n  get size() {\n    return this.#storage.size;\n  }\n\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new MurmurHash3_64(),\n      transfers = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n\n    for (const [key, val] of this.#storage) {\n      const serialized =\n        val instanceof AnnotationEditor\n          ? val.serialize(/* isForCopying = */ false, context)\n          : val;\n      if (serialized) {\n        map.set(key, serialized);\n\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n\n    if (hasBitmap) {\n      // We must transfer the bitmap data separately, since it can be changed\n      // during serialization with SVG images.\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfers.push(value.bitmap);\n        }\n      }\n    }\n\n    return map.size > 0\n      ? { map, hash: hash.hexdigest(), transfers }\n      : SerializableEmpty;\n  }\n}\n\n/**\n * A special `AnnotationStorage` for use during printing, where the serializable\n * data is *frozen* upon initialization, to prevent scripting from modifying its\n * contents. (Necessary since printing is triggered synchronously in browsers.)\n */\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n\n  constructor(parent) {\n    super();\n    const { map, hash, transfers } = parent.serializable;\n    // Create a *copy* of the data, since Objects are passed by reference in JS.\n    const clone = structuredClone(\n      map,\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n        transfers\n        ? { transfer: transfers }\n        : null\n    );\n    this.#serializable = { map: clone, hash, transfers };\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  // eslint-disable-next-line getter-return\n  get print() {\n    unreachable(\"Should not call PrintAnnotationStorage.print\");\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this.#serializable;\n  }\n}\n\nexport { AnnotationStorage, PrintAnnotationStorage, SerializableEmpty };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n\nimport { bindEvents, ColorManager } from \"./tools.js\";\nimport { FeatureTest, shadow, unreachable } from \"../../shared/util.js\";\nimport { noContextMenu } from \"../display_utils.js\";\n\n/**\n * @typedef {Object} AnnotationEditorParameters\n * @property {AnnotationEditorUIManager} uiManager - the global manager\n * @property {AnnotationEditorLayer} parent - the layer containing this editor\n * @property {string} id - editor id\n * @property {number} x - x-coordinate\n * @property {number} y - y-coordinate\n */\n\n/**\n * Base class for editors.\n */\nclass AnnotationEditor {\n  #altText = \"\";\n\n  #altTextDecorative = false;\n\n  #altTextButton = null;\n\n  #altTextTooltip = null;\n\n  #altTextTooltipTimeout = null;\n\n  #keepAspectRatio = false;\n\n  #resizersDiv = null;\n\n  #boundFocusin = this.focusin.bind(this);\n\n  #boundFocusout = this.focusout.bind(this);\n\n  #hasBeenClicked = false;\n\n  #isEditing = false;\n\n  #isInEditMode = false;\n\n  _initialOptions = Object.create(null);\n\n  _uiManager = null;\n\n  _focusEventsAllowed = true;\n\n  _l10nPromise = null;\n\n  #isDraggable = false;\n\n  #zIndex = AnnotationEditor._zIndex++;\n\n  static _borderLineWidth = -1;\n\n  static _colorManager = new ColorManager();\n\n  static _zIndex = 1;\n\n  // When one of the dimensions of an editor is smaller than this value, the\n  // button to edit the alt text is visually moved outside of the editor.\n  static SMALL_EDITOR_SIZE = 0;\n\n  /**\n   * @param {AnnotationEditorParameters} parameters\n   */\n  constructor(parameters) {\n    if (this.constructor === AnnotationEditor) {\n      unreachable(\"Cannot initialize AnnotationEditor.\");\n    }\n\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n\n    const {\n      rotation,\n      rawDims: { pageWidth, pageHeight, pageX, pageY },\n    } = this.parent.viewport;\n\n    this.rotation = rotation;\n    this.pageRotation =\n      (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n\n  static get _defaultLineColor() {\n    return shadow(\n      this,\n      \"_defaultLineColor\",\n      this._colorManager.getHexCode(\"CanvasText\")\n    );\n  }\n\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager,\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n\n  /**\n   * Initialize the l10n stuff for this type of editor.\n   * @param {Object} l10n\n   */\n  static initialize(l10n, options = null) {\n    AnnotationEditor._l10nPromise ||= new Map(\n      [\n        \"editor_alt_text_button_label\",\n        \"editor_alt_text_edit_button_label\",\n        \"editor_alt_text_decorative_tooltip\",\n      ].map(str => [str, l10n.get(str)])\n    );\n    if (options?.strings) {\n      for (const str of options.strings) {\n        AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n      }\n    }\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth =\n      parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n\n  /**\n   * Update the default parameters for this type of editor.\n   * @param {number} _type\n   * @param {*} _value\n   */\n  static updateDefaultParams(_type, _value) {}\n\n  /**\n   * Get the default properties to set in the UI for this type of editor.\n   * @returns {Array}\n   */\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n\n  /**\n   * Check if this kind of editor is able to handle the given mime type for\n   * pasting.\n   * @param {string} mime\n   * @returns {boolean}\n   */\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n\n  /**\n   * Extract the data from the clipboard item and delegate the creation of the\n   * editor to the parent.\n   * @param {DataTransferItem} item\n   * @param {AnnotationEditorLayer} parent\n   */\n  static paste(item, parent) {\n    unreachable(\"Not implemented\");\n  }\n\n  /**\n   * Get the properties to update in the UI for this editor.\n   * @returns {Array}\n   */\n  get propertiesToUpdate() {\n    return [];\n  }\n\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= (this.height * pageHeight) / (pageWidth * 2);\n        this.y += (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += (this.height * pageHeight) / (pageWidth * 2);\n        this.y -= (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n\n  /**\n   * This editor will be behind the others.\n   */\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n\n  /**\n   * This editor will be in the foreground.\n   */\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    }\n    this.parent = parent;\n  }\n\n  /**\n   * onfocus callback.\n   */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n\n  /**\n   * onblur callback.\n   * @param {FocusEvent} event\n   */\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n\n    // In case of focusout, the relatedTarget is the element which\n    // is grabbing the focus.\n    // So if the related target is an element under the div for this\n    // editor, then the editor isn't unactive.\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n\n  /**\n   * Commit the data contained in this editor.\n   */\n  commit() {\n    this.addToAnnotationStorage();\n  }\n\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n\n  /**\n   * Set the editor position within its parent.\n   * @param {number} x\n   * @param {number} y\n   * @param {number} tx - x-translation in screen coordinates.\n   * @param {number} ty - y-translation in screen coordinates.\n   */\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n\n    this.fixAndSetPosition();\n  }\n\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n\n    this.x += x / width;\n    this.y += y / height;\n\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Translate the editor position within its parent.\n   * @param {number} x - x-translation in screen coordinates.\n   * @param {number} y - y-translation in screen coordinates.\n   */\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n\n  /**\n   * Translate the editor position within its page and adjust the scroll\n   * in order to have the editor in the view.\n   * @param {number} x - x-translation in page coordinates.\n   * @param {number} y - y-translation in page coordinates.\n   */\n  translateInPage(x, y) {\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  drag(tx, ty) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      // It's possible to not have a parent: for example, when the user is\n      // dragging all the selected editors but this one on a page which has been\n      // destroyed.\n      // It's why we need to check for it. In such a situation, it isn't really\n      // a problem to not find a new parent: it's something which is related to\n      // what the user is seeing, hence it depends on how pages are layed out.\n\n      // The element will be outside of its parent so change the parent.\n      const { x, y } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n\n    // The editor can be moved wherever the user wants, so we don't need to fix\n    // the position: it'll be done when the user will release the mouse button.\n\n    let { x, y } = this;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    this.div.style.left = `${(100 * x).toFixed(2)}%`;\n    this.div.style.top = `${(100 * y).toFixed(2)}%`;\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  #getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const { _borderLineWidth } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n\n  fixAndSetPosition() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    let { x, y, width, height } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        x = Math.max(0, Math.min(pageWidth - width, x));\n        y = Math.max(0, Math.min(pageHeight - height, y));\n        break;\n      case 90:\n        x = Math.max(0, Math.min(pageWidth - height, x));\n        y = Math.min(pageHeight, Math.max(width, y));\n        break;\n      case 180:\n        x = Math.min(pageWidth, Math.max(width, x));\n        y = Math.min(pageHeight, Math.max(height, y));\n        break;\n      case 270:\n        x = Math.min(pageWidth, Math.max(height, x));\n        y = Math.max(0, Math.min(pageHeight - width, y));\n        break;\n    }\n\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    const { style } = this.div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n\n    this.moveInDOM();\n  }\n\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n\n  /**\n   * Convert a screen translation into a page one.\n   * @param {number} x\n   * @param {number} y\n   */\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n\n  /**\n   * Convert a page translation into a screen one.\n   * @param {number} x\n   * @param {number} y\n   */\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n      }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n      }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight],\n    } = this;\n    const scaledWidth = pageWidth * parentScale;\n    const scaledHeight = pageHeight * parentScale;\n    return FeatureTest.isCSSRoundSupported\n      ? [Math.round(scaledWidth), Math.round(scaledHeight)]\n      : [scaledWidth, scaledHeight];\n  }\n\n  /**\n   * Set the dimensions of this editor.\n   * @param {number} width\n   * @param {number} height\n   */\n  setDims(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.div.style.width = `${((100 * width) / parentWidth).toFixed(2)}%`;\n    if (!this.#keepAspectRatio) {\n      this.div.style.height = `${((100 * height) / parentHeight).toFixed(2)}%`;\n    }\n    this.#altTextButton?.classList.toggle(\n      \"small\",\n      width < AnnotationEditor.SMALL_EDITOR_SIZE ||\n        height < AnnotationEditor.SMALL_EDITOR_SIZE\n    );\n  }\n\n  fixDims() {\n    const { style } = this.div;\n    const { height, width } = style;\n    const widthPercent = width.endsWith(\"%\");\n    const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n    if (widthPercent && heightPercent) {\n      return;\n    }\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (!widthPercent) {\n      style.width = `${((100 * parseFloat(width)) / parentWidth).toFixed(2)}%`;\n    }\n    if (!this.#keepAspectRatio && !heightPercent) {\n      style.height = `${((100 * parseFloat(height)) / parentHeight).toFixed(\n        2\n      )}%`;\n    }\n  }\n\n  /**\n   * Get the translation used to position this editor when it's created.\n   * @returns {Array<number>}\n   */\n  getInitialTranslation() {\n    return [0, 0];\n  }\n\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n    if (!this._willKeepAspectRatio) {\n      classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n    }\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.addEventListener(\n        \"pointerdown\",\n        this.#resizerPointerdown.bind(this, name)\n      );\n      div.addEventListener(\"contextmenu\", noContextMenu);\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      return;\n    }\n\n    const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    const pointerMoveOptions = { passive: true, capture: true };\n    window.addEventListener(\n      \"pointermove\",\n      boundResizerPointermove,\n      pointerMoveOptions\n    );\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor =\n      window.getComputedStyle(event.target).cursor;\n\n    const pointerUpCallback = () => {\n      this._isDraggable = savedDraggable;\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      window.removeEventListener(\n        \"pointermove\",\n        boundResizerPointermove,\n        pointerMoveOptions\n      );\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n\n      const newX = this.x;\n      const newY = this.y;\n      const newWidth = this.width;\n      const newHeight = this.height;\n      if (\n        newX === savedX &&\n        newY === savedY &&\n        newWidth === savedWidth &&\n        newHeight === savedHeight\n      ) {\n        return;\n      }\n\n      this.addCommands({\n        cmd: () => {\n          this.width = newWidth;\n          this.height = newHeight;\n          this.x = newX;\n          this.y = newY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n          this.fixAndSetPosition();\n        },\n        undo: () => {\n          this.width = savedWidth;\n          this.height = savedHeight;\n          this.x = savedX;\n          this.y = savedY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n          this.fixAndSetPosition();\n        },\n        mustExec: true,\n      });\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user switches to another window (with alt+tab), then we end the\n    // resize session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n\n    // 10000 because we multiply by 100 and use toFixed(2) in fixAndSetPosition.\n    // Without rounding, the positions of the corners other than the top left\n    // one can be slightly wrong.\n    const round = x => Math.round(x * 10000) / 10000;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [\n      rotationMatrix[0] * x + rotationMatrix[2] * y,\n      rotationMatrix[1] * x + rotationMatrix[3] * y,\n    ];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [\n      invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n      invRotationMatrix[1] * x + invRotationMatrix[3] * y,\n    ];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = round(savedX + transfOppositePoint[0]);\n    const oppositeY = round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n\n    let [deltaX, deltaY] = this.screenToPageTranslation(\n      event.movementX,\n      event.movementY\n    );\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(\n        Math.min(\n          Math.hypot(\n            oppositePoint[0] - point[0] - deltaX,\n            oppositePoint[1] - point[1] - deltaY\n          ) / oldDiag,\n          // Avoid the editor to be larger than the page.\n          1 / savedWidth,\n          1 / savedHeight\n        ),\n        // Avoid the editor to be smaller than the minimum size.\n        minWidth / savedWidth,\n        minHeight / savedHeight\n      );\n    } else if (isHorizontal) {\n      ratioX =\n        Math.max(\n          minWidth,\n          Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))\n        ) / savedWidth;\n    } else {\n      ratioY =\n        Math.max(\n          minHeight,\n          Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))\n        ) / savedHeight;\n    }\n\n    const newWidth = round(savedWidth * ratioX);\n    const newHeight = round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n\n    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n    this.fixAndSetPosition();\n  }\n\n  async addAltTextButton() {\n    if (this.#altTextButton) {\n      return;\n    }\n    const altText = (this.#altTextButton = document.createElement(\"button\"));\n    altText.className = \"altText\";\n    const msg = await AnnotationEditor._l10nPromise.get(\n      \"editor_alt_text_button_label\"\n    );\n    altText.textContent = msg;\n    altText.setAttribute(\"aria-label\", msg);\n    altText.tabIndex = \"0\";\n    altText.addEventListener(\"contextmenu\", noContextMenu);\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n    altText.addEventListener(\n      \"click\",\n      event => {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      },\n      { capture: true }\n    );\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      }\n    });\n    this.#setAltTextButtonState();\n    this.div.append(altText);\n    if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n      // We take the width of the alt text button and we add 40% to it to be\n      // sure to have enough space for it.\n      const PERCENT = 40;\n      AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(\n        128,\n        Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100))\n      );\n    }\n  }\n\n  async #setAltTextButtonState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (!this.#altText && !this.#altTextDecorative) {\n      button.classList.remove(\"done\");\n      this.#altTextTooltip?.remove();\n      return;\n    }\n    AnnotationEditor._l10nPromise\n      .get(\"editor_alt_text_edit_button_label\")\n      .then(msg => {\n        button.setAttribute(\"aria-label\", msg);\n      });\n\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      const id = (tooltip.id = `alt-text-tooltip-${this.id}`);\n      button.setAttribute(\"aria-describedby\", id);\n\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n            source: this,\n            details: {\n              type: \"editing\",\n              subtype: this.editorType,\n              data: {\n                action: \"alt_text_tooltip\",\n              },\n            },\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n        this.#altTextTooltip?.classList.remove(\"show\");\n      });\n    }\n    button.classList.add(\"done\");\n    tooltip.innerText = this.#altTextDecorative\n      ? await AnnotationEditor._l10nPromise.get(\n          \"editor_alt_text_decorative_tooltip\"\n        )\n      : this.#altText;\n\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n  }\n\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n\n  get altTextData() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative,\n    };\n  }\n\n  set altTextData({ altText, decorative }) {\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    this.#altText = altText;\n    this.#altTextDecorative = decorative;\n    this.#setAltTextButtonState();\n  }\n\n  /**\n   * Render this editor in a div.\n   * @returns {HTMLDivElement}\n   */\n  render() {\n    this.div = document.createElement(\"div\");\n    this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    this.div.className = this.name;\n    this.div.setAttribute(\"id\", this.id);\n    this.div.setAttribute(\"tabIndex\", 0);\n\n    this.setInForeground();\n\n    this.div.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div.addEventListener(\"focusout\", this.#boundFocusout);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      this.div.style.maxWidth = `${((100 * parentHeight) / parentWidth).toFixed(\n        2\n      )}%`;\n      this.div.style.maxHeight = `${(\n        (100 * parentWidth) /\n        parentHeight\n      ).toFixed(2)}%`;\n    }\n\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n\n    bindEvents(this, this.div, [\"pointerdown\"]);\n\n    return this.div;\n  }\n\n  /**\n   * Onpointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Avoid to focus this editor because of a non-left click.\n      event.preventDefault();\n      return;\n    }\n\n    this.#hasBeenClicked = true;\n\n    this.#setUpDragSession(event);\n  }\n\n  #setUpDragSession(event) {\n    if (!this._isDraggable) {\n      return;\n    }\n\n    const isSelected = this._uiManager.isSelected(this);\n    this._uiManager.setUpDragSession();\n\n    let pointerMoveOptions, pointerMoveCallback;\n    if (isSelected) {\n      pointerMoveOptions = { passive: true, capture: true };\n      pointerMoveCallback = e => {\n        const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n        this._uiManager.dragSelectedEditors(tx, ty);\n      };\n      window.addEventListener(\n        \"pointermove\",\n        pointerMoveCallback,\n        pointerMoveOptions\n      );\n    }\n\n    const pointerUpCallback = () => {\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      if (isSelected) {\n        window.removeEventListener(\n          \"pointermove\",\n          pointerMoveCallback,\n          pointerMoveOptions\n        );\n      }\n\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        const { isMac } = FeatureTest.platform;\n        if (\n          (event.ctrlKey && !isMac) ||\n          event.shiftKey ||\n          (event.metaKey && isMac)\n        ) {\n          this.parent.toggleSelected(this);\n        } else {\n          this.parent.setSelected(this);\n        }\n      }\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user is using alt+tab during the dragging session, the pointerup\n    // event could be not fired, but a blur event is fired so we can use it in\n    // order to interrupt the dragging session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  moveInDOM() {\n    this.parent?.moveEditorInDOM(this);\n  }\n\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Convert the current rect into a page one.\n   */\n  getRect(tx, ty) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        return [\n          x + shiftX + pageX,\n          pageHeight - y - shiftY - height + pageY,\n          x + shiftX + width + pageX,\n          pageHeight - y - shiftY + pageY,\n        ];\n      case 90:\n        return [\n          x + shiftY + pageX,\n          pageHeight - y + shiftX + pageY,\n          x + shiftY + height + pageX,\n          pageHeight - y + shiftX + width + pageY,\n        ];\n      case 180:\n        return [\n          x - shiftX - width + pageX,\n          pageHeight - y + shiftY + pageY,\n          x - shiftX + pageX,\n          pageHeight - y + shiftY + height + pageY,\n        ];\n      case 270:\n        return [\n          x - shiftY - height + pageX,\n          pageHeight - y - shiftX - width + pageY,\n          x - shiftY + pageX,\n          pageHeight - y - shiftX + pageY,\n        ];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n\n    const width = x2 - x1;\n    const height = y2 - y1;\n\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  /**\n   * Executed once this editor has been rendered.\n   */\n  onceAdded() {}\n\n  /**\n   * Check if the editor contains something.\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return false;\n  }\n\n  /**\n   * Enable edit mode.\n   */\n  enableEditMode() {\n    this.#isInEditMode = true;\n  }\n\n  /**\n   * Disable edit mode.\n   */\n  disableEditMode() {\n    this.#isInEditMode = false;\n  }\n\n  /**\n   * Check if the editor is edited.\n   * @returns {boolean}\n   */\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n\n  /**\n   * If it returns true, then this editor handle the keyboard\n   * events itself.\n   * @returns {boolean}\n   */\n  shouldGetKeyboardEvents() {\n    return false;\n  }\n\n  /**\n   * Check if this editor needs to be rebuilt or not.\n   * @returns {boolean}\n   */\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n\n  /**\n   * Rebuild the editor in case it has been removed on undo.\n   *\n   * To implement in subclasses.\n   */\n  rebuild() {\n    this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n  }\n\n  /**\n   * Serialize the editor.\n   * The result of the serialization will be used to construct a\n   * new annotation to add to the pdf document.\n   *\n   * To implement in subclasses.\n   * @param {boolean} isForCopying\n   * @param {Object} [context]\n   */\n  serialize(isForCopying = false, context = null) {\n    unreachable(\"An editor must be serializable\");\n  }\n\n  /**\n   * Deserialize the editor.\n   * The result of the deserialization is a new editor.\n   *\n   * @param {Object} data\n   * @param {AnnotationEditorLayer} parent\n   * @param {AnnotationEditorUIManager} uiManager\n   * @returns {AnnotationEditor}\n   */\n  static deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager,\n    });\n    editor.rotation = data.rotation;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(\n      data.rect,\n      pageHeight\n    );\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n\n    return editor;\n  }\n\n  /**\n   * Remove this editor.\n   * It's used on ctrl+backspace action.\n   */\n  remove() {\n    this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n    this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n\n    if (!this.isEmpty()) {\n      // The editor is removed but it can be back at some point thanks to\n      // undo/redo so we must commit it before.\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n\n    // The editor is removed so we can remove the alt text button and if it's\n    // restored then it's up to the subclass to add it back.\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextTooltip = null;\n  }\n\n  /**\n   * @returns {boolean} true if this editor can be resized.\n   */\n  get isResizable() {\n    return false;\n  }\n\n  /**\n   * Add the resizers to this editor.\n   */\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n\n  /**\n   * Select this editor.\n   */\n  select() {\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n  }\n\n  /**\n   * Unselect this editor.\n   */\n  unselect() {\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      // Don't use this.div.blur() because we don't know where the focus will\n      // go.\n      this._uiManager.currentLayer.div.focus();\n    }\n  }\n\n  /**\n   * Update some parameters which have been changed through the UI.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {}\n\n  /**\n   * When the user disables the editing mode some editors can change some of\n   * their properties.\n   */\n  disableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = true;\n    }\n  }\n\n  /**\n   * When the user enables the editing mode some editors can change some of\n   * their properties.\n   */\n  enableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = false;\n    }\n  }\n\n  /**\n   * The editor is about to be edited.\n   */\n  enterInEditMode() {}\n\n  /**\n   * Get the div which really contains the displayed content.\n   */\n  get contentDiv() {\n    return this.div;\n  }\n\n  /**\n   * If true then the editor is currently edited.\n   * @type {boolean}\n   */\n  get isEditing() {\n    return this.#isEditing;\n  }\n\n  /**\n   * When set to true, it means that this editor is currently edited.\n   * @param {boolean} value\n   */\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n\n  /**\n   * Set the aspect ratio to use when resizing.\n   * @param {number} width\n   * @param {number} height\n   */\n  setAspectRatio(width, height) {\n    this.#keepAspectRatio = true;\n    const aspectRatio = width / height;\n    const { style } = this.div;\n    style.aspectRatio = aspectRatio;\n    style.height = \"auto\";\n  }\n\n  static get MIN_SIZE() {\n    return 16;\n  }\n}\n\n// This class is used to fake an editor which has been deleted.\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n\n  serialize() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex,\n    };\n  }\n}\n\nexport { AnnotationEditor };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./editor.js\").AnnotationEditor} AnnotationEditor */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  FeatureTest,\n  getUuid,\n  shadow,\n  Util,\n  warn,\n} from \"../../shared/util.js\";\nimport { getColorValues, getRGB, PixelsPerInch } from \"../display_utils.js\";\n\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\n\n/**\n * Convert a number between 0 and 100 into an hex number between 0 and 255.\n * @param {number} opacity\n * @return {string}\n */\nfunction opacityToHex(opacity) {\n  return Math.round(Math.min(255, Math.max(1, 255 * opacity)))\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n/**\n * Class to create some unique ids for the different editors.\n */\nclass IdManager {\n  #id = 0;\n\n  /**\n   * Get a unique id.\n   * @returns {string}\n   */\n  getId() {\n    return `${AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\n\n/**\n * Class to manage the images used by the editors.\n * The main idea is to try to minimize the memory used by the images.\n * The images are cached and reused when possible\n * We use a refCounter to know when an image is not used anymore but we need to\n * be able to restore an image after a remove+undo, so we keep a file reference\n * or an url one.\n */\nclass ImageManager {\n  #baseId = getUuid();\n\n  #id = 0;\n\n  #cache = null;\n\n  static get _isSVGFittingCanvas() {\n    // By default, Firefox doesn't rescale without preserving the aspect ratio\n    // when drawing an SVG image on a canvas, see https://bugzilla.mozilla.org/1547776.\n    // The \"workaround\" is to append \"svgView(preserveAspectRatio(none))\" to the\n    // url, but according to comment #15, it seems that it leads to unexpected\n    // behavior in Safari.\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n\n    return shadow(this, \"_isSVGFittingCanvas\", promise);\n  }\n\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      // We already tried to load the image but it failed.\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false,\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n\n        const response = await fetch(rawData);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        image = await response.blob();\n      } else {\n        image = data.file = rawData;\n      }\n\n      if (image.type === \"image/svg+xml\") {\n        // Unfortunately, createImageBitmap doesn't work with SVG images.\n        // (see https://bugzilla.mozilla.org/1841972).\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = (data.svgUrl = fileReader.result);\n            // We need to set the preserveAspectRatio to none in order to let\n            // the image fits the canvas when resizing.\n            imageElement.src = (await mustRemoveAspectRatioPromise)\n              ? `${url}#svgView(preserveAspectRatio(none))`\n              : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      console.error(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n\n  async getFromFile(file) {\n    const { lastModified, name, size, type } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    return this.getFromUrl(data.url);\n  }\n\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    data.bitmap = null;\n  }\n\n  // We can use the id only if it belongs this manager.\n  // We must take care of having the right manager because we can copy/paste\n  // some images from other documents, hence it'd be a pity to use an id from an\n  // other manager.\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\n\n/**\n * Class to handle undo/redo.\n * Commands are just saved in a buffer.\n * If we hit some memory issues we could likely use a circular buffer.\n * It has to be used as a singleton.\n */\nclass CommandManager {\n  #commands = [];\n\n  #locked = false;\n\n  #maxSize;\n\n  #position = -1;\n\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n\n  /**\n   * @typedef {Object} addOptions\n   * @property {function} cmd\n   * @property {function} undo\n   * @property {boolean} mustExec\n   * @property {number} type\n   * @property {boolean} overwriteIfSameType\n   * @property {boolean} keepUndo\n   */\n\n  /**\n   * Add a new couple of commands to be used in case of redo/undo.\n   * @param {addOptions} options\n   */\n  add({\n    cmd,\n    undo,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false,\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n\n    if (this.#locked) {\n      return;\n    }\n\n    const save = { cmd, undo, type };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        // All the commands have been undone and then a new one is added\n        // hence we clear the queue.\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      // For example when we change a color we don't want to\n      // be able to undo all the steps, hence we only want to\n      // keep the last undoable action in this sequence of actions.\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n\n    this.#commands.push(save);\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    if (this.#position === -1) {\n      // Nothing to undo.\n      return;\n    }\n\n    // Avoid to insert something during the undo execution.\n    this.#locked = true;\n    this.#commands[this.#position].undo();\n    this.#locked = false;\n\n    this.#position -= 1;\n  }\n\n  /**\n   * Redo the last command.\n   */\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n\n      // Avoid to insert something during the redo execution.\n      this.#locked = true;\n      this.#commands[this.#position].cmd();\n      this.#locked = false;\n    }\n  }\n\n  /**\n   * Check if there is something to undo.\n   * @returns {boolean}\n   */\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n\n  /**\n   * Check if there is something to redo.\n   * @returns {boolean}\n   */\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n\n  destroy() {\n    this.#commands = null;\n  }\n}\n\n/**\n * Class to handle the different keyboards shortcuts we can have on mac or\n * non-mac OSes.\n */\nclass KeyboardManager {\n  /**\n   * Create a new keyboard manager class.\n   * @param {Array<Array>} callbacks - an array containing an array of shortcuts\n   * and a callback to call.\n   * A shortcut is a string like `ctrl+c` or `mac+ctrl+c` for mac OS.\n   */\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n\n    const { isMac } = FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n\n  /**\n   * Serialize an event into a string in order to match a\n   * potential key for a callback.\n   * @param {KeyboardEvent} event\n   * @returns {string}\n   */\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n\n    return str;\n  }\n\n  /**\n   * Execute a callback, if any, for a given keyboard event.\n   * The self is used as `this` in the callback.\n   * @param {Object} self\n   * @param {KeyboardEvent} event\n   * @returns\n   */\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: { bubbles = false, args = [], checker = null },\n    } = info;\n\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args)();\n\n    // For example, ctrl+s in a FreeText must be handled by the viewer, hence\n    // the event must bubble.\n    if (!bubbles) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n}\n\nclass ColorManager {\n  static _colorsMapping = new Map([\n    [\"CanvasText\", [0, 0, 0]],\n    [\"Canvas\", [255, 255, 255]],\n  ]);\n\n  get _colors() {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"LIB\") &&\n      typeof document === \"undefined\"\n    ) {\n      return shadow(this, \"_colors\", ColorManager._colorsMapping);\n    }\n\n    const colors = new Map([\n      [\"CanvasText\", null],\n      [\"Canvas\", null],\n    ]);\n    getColorValues(colors);\n    return shadow(this, \"_colors\", colors);\n  }\n\n  /**\n   * In High Contrast Mode, the color on the screen is not always the\n   * real color used in the pdf.\n   * For example in some cases white can appear to be black but when saving\n   * we want to have white.\n   * @param {string} color\n   * @returns {Array<number>}\n   */\n  convert(color) {\n    const rgb = getRGB(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n\n  /**\n   * An input element must have its color value as a hex string\n   * and not as color name.\n   * So this function converts a name into an hex string.\n   * @param {string} name\n   * @returns {string}\n   */\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return Util.makeHexColor(...rgb);\n  }\n}\n\n/**\n * A pdf has several pages and each of them when it will rendered\n * will have an AnnotationEditorLayer which will contain the some\n * new Annotations associated to an editor in order to modify them.\n *\n * This class is used to manage all the different layers, editors and\n * some action like copy/paste, undo/redo, ...\n */\nclass AnnotationEditorUIManager {\n  #activeEditor = null;\n\n  #allEditors = new Map();\n\n  #allLayers = new Map();\n\n  #altTextManager = null;\n\n  #annotationStorage = null;\n\n  #commandManager = new CommandManager();\n\n  #currentPageIndex = 0;\n\n  #deletedAnnotationsElementIds = new Set();\n\n  #draggingEditors = null;\n\n  #editorTypes = null;\n\n  #editorsToRescale = new Set();\n\n  #filterFactory = null;\n\n  #idManager = new IdManager();\n\n  #isEnabled = false;\n\n  #isWaiting = false;\n\n  #lastActiveElement = null;\n\n  #mode = AnnotationEditorType.NONE;\n\n  #selectedEditors = new Set();\n\n  #pageColors = null;\n\n  #boundBlur = this.blur.bind(this);\n\n  #boundFocus = this.focus.bind(this);\n\n  #boundCopy = this.copy.bind(this);\n\n  #boundCut = this.cut.bind(this);\n\n  #boundPaste = this.paste.bind(this);\n\n  #boundKeydown = this.keydown.bind(this);\n\n  #boundOnEditingAction = this.onEditingAction.bind(this);\n\n  #boundOnPageChanging = this.onPageChanging.bind(this);\n\n  #boundOnScaleChanging = this.onScaleChanging.bind(this);\n\n  #boundOnRotationChanging = this.onRotationChanging.bind(this);\n\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false,\n  };\n\n  #translation = [0, 0];\n\n  #translationTimeoutId = null;\n\n  #container = null;\n\n  #viewer = null;\n\n  static TRANSLATE_SMALL = 1; // page units.\n\n  static TRANSLATE_BIG = 10; // page units.\n\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n\n    const arrowChecker = self => {\n      // If the focused element is an input, we don't want to handle the arrow.\n      // For example, sliders can be controlled with the arrow keys.\n      const { activeElement } = document;\n      return (\n        activeElement &&\n        self.#container.contains(activeElement) &&\n        self.hasSomethingToControl()\n      );\n    };\n\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll],\n        [[\"ctrl+z\", \"mac+meta+z\"], proto.undo],\n        [\n          // On mac, depending of the OS version, the event.key is either \"z\" or\n          // \"Z\" when the user presses \"meta+shift+z\".\n          [\n            \"ctrl+y\",\n            \"ctrl+shift+z\",\n            \"mac+meta+shift+z\",\n            \"ctrl+shift+Z\",\n            \"mac+meta+shift+Z\",\n          ],\n          proto.redo,\n        ],\n        [\n          [\n            \"Backspace\",\n            \"alt+Backspace\",\n            \"ctrl+Backspace\",\n            \"shift+Backspace\",\n            \"mac+Backspace\",\n            \"mac+alt+Backspace\",\n            \"mac+ctrl+Backspace\",\n            \"Delete\",\n            \"ctrl+Delete\",\n            \"shift+Delete\",\n            \"mac+Delete\",\n          ],\n          proto.delete,\n        ],\n        [[\"Escape\", \"mac+Escape\"], proto.unselectAll],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  constructor(\n    container,\n    viewer,\n    altTextManager,\n    eventBus,\n    pdfDocument,\n    pageColors\n  ) {\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#altTextManager = altTextManager;\n    this._eventBus = eventBus;\n    this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.viewParameters = {\n      realScale: PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0,\n    };\n  }\n\n  destroy() {\n    this.#removeKeyboardManager();\n    this.#removeFocusManager();\n    this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager.destroy();\n  }\n\n  get hcmFilter() {\n    return shadow(\n      this,\n      \"hcmFilter\",\n      this.#pageColors\n        ? this.#filterFactory.addHCMFilter(\n            this.#pageColors.foreground,\n            this.#pageColors.background\n          )\n        : \"none\"\n    );\n  }\n\n  get direction() {\n    return shadow(\n      this,\n      \"direction\",\n      getComputedStyle(this.#container).direction\n    );\n  }\n\n  editAltText(editor) {\n    this.#altTextManager?.editAltText(this, editor);\n  }\n\n  onPageChanging({ pageNumber }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n\n  focusMainContainer() {\n    this.#container.focus();\n  }\n\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height,\n      } = layer.div.getBoundingClientRect();\n      if (\n        x >= layerX &&\n        x <= layerX + width &&\n        y >= layerY &&\n        y <= layerY + height\n      ) {\n        return layer;\n      }\n    }\n    return null;\n  }\n\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n\n  onScaleChanging({ scale }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n  }\n\n  onRotationChanging({ pagesRotation }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n\n  /**\n   * Add an editor in the annotation storage.\n   * @param {AnnotationEditor} editor\n   */\n  addToAnnotationStorage(editor) {\n    if (\n      !editor.isEmpty() &&\n      this.#annotationStorage &&\n      !this.#annotationStorage.has(editor.id)\n    ) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n\n  #addFocusManager() {\n    window.addEventListener(\"focus\", this.#boundFocus);\n    window.addEventListener(\"blur\", this.#boundBlur);\n  }\n\n  #removeFocusManager() {\n    window.removeEventListener(\"focus\", this.#boundFocus);\n    window.removeEventListener(\"blur\", this.#boundBlur);\n  }\n\n  blur() {\n    if (!this.hasSelection) {\n      return;\n    }\n    // When several editors are selected and the window loses focus, we want to\n    // keep the last active element in order to be able to focus it again when\n    // the window gets the focus back but we don't want to trigger any focus\n    // callbacks else only one editor will be selected.\n    const { activeElement } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\n      \"focusin\",\n      () => {\n        lastEditor._focusEventsAllowed = true;\n      },\n      { once: true }\n    );\n    lastActiveElement.focus();\n  }\n\n  #addKeyboardManager() {\n    // The keyboard events are caught at the container level in order to be able\n    // to execute some callbacks even if the current page doesn't have focus.\n    window.addEventListener(\"keydown\", this.#boundKeydown, { capture: true });\n  }\n\n  #removeKeyboardManager() {\n    window.removeEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true,\n    });\n  }\n\n  #addCopyPasteListeners() {\n    document.addEventListener(\"copy\", this.#boundCopy);\n    document.addEventListener(\"cut\", this.#boundCut);\n    document.addEventListener(\"paste\", this.#boundPaste);\n  }\n\n  #removeCopyPasteListeners() {\n    document.removeEventListener(\"copy\", this.#boundCopy);\n    document.removeEventListener(\"cut\", this.#boundCut);\n    document.removeEventListener(\"paste\", this.#boundPaste);\n  }\n\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n\n  /**\n   * Copy callback.\n   * @param {ClipboardEvent} event\n   */\n  copy(event) {\n    event.preventDefault();\n\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(/* isForCopying = */ true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n\n  /**\n   * Cut callback.\n   * @param {ClipboardEvent} event\n   */\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n\n  /**\n   * Paste callback.\n   * @param {ClipboardEvent} event\n   */\n  paste(event) {\n    event.preventDefault();\n    const { clipboardData } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n      return;\n    }\n\n    if (!Array.isArray(data)) {\n      return;\n    }\n\n    this.unselectAll();\n    const layer = this.currentLayer;\n\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({ cmd, undo, mustExec: true });\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n    }\n  }\n\n  /**\n   * Keydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (!this.getActive()?.shouldGetKeyboardEvents()) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n\n  /**\n   * Execute an action for a given name.\n   * For example, the user can click on the \"Undo\" entry in the context menu\n   * and it'll trigger the undo action.\n   * @param {Object} details\n   */\n  onEditingAction(details) {\n    if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n      this[details.name]();\n    }\n  }\n\n  /**\n   * Update the different possible states of this manager, e.g. is there\n   * something to undo, redo, ...\n   * @param {Object} details\n   */\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(\n      ([key, value]) => this.#previousStates[key] !== value\n    );\n\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details),\n      });\n    }\n  }\n\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details,\n    });\n  }\n\n  /**\n   * Set the editing state.\n   * It can be useful to temporarily disable it when the user is editing a\n   * FreeText annotation.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addKeyboardManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false,\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeKeyboardManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false,\n      });\n      this.disableUserSelect(false);\n    }\n  }\n\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n\n  /**\n   * Get an id.\n   * @returns {string}\n   */\n  getId() {\n    return this.#idManager.getId();\n  }\n\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n\n  /**\n   * Add a new layer for a page which will contains the editors.\n   * @param {AnnotationEditorLayer} layer\n   */\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n\n  /**\n   * Remove a layer.\n   * @param {AnnotationEditorLayer} layer\n   */\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n\n  /**\n   * Change the editor mode (None, FreeText, Ink, ...)\n   * @param {number} mode\n   * @param {string|null} editId\n   */\n  updateMode(mode, editId = null) {\n    if (this.#mode === mode) {\n      return;\n    }\n    this.#mode = mode;\n    if (mode === AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      return;\n    }\n    this.setEditingState(true);\n    this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (!editId) {\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.annotationElementId === editId) {\n        this.setSelected(editor);\n        editor.enterInEditMode();\n        break;\n      }\n    }\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   * @returns {undefined}\n   */\n  updateToolbar(mode) {\n    if (mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      mode,\n    });\n  }\n\n  /**\n   * Update a parameter in the current editor or globally.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    if (type === AnnotationEditorParamsType.CREATE) {\n      this.currentLayer.addNewEditor(type);\n      return;\n    }\n\n    for (const editor of this.#selectedEditors) {\n      editor.updateParams(type, value);\n    }\n\n    for (const editorType of this.#editorTypes) {\n      editorType.updateDefaultParams(type, value);\n    }\n  }\n\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n\n  /**\n   * Enable all the layers.\n   */\n  #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      for (const layer of this.#allLayers.values()) {\n        layer.enable();\n      }\n    }\n  }\n\n  /**\n   * Disable all the layers.\n   */\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n    }\n  }\n\n  /**\n   * Get all the editors belonging to a given page.\n   * @param {number} pageIndex\n   * @returns {Array<AnnotationEditor>}\n   */\n  getEditors(pageIndex) {\n    const editors = [];\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        editors.push(editor);\n      }\n    }\n    return editors;\n  }\n\n  /**\n   * Get an editor with the given id.\n   * @param {string} id\n   * @returns {AnnotationEditor}\n   */\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n\n  /**\n   * Add a new editor.\n   * @param {AnnotationEditor} editor\n   */\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  removeEditor(editor) {\n    this.#allEditors.delete(editor.id);\n    this.unselect(editor);\n    if (\n      !editor.annotationElementId ||\n      !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)\n    ) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n\n  /**\n   * The annotation element with the given id has been deleted.\n   * @param {AnnotationEditor} editor\n   */\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    editor.deleted = true;\n  }\n\n  /**\n   * Check if the annotation element with the given id has been deleted.\n   * @param {string} annotationElementId\n   * @returns {boolean}\n   */\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n\n  /**\n   * The annotation element with the given id have been restored.\n   * @param {AnnotationEditor} editor\n   */\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    editor.deleted = false;\n  }\n\n  /**\n   * Add an editor to the layer it belongs to or add it to the global map.\n   * @param {AnnotationEditor} editor\n   */\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n    }\n  }\n\n  /**\n   * Set the given editor as the active one.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection,\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection,\n    });\n  }\n\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Redo the last undoed command.\n   */\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Add a command to execute (cmd) and another one to undo it.\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delete the current editor or all.\n   */\n  delete() {\n    this.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [...this.#selectedEditors];\n    const cmd = () => {\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  commitOrRemove() {\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n  }\n\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n\n  /**\n   * Select the editors.\n   * @param {Array<AnnotationEditor>} editors\n   */\n  #selectEditors(editors) {\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({ hasSelectedEditor: true });\n  }\n\n  /**\n   * Select all the editors.\n   */\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n\n  /**\n   * Unselect all the selected editors.\n   */\n  unselectAll() {\n    if (this.#activeEditor) {\n      // An editor is being edited so just commit it.\n      this.#activeEditor.commitOrRemove();\n      return;\n    }\n\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false,\n    });\n  }\n\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n\n    // We don't want to have an undo/redo for each translation so we wait a bit\n    // before adding the command to the command manager.\n    const TIME_TO_WAIT = 1000;\n\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n            }\n          }\n        },\n        mustExec: false,\n      });\n    }, TIME_TO_WAIT);\n\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n    }\n  }\n\n  /**\n   * Set up the drag session for moving the selected editors.\n   */\n  setUpDragSession() {\n    // Note: don't use any references to the editor's parent which can be null\n    // if the editor belongs to a destroyed page.\n    if (!this.hasSelection) {\n      return;\n    }\n    // Avoid to have spurious text selection in the text layer when dragging.\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1,\n      });\n    }\n  }\n\n  /**\n   * Ends the drag session.\n   * @returns {boolean} true if at least one editor has been moved.\n   */\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n\n    for (const [{ x, y, pageIndex }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||=\n        x !== value.savedX ||\n        y !== value.savedY ||\n        pageIndex !== value.savedPageIndex;\n    }\n\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        // The editor can be undone/redone on a page which is not visible (and\n        // which potentially has no annotation editor layer), hence we need to\n        // use the pageIndex instead of the parent.\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, { newX, newY, newPageIndex }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, { savedX, savedY, savedPageIndex }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true,\n    });\n\n    return true;\n  }\n\n  /**\n   * Drag the set of selected editors.\n   * @param {number} tx\n   * @param {number} ty\n   */\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n\n  /**\n   * Rebuild the editor (usually on undo/redo actions) on a potentially\n   * non-rendered page.\n   * @param {AnnotationEditor} editor\n   */\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n\n  /**\n   * Is the current editor the one passed as argument?\n   * @param {AnnotationEditor} editor\n   * @returns\n   */\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n\n  /**\n   * Get the current active editor.\n   * @returns {AnnotationEditor|null}\n   */\n  getActive() {\n    return this.#activeEditor;\n  }\n\n  /**\n   * Get the current editor mode.\n   * @returns {number}\n   */\n  getMode() {\n    return this.#mode;\n  }\n\n  get imageManager() {\n    return shadow(this, \"imageManager\", new ImageManager());\n  }\n}\n\nexport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  ColorManager,\n  CommandManager,\n  KeyboardManager,\n  opacityToHex,\n};\n",
      "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport {\n  BaseException,\n  FeatureTest,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\n/**\n * FilterFactory aims to create some SVG filters we can use when drawing an\n * image (or whatever) on a canvas.\n * Filters aren't applied with ctx.putImageData because it just overwrites the\n * underlying pixels.\n * With these filters, it's possible for example to apply some transfer maps on\n * an image without the need to apply them on the pixel arrays: the renderer\n * does the magic for us.\n */\nclass DOMFilterFactory extends BaseFilterFactory {\n  #_cache;\n\n  #_defs;\n\n  #docId;\n\n  #document;\n\n  #hcmFilter;\n\n  #hcmKey;\n\n  #hcmUrl;\n\n  #hcmHighlightFilter;\n\n  #hcmHighlightKey;\n\n  #hcmHighlightUrl;\n\n  #id = 0;\n\n  constructor({ docId, ownerDocument = globalThis.document } = {}) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n\n  get #cache() {\n    return (this.#_cache ||= new Map());\n  }\n\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const { style } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n\n    // When a page is zoomed the page is re-drawn but the maps are likely\n    // the same.\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n\n    let tableR, tableG, tableB, key;\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      key = tableR = tableG = tableB = buffer.join(\",\");\n    } else {\n      const [mapR, mapG, mapB] = maps;\n      const bufferR = new Array(256);\n      const bufferG = new Array(256);\n      const bufferB = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        bufferR[i] = mapR[i] / 255;\n        bufferG[i] = mapG[i] / 255;\n        bufferB[i] = mapB[i] / 255;\n      }\n      tableR = bufferR.join(\",\");\n      tableG = bufferG.join(\",\");\n      tableB = bufferB.join(\",\");\n      key = `${tableR}${tableG}${tableB}`;\n    }\n\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n\n    // We create a SVG filter: feComponentTransferElement\n    //  https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement\n\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = `url(#${id})`;\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n\n    return url;\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    if (this.#hcmKey === key) {\n      return this.#hcmUrl;\n    }\n\n    this.#hcmKey = key;\n    this.#hcmUrl = \"none\";\n    this.#hcmFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmUrl;\n    }\n\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n\n    if (\n      (fgColor === \"#000000\" && bgColor === \"#ffffff\") ||\n      fgColor === bgColor\n    ) {\n      return this.#hcmUrl;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n    //\n    // Relative luminance:\n    // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    //\n    // We compute the rounded luminance of the default background color.\n    // Then for every color in the pdf, if its rounded luminance is the\n    // same as the background one then it's replaced by the new\n    // background color else by the foreground one.\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + (i / n) * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(\n      getSteps(0, 5),\n      getSteps(1, 5),\n      getSteps(2, 5),\n      filter\n    );\n\n    this.#hcmUrl = `url(#${id})`;\n    return this.#hcmUrl;\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    if (this.#hcmHighlightKey === key) {\n      return this.#hcmHighlightUrl;\n    }\n\n    this.#hcmHighlightKey = key;\n    this.#hcmHighlightUrl = \"none\";\n    this.#hcmHighlightFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmHighlightUrl;\n    }\n\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(\n      0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]\n    );\n    let bgGray = Math.round(\n      0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]\n    );\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(\n      this.#getRGB.bind(this)\n    );\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [\n        bgGray,\n        fgGray,\n        newBgRGB,\n        newFgRGB,\n      ];\n    }\n    this.#defs.style.color = \"\";\n\n    // Now we can create the filters to highlight some canvas parts.\n    // The colors in the pdf will almost be Canvas and CanvasText, hence we\n    // want to filter them to finally get Highlight and HighlightText.\n    // Since we're in HCM the background color and the foreground color should\n    // be really different when converted to grayscale (if they're not then it\n    // means that we've a poor contrast). Once the canvas colors are converted\n    // to grayscale we can easily map them on their new colors.\n    // The grayscale step is important because if we've something like:\n    //   fgColor = #FF....\n    //   bgColor = #FF....\n    //   then we are enable to map the red component on the new red components\n    //   which can be different.\n\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n\n    const id = `g_${this.#docId}_hcm_highlight_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(\n      getSteps(newFgRGB[0], newBgRGB[0], 5),\n      getSteps(newFgRGB[1], newBgRGB[1], 5),\n      getSteps(newFgRGB[2], newBgRGB[2], 5),\n      filter\n    );\n\n    this.#hcmHighlightUrl = `url(#${id})`;\n    return this.#hcmHighlightUrl;\n  }\n\n  destroy(keepHCM = false) {\n    if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n      return;\n    }\n    if (this.#_defs) {\n      this.#_defs.parentNode.parentNode.remove();\n      this.#_defs = null;\n    }\n    if (this.#_cache) {\n      this.#_cache.clear();\n      this.#_cache = null;\n    }\n    this.#id = 0;\n  }\n\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(\n      SVG_NS,\n      \"feColorMatrix\"\n    );\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\n      \"values\",\n      \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"\n    );\n    filter.append(feColorMatrix);\n  }\n\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n\n    return filter;\n  }\n\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(\n      SVG_NS,\n      \"feComponentTransfer\"\n    );\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * The original, un-scaled, viewport dimensions.\n   * @type {Object}\n   */\n  get rawDims() {\n    const { viewBox } = this;\n    return shadow(this, \"rawDims\", {\n      pageWidth: viewBox[2] - viewBox[0],\n      pageHeight: viewBox[3] - viewBox[1],\n      pageX: viewBox[0],\n      pageY: viewBox[1],\n    });\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @param {boolean} [onlyStripPath]\n * @returns {string}\n */\nfunction getFilenameFromUrl(url, onlyStripPath = false) {\n  if (!onlyStripPath) {\n    [url] = url.split(/[#?]/, 1);\n  }\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  started = Object.create(null);\n\n  times = [];\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const { name } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const { name, start, end } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: isValidFetchUrl\");\n  }\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).append(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    pdfDateStringRegex ||= new RegExp(\n      \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n        \"'?\" // Trailing apostrophe (optional)\n    );\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [\n      (colorRGB & 0xff0000) >> 16,\n      (colorRGB & 0x00ff00) >> 8,\n      colorRGB & 0x0000ff,\n    ];\n  }\n\n  if (color.startsWith(\"rgb(\")) {\n    // getComputedStyle(...).color returns a `rgb(R, G, B)` color.\n    return color\n      .slice(/* \"rgb(\".length */ 4, -1) // Strip out \"rgb(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x));\n  }\n\n  if (color.startsWith(\"rgba(\")) {\n    return color\n      .slice(/* \"rgba(\".length */ 5, -1) // Strip out \"rgba(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x))\n      .slice(0, 3);\n  }\n\n  warn(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\n\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\n\nfunction getCurrentTransform(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\n\nfunction getCurrentTransformInverse(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\n\n/**\n * @param {HTMLDivElement} div\n * @param {PageViewport} viewport\n * @param {boolean} mustFlip\n * @param {boolean} mustRotate\n */\nfunction setLayerDimensions(\n  div,\n  viewport,\n  mustFlip = false,\n  mustRotate = true\n) {\n  if (viewport instanceof PageViewport) {\n    const { pageWidth, pageHeight } = viewport.rawDims;\n    const { style } = div;\n    const useRound = FeatureTest.isCSSRoundSupported;\n\n    const w = `var(--scale-factor) * ${pageWidth}px`,\n      h = `var(--scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n      heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getColorValues,\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getRGB,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  noContextMenu,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n  StatTimer,\n};\n",
      "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseFilterFactory {\n  constructor() {\n    if (this.constructor === BaseFilterFactory) {\n      unreachable(\"Cannot initialize BaseFilterFactory.\");\n    }\n  }\n\n  addFilter(maps) {\n    return \"none\";\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n\n  destroy(keepHCM = false) {}\n}\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = true }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n",
      "/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n\nimport { isArrayBuffer } from \"./util.js\";\n\nconst SEED = 0xc3d2e1f0;\n// Workaround for missing math precision in JS.\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (isArrayBuffer(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\n        \"Wrong data format in MurmurHash3_64_update. \" +\n          \"Input must be a string or array.\"\n      );\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    // We don't care about endianness here.\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n        k2 = (k2 << 15) | (k2 >>> 17);\n        k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n        h2 ^= k2;\n        h2 = (h2 << 13) | (h2 >>> 19);\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      /* falls through */\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      /* falls through */\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        /* falls through */\n\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n    h2 =\n      ((h2 * 0xff51afd7) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n    h2 =\n      ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n\n    return (\n      (h1 >>> 0).toString(16).padStart(8, \"0\") +\n      (h2 >>> 0).toString(16).padStart(8, \"0\")\n    );\n  }\n}\n\nexport { MurmurHash3_64 };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  FeatureTest,\n  isNodeJS,\n  shadow,\n  string32,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\n\nclass FontLoader {\n  #systemFonts = new Set();\n\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null, // For testing only.\n  }) {\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = new Set();\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n        ? styleElement\n        : null;\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      this.loadingRequests = [];\n      this.loadTestFontId = 0;\n    }\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async loadSystemFont(info) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    assert(\n      !this.disableFontFace,\n      \"loadSystemFont shouldn't be called when `disableFontFace` is set.\"\n    );\n\n    if (this.isFontLoadingAPISupported) {\n      const { loadedName, src, style } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n      } catch {\n        warn(\n          `Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`\n        );\n\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n\n    unreachable(\n      \"Not implemented: loadSystemFont without the Font Loading API.\"\n    );\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || (font.missingFile && !font.systemFontInfo)) {\n      return;\n    }\n    font.attached = true;\n\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font.systemFontInfo);\n      return;\n    }\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        throw new Error(\"Not implemented: async font loading\");\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  get isSyncFontLoadingSupported() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n\n    let supported = false;\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n      if (isNodeJS) {\n        // Node.js - we can pretend that sync font loading is supported.\n        supported = true;\n      } else if (\n        typeof navigator !== \"undefined\" &&\n        // User agent string sniffing is bad, but there is no reliable way to\n        // tell if the font is fully loaded and ready to be used with canvas.\n        /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)\n      ) {\n        // Firefox, from version 14, supports synchronous font loading.\n        supported = true;\n      }\n    }\n    return shadow(this, \"isSyncFontLoadingSupported\", supported);\n  }\n\n  _queueLoadingCallback(callback) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _queueLoadingCallback\");\n    }\n\n    function completeRequest() {\n      assert(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n\n      // Sending all completed requests in order of how they were queued.\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n\n    const { loadingRequests } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback,\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n\n  get _loadTestFont() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _loadTestFont\");\n    }\n\n    // This is a CFF font with 1 glyph for '.' that fills its entire width\n    // and height.\n    const testFont = atob(\n      \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n        \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n        \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n        \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n        \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n        \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n        \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n        \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n        \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n        \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n        \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n        \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n        \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n        \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n        \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n        \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n        \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n    );\n    return shadow(this, \"_loadTestFont\", testFont);\n  }\n\n  _prepareFontLoadEvent(font, request) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _prepareFontLoadEvent\");\n    }\n\n    /** Hack begin */\n    // There's currently no event when a font has finished downloading so the\n    // following code is a dirty hack to 'guess' when a font is ready.\n    // It's assumed fonts are loaded in order, so add a known test font after\n    // the desired fonts and then test for the loading of that test font.\n\n    function int32(data, offset) {\n      return (\n        (data.charCodeAt(offset) << 24) |\n        (data.charCodeAt(offset + 1) << 16) |\n        (data.charCodeAt(offset + 2) << 8) |\n        (data.charCodeAt(offset + 3) & 0xff)\n      );\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n\n    // The temporary canvas is used to determine if fonts are loaded.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n\n    let called = 0;\n    function isFontReady(name, callback) {\n      // With setTimeout clamping this gives the font ~100ms to load.\n      if (++called > 30) {\n        warn(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    // Chromium seems to cache fonts based on a hash of the actual font data,\n    // so the font must be modified for each load test else it will appear to\n    // be loaded already.\n    // TODO: This could maybe be made faster by avoiding the btoa of the full\n    // font by splitting it in chunks before hand and padding the font id.\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n    data = spliceString(\n      data,\n      COMMENT_OFFSET,\n      loadTestFontId.length,\n      loadTestFontId\n    );\n    // CFF checksum is important for IE, adjusting it\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      // align to 4 bytes boundary\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n    /** Hack end */\n  }\n}\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      inspectFont = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._inspectFont = inspectFont;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        // eslint-disable-next-line prefer-spread\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n",
      "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS, warn } from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_utils.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"SKIP_BABEL\")) {\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    try {\n      globalThis.DOMMatrix = __non_webpack_require__(\"canvas\").DOMMatrix;\n    } catch (ex) {\n      warn(`Cannot polyfill \\`DOMMatrix\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n\n  (function checkPath2D() {\n    if (globalThis.Path2D || !isNodeJS) {\n      return;\n    }\n    try {\n      const { CanvasRenderingContext2D } = __non_webpack_require__(\"canvas\");\n      const { polyfillPath2D } = __non_webpack_require__(\"path2d-polyfill\");\n\n      globalThis.CanvasRenderingContext2D = CanvasRenderingContext2D;\n      polyfillPath2D(globalThis);\n    } catch (ex) {\n      warn(`Cannot polyfill \\`Path2D\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n}\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeFilterFactory extends BaseFilterFactory {}\n\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const Canvas = __non_webpack_require__(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\n\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n};\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  isNodeJS,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  PixelsPerInch,\n} from \"./display_utils.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { convertBlackAndWhiteToRGBA } from \"../shared/image_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and schedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\n// To disable Type3 compilation, set the value to `-1`.\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction drawImageAtIntegerCoords(\n  ctx,\n  srcImg,\n  srcX,\n  srcY,\n  srcW,\n  srcH,\n  destX,\n  destY,\n  destW,\n  destH\n) {\n  const [a, b, c, d, tx, ty] = getCurrentTransform(ctx);\n  if (b === 0 && c === 0) {\n    // top-left corner is at (X, Y) and\n    // bottom-right one is at (X + width, Y + height).\n\n    // If leftX is 4.321 then it's rounded to 4.\n    // If width is 10.432 then it's rounded to 11 because\n    // rightX = leftX + width = 14.753 which is rounded to 15\n    // so after rounding the total width is 11 (15 - 4).\n    // It's why we can't just floor/ceil uniformly, it just depends\n    // on the values we've.\n\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n\n    // Some pdf contains images with 1x1 images so in case of 0-width after\n    // scaling we must fallback on 1 to be sure there is something.\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    // We must apply a transformation in order to apply it on the image itself.\n    // For example if a == 1 && d == -1, it means that the image itself is\n    // mirrored w.r.t. the x-axis.\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    // This path is taken in issue9462.pdf (page 3).\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rHeight, rWidth];\n  }\n\n  // Not a scale matrix so let the render handle the case without rounding.\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const { width, height } = imgData;\n  if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const path = new Path2D();\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    path.moveTo(p % width1, i);\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n      path.lineTo(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    --i;\n  }\n\n  // Immediately release the, potentially large, `Uint8Array`s after parsing.\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.fill(path);\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = \"none\";\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = Util.applyTransform(rect, transform);\n    const p2 = Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    const white = 0xffffffff;\n    const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    // The bitmap has been created in the worker.\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  // Slow path: OffscreenCanvas isn't available in the worker.\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n\n    ({ srcPos } = convertBlackAndWhiteToRGBA({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0,\n    }));\n\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n    \"filter\",\n  ];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    !isNodeJS\n  ) {\n    const { filter } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  const composeFn =\n    subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    filterFactory,\n    { optionalContentConfig, markedContentStack = null },\n    annotationCanvasMap,\n    pageColors\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform(...getCurrentTransform(this.compositeCtx));\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        // eslint-disable-next-line prefer-spread\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  #restoreInitialState() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n\n  endDrawing() {\n    this.#restoreInitialState();\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (\n          typeof HTMLCanvasElement !== \"undefined\" &&\n          canvas instanceof HTMLCanvasElement\n        ) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(\n        this.pageColors.foreground,\n        this.pageColors.background\n      );\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(paintWidth / 2);\n        newWidth =\n          paintWidth >= 16384\n            ? Math.floor(paintWidth / 2) - 1 || 1\n            : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        // TODO: see the comment above.\n        newHeight =\n          paintHeight >= 16384\n            ? Math.floor(paintHeight / 2) - 1 || 1\n            : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const { width, height } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = getCurrentTransform(ctx);\n\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      // We're reusing the same image several times, so we can cache it.\n      // In case we've a pattern fill we just keep the scaled version of\n      // the image.\n      // Only the scaling part matters, the translation part is just used\n      // to compute offsets (but not when filling patterns see #15573).\n      // TODO: handle the case of a pattern fill if it's possible.\n      cacheKey = JSON.stringify(\n        isPatternFill\n          ? currentTransform\n          : [currentTransform.slice(0, 4), fillColor]\n      );\n\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(\n          Math.min(currentTransform[0], currentTransform[2]) +\n            currentTransform[4]\n        );\n        const offsetY = Math.round(\n          Math.min(currentTransform[1], currentTransform[3]) +\n            currentTransform[5]\n        );\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY,\n        };\n      }\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n\n    let maskToCanvas = Util.transform(currentTransform, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight\n    );\n    const fillCtx = fillCanvas.context;\n\n    // The offset will be the top-left cordinate mask.\n    // If objToCanvas is [a,b,c,d,e,f] then:\n    //   - offsetX = min(a, c) + e\n    //   - offsetY = min(b, d) + f\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n\n    if (!scaled) {\n      // Pre-scale if needed to improve image smoothing.\n      scaled = this._scaleImage(\n        maskCanvas.canvas,\n        getCurrentTransformInverse(fillCtx)\n      );\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(fillCtx),\n      img.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      fillCtx,\n      scaled,\n      0,\n      0,\n      scaled.width,\n      scaled.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(getCurrentTransformInverse(fillCtx), [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      // The fill canvas is put in the cache associated to the mask image\n      // so we must remove from the cached canvas: it mustn't be used again.\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.current.fillAlpha = value;\n          this.ctx.globalAlpha = value;\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.ctx.filter = this.current.transferMaps =\n            this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform(...getCurrentTransform(this.suspendedCtx));\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedScaleForStroking[0] = -1;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = getCurrentTransform(ctx);\n\n    // Most of the time the current transform is a scaling matrix\n    // so we don't need to transform points before computing min/max:\n    // we can compute min/max first and then smartly \"apply\" the\n    // transform (see Util.scaleMinMax).\n    // For rectangle, moveTo and lineTo, min/max are computed in the\n    // worker (see evaluator.js).\n    const isScalingMatrix =\n      (currentTransform[0] === 0 && currentTransform[3] === 0) ||\n      (currentTransform[1] === 0 && currentTransform[2] === 0);\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            minMaxForBezier\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          getCurrentTransformInverse(ctx),\n          PathType.STROKE\n        );\n        this.rescaleAndStroke(/* saveRestore */ false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(/* saveRestore */ true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (const path of paths) {\n      ctx.setTransform(...path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface =\n      fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform(...patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = (this.pendingTextPaths ||= []);\n      paths.push({\n        transform: getCurrentTransform(ctx),\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      patternTransform = getCurrentTransform(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      ctx.fillText(chars.join(\"\"), 0, 0);\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n\n      return undefined;\n    }\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform\n            );\n          }\n        }\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || getCurrentTransform(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory,\n            this.filterFactory,\n            {\n              optionalContentConfig: this.optionalContentConfig,\n              markedContentStack: this.markedContentStack,\n            }\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.getObject(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      getCurrentTransformInverse(ctx),\n      PathType.SHADING\n    );\n\n    const inv = getCurrentTransformInverse(ctx);\n    if (inv) {\n      const { width, height } = ctx.canvas;\n      const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n        [0, 0, width, height],\n        inv\n      );\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(...matrix);\n    }\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(getCurrentTransform(this.ctx), bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = getCurrentTransform(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      getCurrentTransform(currentCtx)\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = getCurrentTransform(this.ctx);\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    // The annotations are drawn just after the page content.\n    // The page content drawing can potentially have set a transform,\n    // a clipping path, whatever...\n    // So in order to have something clean, we restore the initial state.\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n\n    this.ctx.save();\n    this.save();\n\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          getCurrentTransform(this.ctx)\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform(...transform);\n    this.transform(...matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    img,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = getCurrentTransform(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(\n      1,\n      0,\n      0,\n      1,\n      mask.offsetX - currentTransform[4],\n      mask.offsetY - currentTransform[5]\n    );\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n\n    for (const image of images) {\n      const { data, width, height, transform } = image;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      const img = this.getObject(data, image);\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            getCurrentTransformInverse(ctx),\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        maskCanvas.canvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const { bitmap, width, height } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\n      \"inlineImage\",\n      width,\n      height\n    );\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n\n    return tmpCanvas.canvas;\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      !isNodeJS\n    ) {\n      // The filter, if any, will be applied in applyTransferMapsToBitmap.\n      // It must be applied to the image before rescaling else some artifacts\n      // could appear.\n      // The final restore will reset it to its value.\n      const { filter } = ctx;\n      if (filter !== \"none\" && filter !== \"\") {\n        ctx.filter = \"none\";\n      }\n    }\n\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      // typeof check is needed due to node.js support, see issue #8489\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    const scaled = this._scaleImage(\n      imgToPaint,\n      getCurrentTransformInverse(ctx)\n    );\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(ctx),\n      imgData.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      ctx,\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        imgToPaint,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = getCurrentTransform(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        this._cachedGetSinglePixelWidth =\n          1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    // A pixel has thicknessX = thicknessY = 1;\n    // A transformed pixel is a parallelogram and the thicknesses\n    // corresponds to the heights.\n    // The goal of this function is to rescale before setting the\n    // lineWidth in order to have both thicknesses greater or equal\n    // to 1 after transform.\n    if (this._cachedScaleForStroking[0] === -1) {\n      const { lineWidth } = this.current;\n      const { a, b, c, d } = this.ctx.getTransform();\n      let scaleX, scaleY;\n\n      if (b === 0 && c === 0) {\n        // Fast path\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        // A pixel (base (x, y)) is transformed by M into a parallelogram:\n        //  - its area is |det(M)|;\n        //  - heightY (orthogonal to Mx) has a length: |det(M)| / norm(Mx);\n        //  - heightX (orthogonal to My) has a length: |det(M)| / norm(My).\n        // heightX and heightY are the thicknesses of the transformed pixel\n        // and they must be both greater or equal to 1.\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n\n  // Rescale before stroking in order to have a final lineWidth\n  // with both thicknesses greater or equal to 1.\n  rescaleAndStroke(saveRestore) {\n    const { ctx } = this;\n    const { lineWidth } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n\n    ctx.scale(scaleX, scaleY);\n\n    // How the dashed line is rendered depends on the current transform...\n    // so we added a rescale to handle too thin lines and consequently\n    // the way the line is dashed will be modified.\n    // If scaleX === scaleY, the dashed lines will be rendered correctly\n    // else we'll have some bugs (but only with too thin lines).\n    // Here we take the max... why not taking the min... or something else.\n    // Anyway, as said it's buggy when scaleX !== scaleY.\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n",
      "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, unreachable, Util } from \"../shared/util.js\";\nimport { getCurrentTransform } from \"./display_utils.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        getCurrentTransform(ctx)\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(getCurrentTransform(ctx));\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static MAX_PATTERN_SIZE = 3000;\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 coordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = getCurrentTransform(graphics.ctx);\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(getCurrentTransform(graphics.ctx), [\n      x0,\n      y0,\n      x1,\n      y1,\n    ]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest, ImageKind } from \"./util.js\";\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n\n  return null;\n}\n\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false,\n}) {\n  const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode\n    ? [nonBlackColor, black]\n    : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n  return { srcPos, destPos };\n}\n\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n  if (FeatureTest.isLittleEndian) {\n    // It's a way faster to do the shuffle manually instead of working\n    // component by component with some Uint8 arrays.\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R2B1G1R1\n      const s2 = src32[i + 1]; // G3R3B2G2\n      const s3 = src32[i + 2]; // B4G4R4B3\n\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = (s1 >>> 24) | (s2 << 8) | 0xff000000;\n      dest[destPos + 2] = (s2 >>> 16) | (s3 << 16) | 0xff000000;\n      dest[destPos + 3] = (s3 >>> 8) | 0xff000000;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        src[j] | (src[j + 1] << 8) | (src[j + 2] << 16) | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R1G1B1R2\n      const s2 = src32[i + 1]; // G2B2R3G3\n      const s3 = src32[i + 2]; // B3R4G4B4\n\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = (s1 << 24) | (s2 >>> 8) | 0xff;\n      dest[destPos + 2] = (s2 << 16) | (s3 >>> 16) | 0xff;\n      dest[destPos + 3] = (s3 << 8) | 0xff;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        (src[j] << 24) | (src[j + 1] << 16) | (src[j + 2] << 8) | 0xff;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x10101) | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x1010100) | 0x000000ff;\n    }\n  }\n}\n\nexport { convertBlackAndWhiteToRGBA, convertToRGBA, grayToRGBA };\n",
      "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort = null;\nGlobalWorkerOptions.workerSrc = \"\";\n\nexport { GlobalWorkerOptions };\n",
      "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this.#processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this.#createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = new PromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = new PromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = new PromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = new PromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = new PromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: new PromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull?.());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async #deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall?.promise,\n      streamController.pullCall?.promise,\n      streamController.cancelCall?.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n",
      "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable, warn } from \"../shared/util.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst INTERNAL = Symbol(\"INTERNAL\");\n\nclass OptionalContentGroup {\n  #visible = true;\n\n  constructor(name, intent) {\n    this.name = name;\n    this.intent = intent;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get visible() {\n    return this.#visible;\n  }\n\n  /**\n   * @ignore\n   */\n  _setVisible(internal, visible) {\n    if (internal !== INTERNAL) {\n      unreachable(\"Internal method `_setVisible` called.\");\n    }\n    this.#visible = visible;\n  }\n}\n\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n\n  #groups = new Map();\n\n  #initialHash = null;\n\n  #order = null;\n\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n\n    // The following code must always run *last* in the constructor.\n    this.#initialHash = this.getHash();\n  }\n\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this.#groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n\n    this.#cachedGetHash = null;\n  }\n\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n\n  getGroups() {\n    return this.#groups.size > 0 ? objectFromMap(this.#groups) : null;\n  }\n\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new MurmurHash3_64();\n\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return (this.#cachedGetHash = hash.hexdigest());\n  }\n}\n\nexport { OptionalContentConfig };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../interfaces\").IPDFStream} IPDFStream */\n/** @typedef {import(\"../interfaces\").IPDFStreamReader} IPDFStreamReader */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../interfaces\").IPDFStreamRangeReader} IPDFStreamRangeReader */\n\nimport { assert, PromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(\n    {\n      length,\n      initialData,\n      progressiveDone = false,\n      contentDispositionFilename = null,\n      disableRange = false,\n      disableStream = false,\n    },\n    pdfDataRangeTransport\n  ) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n\n    if (initialData?.length > 0) {\n      // Prevent any possible issues by only transferring a Uint8Array that\n      // completely \"utilizes\" its underlying ArrayBuffer.\n      const buffer =\n        initialData instanceof Uint8Array &&\n        initialData.byteLength === initialData.buffer.byteLength\n          ? initialData.buffer\n          : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData({ begin, chunk }) {\n    // Prevent any possible issues by only transferring a Uint8Array that\n    // completely \"utilizes\" its underlying ArrayBuffer.\n    const buffer =\n      chunk instanceof Uint8Array &&\n      chunk.byteLength === chunk.buffer.byteLength\n        ? chunk.buffer\n        : new Uint8Array(chunk).buffer;\n\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      this._rangeReaders[0]?.onProgress?.({ loaded: evt.loaded });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total,\n      });\n    }\n  }\n\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  PromiseCapability,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (value === undefined) {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  warn(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = new PromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    this._abortController = new AbortController();\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({ loaded: this._loaded });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\nexport { PDFFetchStream };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      Number.isInteger(rangeChunkSize) && rangeChunkSize > 0,\n      \"rangeChunkSize must be an integer larger than zero.\"\n    );\n  }\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n",
      "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replaceAll(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replaceAll(\"_\", \" \");\n          text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, PromiseCapability, stringToBytes } from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return stringToBytes(data).buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const url = __non_webpack_require__(\"url\");\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    this._headersCapability = new PromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({ loaded: this._loaded });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { deprecated, DOMSVGFactory } from \"./display_utils.js\";\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNodeJS,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"SVGGraphics\" shall not be used outside GENERIC builds.'\n  );\n}\n\nconst SVG_DEFAULTS = {\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  fillColor: \"#000000\",\n};\nconst XML_NS = \"http://www.w3.org/XML/1998/namespace\";\nconst XLINK_NS = \"http://www.w3.org/1999/xlink\";\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\nconst createObjectURL = function (\n  data,\n  contentType = \"\",\n  forceDataSchema = false\n) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n};\n\nconst convertImgDataToPng = (function () {\n  const PNG_HEADER = new Uint8Array([\n    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n  ]);\n  const CHUNK_WRAPPER_SIZE = 12;\n\n  const crcTable = new Int32Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let h = 0; h < 8; h++) {\n      c = c & 1 ? 0xedb88320 ^ ((c >> 1) & 0x7fffffff) : (c >> 1) & 0x7fffffff;\n    }\n    crcTable[i] = c;\n  }\n\n  function crc32(data, start, end) {\n    let crc = -1;\n    for (let i = start; i < end; i++) {\n      const a = (crc ^ data[i]) & 0xff;\n      const b = crcTable[a];\n      crc = (crc >>> 8) ^ b;\n    }\n    return crc ^ -1;\n  }\n\n  function writePngChunk(type, body, data, offset) {\n    let p = offset;\n    const len = body.length;\n\n    data[p] = (len >> 24) & 0xff;\n    data[p + 1] = (len >> 16) & 0xff;\n    data[p + 2] = (len >> 8) & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n\n    data.set(body, p);\n    p += body.length;\n\n    const crc = crc32(data, offset + 4, p);\n    data[p] = (crc >> 24) & 0xff;\n    data[p + 1] = (crc >> 16) & 0xff;\n    data[p + 2] = (crc >> 8) & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n\n  function adler32(data, start, end) {\n    let a = 1;\n    let b = 0;\n    for (let i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return (b << 16) | a;\n  }\n\n  /**\n   * @param {Uint8Array} literals The input data.\n   * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n   *   This is the required format for compressed streams in the PNG format:\n   *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n   */\n  function deflateSync(literals) {\n    if (!isNodeJS) {\n      // zlib is certainly not available outside of Node.js. We can either use\n      // the pako library for client-side DEFLATE compression, or use the\n      // canvas API of the browser to obtain a more optimal PNG file.\n      return deflateSyncUncompressed(literals);\n    }\n    try {\n      // NOTE: This implementation is far from perfect, but already way better\n      // than not applying any compression.\n      //\n      // A better algorithm will try to choose a good predictor/filter and\n      // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n      //\n      // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n      // Node v3.0.0   Buffer inherits from Uint8Array.\n      // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n      const input =\n        // eslint-disable-next-line no-undef\n        parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n      const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n        level: 9,\n      });\n      return output instanceof Uint8Array ? output : new Uint8Array(output);\n    } catch (e) {\n      warn(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n    }\n\n    return deflateSyncUncompressed(literals);\n  }\n\n  // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n  function deflateSyncUncompressed(literals) {\n    let len = literals.length;\n    const maxBlockLength = 0xffff;\n\n    const deflateBlocks = Math.ceil(len / maxBlockLength);\n    const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    let pi = 0;\n    idat[pi++] = 0x78; // compression method and flags\n    idat[pi++] = 0x9c; // flags\n\n    let pos = 0;\n    while (len > maxBlockLength) {\n      // writing non-final DEFLATE blocks type 0 and length of 65535\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n\n    // writing non-final DEFLATE blocks type 0\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = (len >> 8) & 0xff;\n    idat[pi++] = ~len & 0xffff & 0xff;\n    idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n\n    const adler = adler32(literals, 0, literals.length); // checksum\n    idat[pi++] = (adler >> 24) & 0xff;\n    idat[pi++] = (adler >> 16) & 0xff;\n    idat[pi++] = (adler >> 8) & 0xff;\n    idat[pi++] = adler & 0xff;\n    return idat;\n  }\n\n  function encode(imgData, kind, forceDataSchema, isMask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    let bitDepth, colorType, lineSize;\n    const bytes = imgData.data;\n\n    switch (kind) {\n      case ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = (width + 7) >> 3;\n        break;\n      case ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error(\"invalid format\");\n    }\n\n    // prefix every row with predictor 0\n    const literals = new Uint8Array((1 + lineSize) * height);\n    let offsetLiterals = 0,\n      offsetBytes = 0;\n    for (let y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0; // no prediction\n      literals.set(\n        bytes.subarray(offsetBytes, offsetBytes + lineSize),\n        offsetLiterals\n      );\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n\n    if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n      // inverting for image masks\n      offsetLiterals = 0;\n      for (let y = 0; y < height; y++) {\n        offsetLiterals++; // skipping predictor\n        for (let i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xff;\n        }\n      }\n    }\n\n    const ihdr = new Uint8Array([\n      (width >> 24) & 0xff,\n      (width >> 16) & 0xff,\n      (width >> 8) & 0xff,\n      width & 0xff,\n      (height >> 24) & 0xff,\n      (height >> 16) & 0xff,\n      (height >> 8) & 0xff,\n      height & 0xff,\n      bitDepth, // bit depth\n      colorType, // color type\n      0x00, // compression method\n      0x00, // filter method\n      0x00, // interlace method\n    ]);\n    const idat = deflateSync(literals);\n\n    // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n    const pngLength =\n      PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n    const data = new Uint8Array(pngLength);\n    let offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk(\"IHDR\", ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk(\"IDATA\", idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n    return createObjectURL(data, \"image/png\", forceDataSchema);\n  }\n\n  // eslint-disable-next-line no-shadow\n  return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n    const kind =\n      imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n    return encode(imgData, kind, forceDataSchema, isMask);\n  };\n})();\n\nclass SVGExtraState {\n  constructor() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n\n    this.textMatrix = IDENTITY_MATRIX;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textMatrixScale = 1;\n\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n\n    // Default foreground and background colors\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = \"#000000\";\n\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = \"\";\n    this.lineCap = \"\";\n    this.miterLimit = 0;\n\n    this.dashArray = [];\n    this.dashPhase = 0;\n\n    this.dependencies = [];\n\n    // Clipping\n    this.activeClipUrl = null;\n    this.clipGroup = null;\n\n    this.maskId = \"\";\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction opListToTree(opList) {\n  let opTree = [];\n  const tmp = [];\n\n  for (const opListElement of opList) {\n    if (opListElement.fn === \"save\") {\n      opTree.push({ fnId: 92, fn: \"group\", items: [] });\n      tmp.push(opTree);\n      opTree = opTree.at(-1).items;\n      continue;\n    }\n\n    if (opListElement.fn === \"restore\") {\n      opTree = tmp.pop();\n    } else {\n      opTree.push(opListElement);\n    }\n  }\n  return opTree;\n}\n\n/**\n * Format a float number as a string.\n *\n * @param value {number} - The float number to format.\n * @returns {string}\n */\nfunction pf(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  const s = value.toFixed(10);\n  let i = s.length - 1;\n  if (s[i] !== \"0\") {\n    return s;\n  }\n\n  // Remove trailing zeros.\n  do {\n    i--;\n  } while (s[i] === \"0\");\n  return s.substring(0, s[i] === \".\" ? i : i + 1);\n}\n\n/**\n * Format a transform matrix as a string. The standard rotation, scale and\n * translation matrices are replaced by their shorter forms, and for\n * identity matrices an empty string is returned to save memory.\n *\n * @param m {Array} - The transform matrix to format.\n * @returns {string}\n */\nfunction pm(m) {\n  if (m[4] === 0 && m[5] === 0) {\n    if (m[1] === 0 && m[2] === 0) {\n      if (m[0] === 1 && m[3] === 1) {\n        return \"\";\n      }\n      return `scale(${pf(m[0])} ${pf(m[3])})`;\n    }\n    if (m[0] === m[3] && m[1] === -m[2]) {\n      const a = (Math.acos(m[0]) * 180) / Math.PI;\n      return `rotate(${pf(a)})`;\n    }\n  } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n    return `translate(${pf(m[4])} ${pf(m[5])})`;\n  }\n  return (\n    `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n    `${pf(m[5])})`\n  );\n}\n\n// The counts below are relevant for all pages, so they have to be global\n// instead of being members of `SVGGraphics` (which is recreated for\n// each page).\nlet clipCount = 0;\nlet maskCount = 0;\nlet shadingCount = 0;\n\nclass SVGGraphics {\n  constructor(commonObjs, objs, forceDataSchema = false) {\n    deprecated(\n      \"The SVG back-end is no longer maintained and *may* be removed in the future.\"\n    );\n    this.svgFactory = new DOMSVGFactory();\n\n    this.current = new SVGExtraState();\n    this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n\n    this.embedFonts = false;\n    this.embeddedFonts = Object.create(null);\n    this.cssStyle = null;\n    this.forceDataSchema = !!forceDataSchema;\n\n    // In `src/shared/util.js` the operator names are mapped to IDs.\n    // The list below represents the reverse of that, i.e., it maps IDs\n    // to operator names.\n    this._operatorIdMapping = [];\n    for (const op in OPS) {\n      this._operatorIdMapping[OPS[op]] = op;\n    }\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  save() {\n    this.transformStack.push(this.transformMatrix);\n    const old = this.current;\n    this.extraStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    this.transformMatrix = this.transformStack.pop();\n    this.current = this.extraStack.pop();\n    this.pendingClip = null;\n    this.tgrp = null;\n  }\n\n  group(items) {\n    this.save();\n    this.executeOpTree(items);\n    this.restore();\n  }\n\n  loadDependencies(operatorList) {\n    const fnArray = operatorList.fnArray;\n    const argsArray = operatorList.argsArray;\n\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      if (fnArray[i] !== OPS.dependency) {\n        continue;\n      }\n\n      for (const obj of argsArray[i]) {\n        const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n        const promise = new Promise(resolve => {\n          objsPool.get(obj, resolve);\n        });\n        this.current.dependencies.push(promise);\n      }\n    }\n    return Promise.all(this.current.dependencies);\n  }\n\n  transform(a, b, c, d, e, f) {\n    const transformMatrix = [a, b, c, d, e, f];\n    this.transformMatrix = Util.transform(\n      this.transformMatrix,\n      transformMatrix\n    );\n    this.tgrp = null;\n  }\n\n  getSVG(operatorList, viewport) {\n    this.viewport = viewport;\n\n    const svgElement = this._initialize(viewport);\n    return this.loadDependencies(operatorList).then(() => {\n      this.transformMatrix = IDENTITY_MATRIX;\n      this.executeOpTree(this.convertOpList(operatorList));\n      return svgElement;\n    });\n  }\n\n  convertOpList(operatorList) {\n    const operatorIdMapping = this._operatorIdMapping;\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    const opList = [];\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      const fnId = fnArray[i];\n      opList.push({\n        fnId,\n        fn: operatorIdMapping[fnId],\n        args: argsArray[i],\n      });\n    }\n    return opListToTree(opList);\n  }\n\n  executeOpTree(opTree) {\n    for (const opTreeElement of opTree) {\n      const fn = opTreeElement.fn;\n      const fnId = opTreeElement.fnId;\n      const args = opTreeElement.args;\n\n      switch (fnId | 0) {\n        case OPS.beginText:\n          this.beginText();\n          break;\n        case OPS.dependency:\n          // Handled in `loadDependencies`, so no warning should be shown.\n          break;\n        case OPS.setLeading:\n          this.setLeading(args);\n          break;\n        case OPS.setLeadingMoveText:\n          this.setLeadingMoveText(args[0], args[1]);\n          break;\n        case OPS.setFont:\n          this.setFont(args);\n          break;\n        case OPS.showText:\n          this.showText(args[0]);\n          break;\n        case OPS.showSpacedText:\n          this.showText(args[0]);\n          break;\n        case OPS.endText:\n          this.endText();\n          break;\n        case OPS.moveText:\n          this.moveText(args[0], args[1]);\n          break;\n        case OPS.setCharSpacing:\n          this.setCharSpacing(args[0]);\n          break;\n        case OPS.setWordSpacing:\n          this.setWordSpacing(args[0]);\n          break;\n        case OPS.setHScale:\n          this.setHScale(args[0]);\n          break;\n        case OPS.setTextMatrix:\n          this.setTextMatrix(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5]\n          );\n          break;\n        case OPS.setTextRise:\n          this.setTextRise(args[0]);\n          break;\n        case OPS.setTextRenderingMode:\n          this.setTextRenderingMode(args[0]);\n          break;\n        case OPS.setLineWidth:\n          this.setLineWidth(args[0]);\n          break;\n        case OPS.setLineJoin:\n          this.setLineJoin(args[0]);\n          break;\n        case OPS.setLineCap:\n          this.setLineCap(args[0]);\n          break;\n        case OPS.setMiterLimit:\n          this.setMiterLimit(args[0]);\n          break;\n        case OPS.setFillRGBColor:\n          this.setFillRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeRGBColor:\n          this.setStrokeRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeColorN:\n          this.setStrokeColorN(args);\n          break;\n        case OPS.setFillColorN:\n          this.setFillColorN(args);\n          break;\n        case OPS.shadingFill:\n          this.shadingFill(args[0]);\n          break;\n        case OPS.setDash:\n          this.setDash(args[0], args[1]);\n          break;\n        case OPS.setRenderingIntent:\n          this.setRenderingIntent(args[0]);\n          break;\n        case OPS.setFlatness:\n          this.setFlatness(args[0]);\n          break;\n        case OPS.setGState:\n          this.setGState(args[0]);\n          break;\n        case OPS.fill:\n          this.fill();\n          break;\n        case OPS.eoFill:\n          this.eoFill();\n          break;\n        case OPS.stroke:\n          this.stroke();\n          break;\n        case OPS.fillStroke:\n          this.fillStroke();\n          break;\n        case OPS.eoFillStroke:\n          this.eoFillStroke();\n          break;\n        case OPS.clip:\n          this.clip(\"nonzero\");\n          break;\n        case OPS.eoClip:\n          this.clip(\"evenodd\");\n          break;\n        case OPS.paintSolidColorImageMask:\n          this.paintSolidColorImageMask();\n          break;\n        case OPS.paintImageXObject:\n          this.paintImageXObject(args[0]);\n          break;\n        case OPS.paintInlineImageXObject:\n          this.paintInlineImageXObject(args[0]);\n          break;\n        case OPS.paintImageMaskXObject:\n          this.paintImageMaskXObject(args[0]);\n          break;\n        case OPS.paintFormXObjectBegin:\n          this.paintFormXObjectBegin(args[0], args[1]);\n          break;\n        case OPS.paintFormXObjectEnd:\n          this.paintFormXObjectEnd();\n          break;\n        case OPS.closePath:\n          this.closePath();\n          break;\n        case OPS.closeStroke:\n          this.closeStroke();\n          break;\n        case OPS.closeFillStroke:\n          this.closeFillStroke();\n          break;\n        case OPS.closeEOFillStroke:\n          this.closeEOFillStroke();\n          break;\n        case OPS.nextLine:\n          this.nextLine();\n          break;\n        case OPS.transform:\n          this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case OPS.constructPath:\n          this.constructPath(args[0], args[1]);\n          break;\n        case OPS.endPath:\n          this.endPath();\n          break;\n        case 92:\n          this.group(opTreeElement.items);\n          break;\n        default:\n          warn(`Unimplemented operator ${fn}`);\n          break;\n      }\n    }\n  }\n\n  setWordSpacing(wordSpacing) {\n    this.current.wordSpacing = wordSpacing;\n  }\n\n  setCharSpacing(charSpacing) {\n    this.current.charSpacing = charSpacing;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    const current = this.current;\n    current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n    current.textMatrixScale = Math.hypot(a, b);\n\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtElement.append(current.tspan);\n  }\n\n  beginText() {\n    const current = this.current;\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.textMatrix = IDENTITY_MATRIX;\n    current.lineMatrix = IDENTITY_MATRIX;\n    current.textMatrixScale = 1;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  moveText(x, y) {\n    const current = this.current;\n    current.x = current.lineX += x;\n    current.y = current.lineY += y;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return;\n    }\n\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    let x = 0;\n    for (const glyph of glyphs) {\n      if (glyph === null) {\n        // Word break\n        x += fontDirection * wordSpacing;\n        continue;\n      } else if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        let vx;\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n        vx = -vx * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (glyph.isInFont || font.missingFile) {\n        current.xcoords.push(current.x + scaledX);\n        if (vertical) {\n          current.ycoords.push(-current.y + scaledY);\n        }\n        current.tspan.textContent += character;\n      } else {\n        // TODO: To assist with text selection, we should replace the missing\n        // character with a space character if charWidth is not zero.\n        // But we cannot just do \"character = ' '\", because the ' ' character\n        // might actually map to a different glyph.\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n\n      x += charWidth;\n    }\n    current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n    if (vertical) {\n      current.tspan.setAttributeNS(\n        null,\n        \"y\",\n        current.ycoords.map(pf).join(\" \")\n      );\n    } else {\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n      current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n    }\n    if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n      current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n    }\n\n    const fillStrokeMode =\n      current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    if (\n      fillStrokeMode === TextRenderingMode.FILL ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n      }\n      if (current.fillAlpha < 1) {\n        current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      }\n    } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n      // Workaround for Firefox: We must set fill=\"transparent\" because\n      // fill=\"none\" would generate an empty clipping path.\n      current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n    } else {\n      current.tspan.setAttributeNS(null, \"fill\", \"none\");\n    }\n\n    if (\n      fillStrokeMode === TextRenderingMode.STROKE ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      const lineWidthScale = 1 / (current.textMatrixScale || 1);\n      this._setStrokeAttributes(current.tspan, lineWidthScale);\n    }\n\n    // Include the text rise in the text matrix since the `pm` function\n    // creates the SVG element's `translate` entry (work on a copy to avoid\n    // altering the original text matrix).\n    let textMatrix = current.textMatrix;\n    if (current.textRise !== 0) {\n      textMatrix = textMatrix.slice();\n      textMatrix[5] += current.textRise;\n    }\n\n    current.txtElement.setAttributeNS(\n      null,\n      \"transform\",\n      `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n    );\n    current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n    current.txtElement.append(current.tspan);\n    current.txtgrp.append(current.txtElement);\n\n    this._ensureTransformGroup().append(current.txtElement);\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  addFontStyle(fontObj) {\n    if (!fontObj.data) {\n      throw new Error(\n        \"addFontStyle: No font data available, \" +\n          'ensure that the \"fontExtraProperties\" API parameter is set.'\n      );\n    }\n    if (!this.cssStyle) {\n      this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n      this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n      this.defs.append(this.cssStyle);\n    }\n\n    const url = createObjectURL(\n      fontObj.data,\n      fontObj.mimetype,\n      this.forceDataSchema\n    );\n    this.cssStyle.textContent +=\n      `@font-face { font-family: \"${fontObj.loadedName}\";` +\n      ` src: url(${url}); }\\n`;\n  }\n\n  setFont(details) {\n    const current = this.current;\n    const fontObj = this.commonObjs.get(details[0]);\n    let size = details[1];\n    current.font = fontObj;\n\n    if (\n      this.embedFonts &&\n      !fontObj.missingFile &&\n      !this.embeddedFonts[fontObj.loadedName]\n    ) {\n      this.addFontStyle(fontObj);\n      this.embeddedFonts[fontObj.loadedName] = fontObj;\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    current.fontSize = size;\n    current.fontFamily = fontObj.loadedName;\n    current.fontWeight = bold;\n    current.fontStyle = italic;\n\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  endText() {\n    const current = this.current;\n    if (\n      current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n      current.txtElement?.hasChildNodes()\n    ) {\n      // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n      current.element = current.txtElement;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  // Path properties\n  setLineWidth(width) {\n    if (width > 0) {\n      this.current.lineWidth = width;\n    }\n  }\n\n  setLineCap(style) {\n    this.current.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.current.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.current.miterLimit = limit;\n  }\n\n  setStrokeAlpha(strokeAlpha) {\n    this.current.strokeAlpha = strokeAlpha;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    this.current.strokeColor = Util.makeHexColor(r, g, b);\n  }\n\n  setFillAlpha(fillAlpha) {\n    this.current.fillAlpha = fillAlpha;\n  }\n\n  setFillRGBColor(r, g, b) {\n    this.current.fillColor = Util.makeHexColor(r, g, b);\n    this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    this.current.xcoords = [];\n    this.current.ycoords = [];\n  }\n\n  setStrokeColorN(args) {\n    this.current.strokeColor = this._makeColorN_Pattern(args);\n  }\n\n  setFillColorN(args) {\n    this.current.fillColor = this._makeColorN_Pattern(args);\n  }\n\n  shadingFill(args) {\n    const { width, height } = this.viewport;\n    const inv = Util.inverseTransform(this.transformMatrix);\n    const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n      [0, 0, width, height],\n      inv\n    );\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", x0);\n    rect.setAttributeNS(null, \"y\", y0);\n    rect.setAttributeNS(null, \"width\", x1 - x0);\n    rect.setAttributeNS(null, \"height\", y1 - y0);\n    rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n    if (this.current.fillAlpha < 1) {\n      rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n    }\n    this._ensureTransformGroup().append(rect);\n  }\n\n  /**\n   * @private\n   */\n  _makeColorN_Pattern(args) {\n    if (args[0] === \"TilingPattern\") {\n      return this._makeTilingPattern(args);\n    }\n    return this._makeShadingPattern(args);\n  }\n\n  /**\n   * @private\n   */\n  _makeTilingPattern(args) {\n    const color = args[1];\n    const operatorList = args[2];\n    const matrix = args[3] || IDENTITY_MATRIX;\n    const [x0, y0, x1, y1] = args[4];\n    const xstep = args[5];\n    const ystep = args[6];\n    const paintType = args[7];\n\n    const tilingId = `shading${shadingCount++}`;\n    const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n      ...Util.applyTransform([x0, y0], matrix),\n      ...Util.applyTransform([x1, y1], matrix),\n    ]);\n    const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n    const txstep = xstep * xscale;\n    const tystep = ystep * yscale;\n\n    const tiling = this.svgFactory.createElement(\"svg:pattern\");\n    tiling.setAttributeNS(null, \"id\", tilingId);\n    tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n    tiling.setAttributeNS(null, \"width\", txstep);\n    tiling.setAttributeNS(null, \"height\", tystep);\n    tiling.setAttributeNS(null, \"x\", `${tx0}`);\n    tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n    // Save current state.\n    const svg = this.svg;\n    const transformMatrix = this.transformMatrix;\n    const fillColor = this.current.fillColor;\n    const strokeColor = this.current.strokeColor;\n\n    const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n    this.svg = bbox;\n    this.transformMatrix = matrix;\n    if (paintType === 2) {\n      const cssColor = Util.makeHexColor(...color);\n      this.current.fillColor = cssColor;\n      this.current.strokeColor = cssColor;\n    }\n    this.executeOpTree(this.convertOpList(operatorList));\n\n    // Restore saved state.\n    this.svg = svg;\n    this.transformMatrix = transformMatrix;\n    this.current.fillColor = fillColor;\n    this.current.strokeColor = strokeColor;\n\n    tiling.append(bbox.childNodes[0]);\n    this.defs.append(tiling);\n    return `url(#${tilingId})`;\n  }\n\n  /**\n   * @private\n   */\n  _makeShadingPattern(args) {\n    if (typeof args === \"string\") {\n      args = this.objs.get(args);\n    }\n    switch (args[0]) {\n      case \"RadialAxial\":\n        const shadingId = `shading${shadingCount++}`;\n        const colorStops = args[3];\n        let gradient;\n\n        switch (args[1]) {\n          case \"axial\":\n            const point0 = args[4];\n            const point1 = args[5];\n            gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"x1\", point0[0]);\n            gradient.setAttributeNS(null, \"y1\", point0[1]);\n            gradient.setAttributeNS(null, \"x2\", point1[0]);\n            gradient.setAttributeNS(null, \"y2\", point1[1]);\n            break;\n          case \"radial\":\n            const focalPoint = args[4];\n            const circlePoint = args[5];\n            const focalRadius = args[6];\n            const circleRadius = args[7];\n            gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n            gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n            gradient.setAttributeNS(null, \"r\", circleRadius);\n            gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n            gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n            gradient.setAttributeNS(null, \"fr\", focalRadius);\n            break;\n          default:\n            throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n        }\n        for (const colorStop of colorStops) {\n          const stop = this.svgFactory.createElement(\"svg:stop\");\n          stop.setAttributeNS(null, \"offset\", colorStop[0]);\n          stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n          gradient.append(stop);\n        }\n        this.defs.append(gradient);\n        return `url(#${shadingId})`;\n      case \"Mesh\":\n        warn(\"Unimplemented pattern Mesh\");\n        return null;\n      case \"Dummy\":\n        return \"hotpink\";\n      default:\n        throw new Error(`Unknown IR type: ${args[0]}`);\n    }\n  }\n\n  setDash(dashArray, dashPhase) {\n    this.current.dashArray = dashArray;\n    this.current.dashPhase = dashPhase;\n  }\n\n  constructPath(ops, args) {\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let d = [];\n    let j = 0;\n\n    for (const op of ops) {\n      switch (op | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          d.push(\n            \"M\",\n            pf(x),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(yh),\n            \"L\",\n            pf(x),\n            pf(yh),\n            \"Z\"\n          );\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"M\", pf(x), pf(y));\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"L\", pf(x), pf(y));\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          d.push(\n            \"C\",\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3]),\n            pf(x),\n            pf(y)\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          d.push(\n            \"C\",\n            pf(x),\n            pf(y),\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3])\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n          j += 4;\n          break;\n        case OPS.closePath:\n          d.push(\"Z\");\n          break;\n      }\n    }\n\n    d = d.join(\" \");\n\n    if (\n      current.path &&\n      ops.length > 0 &&\n      ops[0] !== OPS.rectangle &&\n      ops[0] !== OPS.moveTo\n    ) {\n      // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n      // probably been divided into two OPS.constructPath operators by\n      // OperatorList. Append the commands to the previous path element.\n      d = current.path.getAttributeNS(null, \"d\") + d;\n    } else {\n      current.path = this.svgFactory.createElement(\"svg:path\");\n      this._ensureTransformGroup().append(current.path);\n    }\n\n    current.path.setAttributeNS(null, \"d\", d);\n    current.path.setAttributeNS(null, \"fill\", \"none\");\n\n    // Saving a reference in current.element so that it can be addressed\n    // in 'fill' and 'stroke'\n    current.element = current.path;\n    current.setCurrentPoint(x, y);\n  }\n\n  endPath() {\n    const current = this.current;\n\n    // Painting operators end a path.\n    current.path = null;\n\n    if (!this.pendingClip) {\n      return;\n    }\n    if (!current.element) {\n      this.pendingClip = null;\n      return;\n    }\n\n    // Add the current path to a clipping path.\n    const clipId = `clippath${clipCount++}`;\n    const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n    clipPath.setAttributeNS(null, \"id\", clipId);\n    clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n    // A deep clone is needed when text is used as a clipping path.\n    const clipElement = current.element.cloneNode(true);\n    if (this.pendingClip === \"evenodd\") {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n    } else {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n    }\n    this.pendingClip = null;\n    clipPath.append(clipElement);\n    this.defs.append(clipPath);\n\n    if (current.activeClipUrl) {\n      // The previous clipping group content can go out of order -- resetting\n      // cached clipGroups.\n      current.clipGroup = null;\n      for (const prev of this.extraStack) {\n        prev.clipGroup = null;\n      }\n      // Intersect with the previous clipping path.\n      clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n    }\n    current.activeClipUrl = `url(#${clipId})`;\n\n    this.tgrp = null;\n  }\n\n  clip(type) {\n    this.pendingClip = type;\n  }\n\n  closePath() {\n    const current = this.current;\n    if (current.path) {\n      const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n      current.path.setAttributeNS(null, \"d\", d);\n    }\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setTextRise(textRise) {\n    this.current.textRise = textRise;\n  }\n\n  setTextRenderingMode(textRenderingMode) {\n    this.current.textRenderingMode = textRenderingMode;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value);\n          break;\n        case \"CA\":\n          this.setStrokeAlpha(value);\n          break;\n        case \"ca\":\n          this.setFillAlpha(value);\n          break;\n        default:\n          warn(`Unimplemented graphic state operator ${key}`);\n          break;\n      }\n    }\n  }\n\n  fill() {\n    const current = this.current;\n    if (current.element) {\n      current.element.setAttributeNS(null, \"fill\", current.fillColor);\n      current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      this.endPath();\n    }\n  }\n\n  stroke() {\n    const current = this.current;\n    if (current.element) {\n      this._setStrokeAttributes(current.element);\n      current.element.setAttributeNS(null, \"fill\", \"none\");\n      this.endPath();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setStrokeAttributes(element, lineWidthScale = 1) {\n    const current = this.current;\n    let dashArray = current.dashArray;\n    if (lineWidthScale !== 1 && dashArray.length > 0) {\n      dashArray = dashArray.map(function (value) {\n        return lineWidthScale * value;\n      });\n    }\n    element.setAttributeNS(null, \"stroke\", current.strokeColor);\n    element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n    element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n    element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n    element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n    element.setAttributeNS(\n      null,\n      \"stroke-width\",\n      pf(lineWidthScale * current.lineWidth) + \"px\"\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dasharray\",\n      dashArray.map(pf).join(\" \")\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dashoffset\",\n      pf(lineWidthScale * current.dashPhase) + \"px\"\n    );\n  }\n\n  eoFill() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fill();\n  }\n\n  fillStroke() {\n    // Order is important since stroke wants fill to be none.\n    // First stroke, then if fill needed, it will be overwritten.\n    this.stroke();\n    this.fill();\n  }\n\n  eoFillStroke() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fillStroke();\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.closePath();\n    this.eoFillStroke();\n  }\n\n  paintSolidColorImageMask() {\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", \"1px\");\n    rect.setAttributeNS(null, \"height\", \"1px\");\n    rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n    this._ensureTransformGroup().append(rect);\n  }\n\n  paintImageXObject(objId) {\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(`Dependent image with object ID ${objId} is not ready yet`);\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintInlineImageXObject(imgData, mask) {\n    const width = imgData.width;\n    const height = imgData.height;\n\n    const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n    const cliprect = this.svgFactory.createElement(\"svg:rect\");\n    cliprect.setAttributeNS(null, \"x\", \"0\");\n    cliprect.setAttributeNS(null, \"y\", \"0\");\n    cliprect.setAttributeNS(null, \"width\", pf(width));\n    cliprect.setAttributeNS(null, \"height\", pf(height));\n    this.current.element = cliprect;\n    this.clip(\"nonzero\");\n\n    const imgEl = this.svgFactory.createElement(\"svg:image\");\n    imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n    imgEl.setAttributeNS(null, \"x\", \"0\");\n    imgEl.setAttributeNS(null, \"y\", pf(-height));\n    imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n    imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n    imgEl.setAttributeNS(\n      null,\n      \"transform\",\n      `scale(${pf(1 / width)} ${pf(-1 / height)})`\n    );\n    if (mask) {\n      mask.append(imgEl);\n    } else {\n      this._ensureTransformGroup().append(imgEl);\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    const imgData = this.getObject(img.data, img);\n    if (imgData.bitmap) {\n      warn(\n        \"paintImageMaskXObject: ImageBitmap support is not implemented, \" +\n          \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\"\n      );\n      return;\n    }\n    const current = this.current;\n    const width = imgData.width;\n    const height = imgData.height;\n    const fillColor = current.fillColor;\n\n    current.maskId = `mask${maskCount++}`;\n    const mask = this.svgFactory.createElement(\"svg:mask\");\n    mask.setAttributeNS(null, \"id\", current.maskId);\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", pf(width));\n    rect.setAttributeNS(null, \"height\", pf(height));\n    rect.setAttributeNS(null, \"fill\", fillColor);\n    rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n    this.defs.append(mask);\n    this._ensureTransformGroup().append(rect);\n\n    this.paintInlineImageXObject(imgData, mask);\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(\n        matrix[0],\n        matrix[1],\n        matrix[2],\n        matrix[3],\n        matrix[4],\n        matrix[5]\n      );\n    }\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", bbox[0]);\n      cliprect.setAttributeNS(null, \"y\", bbox[1]);\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {}\n\n  /**\n   * @private\n   */\n  _initialize(viewport) {\n    const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n    // Create the definitions element.\n    const definitions = this.svgFactory.createElement(\"svg:defs\");\n    svg.append(definitions);\n    this.defs = definitions;\n\n    // Create the root group element, which acts a container for all other\n    // groups and applies the viewport transform.\n    const rootGroup = this.svgFactory.createElement(\"svg:g\");\n    rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n    svg.append(rootGroup);\n\n    // For the construction of the SVG image we are only interested in the\n    // root group, so we expose it as the entry point of the SVG image for\n    // the other code in this class.\n    this.svg = rootGroup;\n\n    return svg;\n  }\n\n  /**\n   * @private\n   */\n  _ensureClipGroup() {\n    if (!this.current.clipGroup) {\n      const clipGroup = this.svgFactory.createElement(\"svg:g\");\n      clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n      this.svg.append(clipGroup);\n      this.current.clipGroup = clipGroup;\n    }\n    return this.current.clipGroup;\n  }\n\n  /**\n   * @private\n   */\n  _ensureTransformGroup() {\n    if (!this.tgrp) {\n      this.tgrp = this.svgFactory.createElement(\"svg:g\");\n      this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      if (this.current.activeClipUrl) {\n        this._ensureClipGroup().append(this.tgrp);\n      } else {\n        this.svg.append(this.tgrp);\n      }\n    }\n    return this.tgrp;\n  }\n}\n\nexport { SVGGraphics };\n",
      "/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n",
      "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nimport {\n  AbortException,\n  FeatureTest,\n  PromiseCapability,\n  Util,\n} from \"../shared/util.js\";\nimport { deprecated, setLayerDimensions } from \"./display_utils.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {ReadableStream | TextContent} textContentSource - Text content to\n *   render, i.e. the value returned by the page's `streamTextContent` or\n *   `getTextContent` method.\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *   the `str` property of the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n */\n\n/**\n * Text layer update parameters.\n *\n * @typedef {Object} TextLayerUpdateParameters\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n * @property {boolean} [mustRotate] true if the text layer must be rotated.\n * @property {boolean} [mustRescale] true if the text layer contents must be\n *   rescaled.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\n\nfunction getCtx(size, isOffscreenCanvasSupported) {\n  let ctx;\n  if (isOffscreenCanvasSupported && FeatureTest.isOffscreenCanvasSupported) {\n    ctx = new OffscreenCanvas(size, size).getContext(\"2d\", { alpha: false });\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = size;\n    ctx = canvas.getContext(\"2d\", { alpha: false });\n  }\n\n  return ctx;\n}\n\nfunction getAscent(fontFamily, isOffscreenCanvasSupported) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n\n    ctx.canvas.width = ctx.canvas.height = 0;\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.canvas.width = ctx.canvas.height = 0;\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    fontSize: 0,\n  };\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent =\n    fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n\n  const scaleFactorStr = \"calc(var(--scale-factor)*\";\n  const divStyle = textDiv.style;\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  if (task._container === task._rootContainer) {\n    divStyle.left = `${((100 * left) / task._pageWidth).toFixed(2)}%`;\n    divStyle.top = `${((100 * top) / task._pageHeight).toFixed(2)}%`;\n  } else {\n    // We're in a marked content span, hence we can't use percents.\n    divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n    divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n  }\n  divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n  divStyle.fontFamily = style.fontFamily;\n\n  textDivProperties.fontSize = fontHeight;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (geom.str.length > 1) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._isReadableStream) {\n    task._layoutText(textDiv);\n  }\n}\n\nfunction layout(params) {\n  const { div, scale, properties, ctx, prevFontSize, prevFontFamily } = params;\n  const { style } = div;\n  let transform = \"\";\n  if (properties.canvasWidth !== 0 && properties.hasText) {\n    const { fontFamily } = style;\n    const { canvasWidth, fontSize } = properties;\n\n    if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n      ctx.font = `${fontSize * scale}px ${fontFamily}`;\n      params.prevFontSize = fontSize;\n      params.prevFontFamily = fontFamily;\n    }\n\n    // Only measure the width for multi-char text divs, see `appendText`.\n    const { width } = ctx.measureText(div.textContent);\n\n    if (width > 0) {\n      transform = `scaleX(${(canvasWidth * scale) / width})`;\n    }\n  }\n  if (properties.angle !== 0) {\n    transform = `rotate(${properties.angle}deg) ${transform}`;\n  }\n  if (transform.length > 0) {\n    style.transform = transform;\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    capability.resolve();\n    return;\n  }\n\n  if (!task._isReadableStream) {\n    for (const textDiv of textDivs) {\n      task._layoutText(textDiv);\n    }\n  }\n  capability.resolve();\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContentSource,\n    container,\n    viewport,\n    textDivs,\n    textDivProperties,\n    textContentItemsStr,\n    isOffscreenCanvasSupported,\n  }) {\n    this._textContentSource = textContentSource;\n    this._isReadableStream = textContentSource instanceof ReadableStream;\n    this._container = this._rootContainer = container;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._textDivProperties = textDivProperties || new WeakMap();\n    this._canceled = false;\n    this._capability = new PromiseCapability();\n    this._layoutTextParams = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n      properties: null,\n      ctx: getCtx(0, isOffscreenCanvasSupported),\n    };\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n    this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this._pageWidth = pageWidth;\n    this._pageHeight = pageHeight;\n\n    setLayerDimensions(container, viewport);\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        this._layoutTextParams = null;\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    this._capability.reject(new AbortException(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (const item of items) {\n      if (item.str === undefined) {\n        if (\n          item.type === \"beginMarkedContentProps\" ||\n          item.type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (item.id !== null) {\n            this._container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this._container);\n        } else if (item.type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(item.str);\n      appendText(this, item, styleCache);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = (this._layoutTextParams.properties =\n      this._textDivProperties.get(textDiv));\n    this._layoutTextParams.div = textDiv;\n    layout(this._layoutTextParams);\n\n    if (textDivProperties.hasText) {\n      this._container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.append(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render() {\n    const capability = new PromiseCapability();\n    let styleCache = Object.create(null);\n\n    if (this._isReadableStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentSource.getReader();\n      pump();\n    } else if (this._textContentSource) {\n      const { items, styles } = this._textContentSource;\n      this._processItems(items, styles);\n      capability.resolve();\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      render(this);\n    }, this._capability.reject);\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} params\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(params) {\n  if (\n    (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n    !params.textContentSource &&\n    (params.textContent || params.textContentStream)\n  ) {\n    deprecated(\n      \"The TextLayerRender `textContent`/`textContentStream` parameters \" +\n        \"will be removed in the future, please use `textContentSource` instead.\"\n    );\n    params.textContentSource = params.textContent || params.textContentStream;\n  }\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC && !TESTING\")) {\n    const { container, viewport } = params;\n    const style = getComputedStyle(container);\n    const visibility = style.getPropertyValue(\"visibility\");\n    const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n\n    if (\n      visibility === \"visible\" &&\n      (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)\n    ) {\n      console.error(\n        \"The `--scale-factor` CSS-variable must be set, \" +\n          \"to the same value as `viewport.scale`, \" +\n          \"either on the `container`-element itself or higher up in the DOM.\"\n      );\n    }\n  }\n  const task = new TextLayerRenderTask(params);\n  task._render();\n  return task;\n}\n\n/**\n * @param {TextLayerUpdateParameters} params\n * @returns {undefined}\n */\nfunction updateTextLayer({\n  container,\n  viewport,\n  textDivs,\n  textDivProperties,\n  isOffscreenCanvasSupported,\n  mustRotate = true,\n  mustRescale = true,\n}) {\n  if (mustRotate) {\n    setLayerDimensions(container, { rotation: viewport.rotation });\n  }\n\n  if (mustRescale) {\n    const ctx = getCtx(0, isOffscreenCanvasSupported);\n    const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n    const params = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale,\n      properties: null,\n      ctx,\n    };\n    for (const div of textDivs) {\n      params.properties = textDivProperties.get(div);\n      params.div = div;\n      layout(params);\n    }\n  }\n}\n\nexport { renderTextLayer, TextLayerRenderTask, updateTextLayer };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n/** @typedef {import(\"../display_utils.js\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n/** @typedef {import(\"../../../web/interfaces\").IL10n} IL10n */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../annotation_layer.js\").AnnotationLayer} AnnotationLayer */\n\nimport { AnnotationEditorType, FeatureTest } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextEditor } from \"./freetext.js\";\nimport { InkEditor } from \"./ink.js\";\nimport { setLayerDimensions } from \"../display_utils.js\";\nimport { StampEditor } from \"./stamp.js\";\n\n/**\n * @typedef {Object} AnnotationEditorLayerOptions\n * @property {Object} mode\n * @property {HTMLDivElement} div\n * @property {AnnotationEditorUIManager} uiManager\n * @property {boolean} enabled\n * @property {TextAccessibilityManager} [accessibilityManager]\n * @property {number} pageIndex\n * @property {IL10n} l10n\n * @property {AnnotationLayer} [annotationLayer]\n * @property {PageViewport} viewport\n */\n\n/**\n * @typedef {Object} RenderEditorLayerOptions\n * @property {PageViewport} viewport\n */\n\n/**\n * Manage all the different editors on a page.\n */\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n\n  #allowClick = false;\n\n  #annotationLayer = null;\n\n  #boundPointerup = this.pointerup.bind(this);\n\n  #boundPointerdown = this.pointerdown.bind(this);\n\n  #editors = new Map();\n\n  #hadPointerDown = false;\n\n  #isCleaningUp = false;\n\n  #isDisabling = false;\n\n  #uiManager;\n\n  static _initialized = false;\n\n  /**\n   * @param {AnnotationEditorLayerOptions} options\n   */\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    accessibilityManager,\n    annotationLayer,\n    viewport,\n    l10n,\n  }) {\n    const editorTypes = [FreeTextEditor, InkEditor, StampEditor];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n\n    this.#uiManager.addLayer(this);\n  }\n\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   */\n  updateToolbar(mode) {\n    this.#uiManager.updateToolbar(mode);\n  }\n\n  /**\n   * The mode has changed: it must be updated.\n   * @param {number} mode\n   */\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    if (mode === AnnotationEditorType.INK) {\n      // We always want to an ink editor ready to draw in.\n      this.addInkEditorIfNeeded(false);\n      this.disableClick();\n    } else {\n      this.enableClick();\n    }\n\n    if (mode !== AnnotationEditorType.NONE) {\n      this.div.classList.toggle(\n        \"freeTextEditing\",\n        mode === AnnotationEditorType.FREETEXT\n      );\n      this.div.classList.toggle(\n        \"inkEditing\",\n        mode === AnnotationEditorType.INK\n      );\n      this.div.classList.toggle(\n        \"stampEditing\",\n        mode === AnnotationEditorType.STAMP\n      );\n      this.div.hidden = false;\n    }\n  }\n\n  addInkEditorIfNeeded(isCommitting) {\n    if (\n      !isCommitting &&\n      this.#uiManager.getMode() !== AnnotationEditorType.INK\n    ) {\n      return;\n    }\n\n    if (!isCommitting) {\n      // We're removing an editor but an empty one can already exist so in this\n      // case we don't need to create a new one.\n      for (const editor of this.#editors.values()) {\n        if (editor.isEmpty()) {\n          editor.setInBackground();\n          return;\n        }\n      }\n    }\n\n    const editor = this.#createAndAddNewEditor(\n      { offsetX: 0, offsetY: 0 },\n      /* isCentered = */ false\n    );\n    editor.setInBackground();\n  }\n\n  /**\n   * Set the editing state.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n\n  /**\n   * Enable pointer events on the main div in order to enable\n   * editor creation.\n   */\n  enable() {\n    this.div.style.pointerEvents = \"auto\";\n    const annotationElementIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.enableEditing();\n      if (editor.annotationElementId) {\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n\n    if (!this.#annotationLayer) {\n      return;\n    }\n\n    const editables = this.#annotationLayer.getEditableAnnotations();\n    for (const editable of editables) {\n      // The element must be hidden whatever its state is.\n      editable.hide();\n      if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n        continue;\n      }\n      if (annotationElementIds.has(editable.data.id)) {\n        continue;\n      }\n      const editor = this.deserialize(editable);\n      if (!editor) {\n        continue;\n      }\n      this.addOrRebuild(editor);\n      editor.enableEditing();\n    }\n  }\n\n  /**\n   * Disable editor creation.\n   */\n  disable() {\n    this.#isDisabling = true;\n    this.div.style.pointerEvents = \"none\";\n    const hiddenAnnotationIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.disableEditing();\n      if (!editor.annotationElementId || editor.serialize() !== null) {\n        hiddenAnnotationIds.add(editor.annotationElementId);\n        continue;\n      }\n      this.getEditableAnnotation(editor.annotationElementId)?.show();\n      editor.remove();\n    }\n\n    if (this.#annotationLayer) {\n      // Show the annotations that were hidden in enable().\n      const editables = this.#annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const { id } = editable.data;\n        if (\n          hiddenAnnotationIds.has(id) ||\n          this.#uiManager.isDeletedAnnotationElement(id)\n        ) {\n          continue;\n        }\n        editable.show();\n      }\n    }\n\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    this.#isDisabling = false;\n  }\n\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n\n  /**\n   * Set the current editor.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n\n    this.#uiManager.setActiveEditor(editor);\n  }\n\n  enableClick() {\n    this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  disableClick() {\n    this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const { annotationElementId } = editor;\n    if (\n      annotationElementId &&\n      this.#uiManager.isDeletedAnnotationElement(annotationElementId)\n    ) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  remove(editor) {\n    // Since we can undo a removal we need to keep the\n    // parent property as it is, so don't null it!\n\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    if (editor.div.contains(document.activeElement)) {\n      setTimeout(() => {\n        // When the div is removed from DOM the focus can move on the\n        // document.body, so we need to move it back to the main container.\n        this.#uiManager.focusMainContainer();\n      }, 0);\n    }\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n\n    if (!this.#isCleaningUp) {\n      this.addInkEditorIfNeeded(/* isCommitting = */ false);\n    }\n  }\n\n  /**\n   * An editor can have a different parent, for example after having\n   * being dragged and droped from a page to another.\n   * @param {AnnotationEditor} editor\n   */\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n\n    if (editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n\n  /**\n   * Add a new editor in the current view.\n   * @param {AnnotationEditor} editor\n   */\n  add(editor) {\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n\n    // The editor will be correctly moved into the DOM (see fixAndSetPosition).\n    editor.fixAndSetPosition();\n    editor.onceAdded();\n    this.#uiManager.addToAnnotationStorage(editor);\n  }\n\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n\n    const { activeElement } = document;\n    if (editor.div.contains(activeElement)) {\n      // When the div is moved in the DOM the focus can move somewhere else,\n      // so we want to be sure that the focus will stay on the editor but we\n      // don't want to call any focus callbacks, hence we disable them and only\n      // re-enable them when the editor has the focus.\n      editor._focusEventsAllowed = false;\n      setTimeout(() => {\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\n            \"focusin\",\n            () => {\n              editor._focusEventsAllowed = true;\n            },\n            { once: true }\n          );\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      editor.div,\n      editor.contentDiv,\n      /* isRemovable = */ true\n    );\n  }\n\n  /**\n   * Add or rebuild depending if it has been removed or not.\n   * @param {AnnotationEditor} editor\n   */\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.rebuild();\n    } else {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Add a new editor and make this addition undoable.\n   * @param {AnnotationEditor} editor\n   */\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n\n    this.addCommands({ cmd, undo, mustExec: false });\n  }\n\n  /**\n   * Get an id for an editor.\n   * @returns {string}\n   */\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} params\n   * @returns {AnnotationEditor}\n   */\n  #createNewEditor(params) {\n    switch (this.#uiManager.getMode()) {\n      case AnnotationEditorType.FREETEXT:\n        return new FreeTextEditor(params);\n      case AnnotationEditorType.INK:\n        return new InkEditor(params);\n      case AnnotationEditorType.STAMP:\n        return new StampEditor(params);\n    }\n    return null;\n  }\n\n  /**\n   * Paste some content into a new editor.\n   * @param {number} mode\n   * @param {Object} params\n   */\n  pasteEditor(mode, params) {\n    this.#uiManager.updateToolbar(mode);\n    this.#uiManager.updateMode(mode);\n\n    const { offsetX, offsetY } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} data\n   * @returns {AnnotationEditor}\n   */\n  deserialize(data) {\n    switch (data.annotationType ?? data.annotationEditorType) {\n      case AnnotationEditorType.FREETEXT:\n        return FreeTextEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.INK:\n        return InkEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.STAMP:\n        return StampEditor.deserialize(data, this, this.#uiManager);\n    }\n    return null;\n  }\n\n  /**\n   * Create and add a new editor.\n   * @param {PointerEvent} event\n   * @param {boolean} isCentered\n   * @returns {AnnotationEditor}\n   */\n  #createAndAddNewEditor(event, isCentered) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n\n    return editor;\n  }\n\n  #getCenterPoint() {\n    const { x, y, width, height } = this.div.getBoundingClientRect();\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] =\n      this.viewport.rotation % 180 === 0\n        ? [centerX, centerY]\n        : [centerY, centerX];\n\n    return { offsetX, offsetY };\n  }\n\n  /**\n   * Create and add a new editor.\n   */\n  addNewEditor() {\n    this.#createAndAddNewEditor(\n      this.#getCenterPoint(),\n      /* isCentered = */ true\n    );\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#uiManager.isSelected(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n\n  /**\n   * Pointerup callback.\n   * @param {PointerEvent} event\n   */\n  pointerup(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Don't create an editor on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    if (!this.#hadPointerDown) {\n      // It can happen when the user starts a drag inside a text editor\n      // and then releases the mouse button outside of it. In such a case\n      // we don't want to create a new editor, hence we check that a pointerdown\n      // occurred on this div previously.\n      return;\n    }\n    this.#hadPointerDown = false;\n\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n\n    if (this.#uiManager.getMode() === AnnotationEditorType.STAMP) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n\n    this.#createAndAddNewEditor(event, /* isCentered = */ false);\n  }\n\n  /**\n   * Pointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    if (this.#hadPointerDown) {\n      // It's possible to have a second pointerdown event before a pointerup one\n      // when the user puts a finger on a touchscreen and then add a second one\n      // to start a pinch-to-zoom gesture.\n      // That said, in case it's possible to have two pointerdown events with\n      // a mouse, we don't want to create a new editor in such a case either.\n      this.#hadPointerDown = false;\n      return;\n    }\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Do nothing on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    this.#hadPointerDown = true;\n\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n\n  /**\n   *\n   * @param {AnnotationEditor} editor\n   * @param {number} x\n   * @param {number} y\n   * @returns\n   */\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n\n  /**\n   * Destroy the main editor.\n   */\n  destroy() {\n    if (this.#uiManager.getActive()?.parent === this) {\n      // We need to commit the current editor before destroying the layer.\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n\n  #cleanup() {\n    // When we're cleaning up, some editors are removed but we don't want\n    // to add a new one which will induce an addition in this.#editors, hence\n    // an infinite loop.\n    this.#isCleaningUp = true;\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n    this.#isCleaningUp = false;\n  }\n\n  /**\n   * Render the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  render({ viewport }) {\n    this.viewport = viewport;\n    setLayerDimensions(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n    }\n    this.updateMode();\n  }\n\n  /**\n   * Update the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  update({ viewport }) {\n    // Editors have their dimensions/positions in percent so to avoid any\n    // issues (see #15582), we must commit the current one before changing\n    // the viewport.\n    this.#uiManager.commitOrRemove();\n\n    this.viewport = viewport;\n    setLayerDimensions(this.div, { rotation: viewport.rotation });\n    this.updateMode();\n  }\n\n  /**\n   * Get page dimensions.\n   * @returns {Object} dimensions.\n   */\n  get pageDimensions() {\n    const { pageWidth, pageHeight } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n}\n\nexport { AnnotationEditorLayer };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  assert,\n  LINE_FACTOR,\n  shadow,\n  Util,\n} from \"../../shared/util.js\";\nimport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  KeyboardManager,\n} from \"./tools.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass FreeTextEditor extends AnnotationEditor {\n  #boundEditorDivBlur = this.editorDivBlur.bind(this);\n\n  #boundEditorDivFocus = this.editorDivFocus.bind(this);\n\n  #boundEditorDivInput = this.editorDivInput.bind(this);\n\n  #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n\n  #color;\n\n  #content = \"\";\n\n  #editorDivId = `${this.id}-editor`;\n\n  #fontSize;\n\n  #initialData = null;\n\n  static _freeTextDefaultContent = \"\";\n\n  static _internalPadding = 0;\n\n  static _defaultColor = null;\n\n  static _defaultFontSize = 10;\n\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n\n    const arrowChecker = self => self.isEmpty();\n\n    const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [\n          // Commit the text in case the user use ctrl+s to save the document.\n          // The event must bubble in order to be caught by the viewer.\n          // See bug 1831574.\n          [\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"],\n          proto.commitOrRemove,\n          { bubbles: true },\n        ],\n        [\n          [\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"],\n          proto.commitOrRemove,\n        ],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  static _type = \"freetext\";\n\n  constructor(params) {\n    super({ ...params, name: \"freeTextEditor\" });\n    this.#color =\n      params.color ||\n      FreeTextEditor._defaultColor ||\n      AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"],\n    });\n    const style = getComputedStyle(document.documentElement);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      const lineHeight = parseFloat(\n        style.getPropertyValue(\"--freetext-line-height\")\n      );\n      assert(\n        lineHeight === LINE_FACTOR,\n        \"Update the CSS variable to agree with the constant.\"\n      );\n    }\n\n    this._internalPadding = parseFloat(\n      style.getPropertyValue(\"--freetext-padding\")\n    );\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.FREETEXT_SIZE,\n        FreeTextEditor._defaultFontSize,\n      ],\n      [\n        AnnotationEditorParamsType.FREETEXT_COLOR,\n        FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize],\n      [AnnotationEditorParamsType.FREETEXT_COLOR, this.#color],\n    ];\n  }\n\n  /**\n   * Update the font size and make this action as undoable.\n   * @param {number} fontSize\n   */\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: () => {\n        setFontsize(fontSize);\n      },\n      undo: () => {\n        setFontsize(savedFontsize);\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.#color;\n    this.addCommands({\n      cmd: () => {\n        this.#color = this.editorDiv.style.color = color;\n      },\n      undo: () => {\n        this.#color = this.editorDiv.style.color = savedColor;\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Helper to translate the editor with the keyboard when it's empty.\n   * @param {number} x in page units.\n   * @param {number} y in page units.\n   */\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, /* noCommit = */ true);\n  }\n\n  /** @inheritdoc */\n  getInitialTranslation() {\n    // The start of the base line is where the user clicked.\n    const scale = this.parentScale;\n    return [\n      -FreeTextEditor._internalPadding * scale,\n      -(FreeTextEditor._internalPadding + this.#fontSize) * scale,\n    ];\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(false);\n    this.parent.updateToolbar(AnnotationEditorType.FREETEXT);\n    super.enableEditMode();\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(true);\n    super.disableEditMode();\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n\n    // On Chrome, the focus is given to <body> when contentEditable is set to\n    // false, hence we focus the div.\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n\n    // In case the blur callback hasn't been called.\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freeTextEditing\");\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    if (this.width) {\n      this.#cheatInitialRect();\n      // The editor was created in using ctrl+c.\n      return;\n    }\n    this.enableEditMode();\n    this.editorDiv.focus();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n\n  /** @inheritdoc */\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freeTextEditing\");\n    }\n    super.remove();\n  }\n\n  /**\n   * Extract the text from this editor.\n   * @returns {string}\n   */\n  #extractText() {\n    const divs = this.editorDiv.getElementsByTagName(\"div\");\n    if (divs.length === 0) {\n      return this.editorDiv.innerText;\n    }\n    const buffer = [];\n    for (const div of divs) {\n      buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n    }\n    return buffer.join(\"\\n\");\n  }\n\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      // This editor isn't on screen but we need to get its dimensions, so\n      // we just insert it in the DOM, get its bounding box and then remove it.\n      const { currentLayer, div } = this;\n      const savedDisplay = div.style.display;\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n    }\n\n    // The dimensions are relative to the rotation of the page, hence we need to\n    // take that into account (see issue #16636).\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Commit the content we have in this editor.\n   * @returns {undefined}\n   */\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = (this.#content = this.#extractText().trimEnd());\n    if (savedText === newText) {\n      return;\n    }\n\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false,\n    });\n    this.#setEditorDimensions();\n  }\n\n  /** @inheritdoc */\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n\n  /** @inheritdoc */\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n\n  /**\n   * ondblclick callback.\n   * @param {MouseEvent} event\n   */\n  dblclick(event) {\n    this.enterInEditMode();\n  }\n\n  /**\n   * onkeydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      // Avoid to add an unwanted new line.\n      event.preventDefault();\n    }\n  }\n\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n  }\n\n  /** @inheritdoc */\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n\n  /** @inheritdoc */\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.enableEditing();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_free_text2_aria_label\")\n      .then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n\n    AnnotationEditor._l10nPromise\n      .get(\"free_text2_default_content\")\n      .then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n    this.editorDiv.contentEditable = true;\n\n    const { style } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n    style.color = this.#color;\n\n    this.div.append(this.editorDiv);\n\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n\n    // TODO: implement paste callback.\n    // The goal is to sanitize and have something suitable for this\n    // editor.\n    bindEvents(this, this.div, [\"dblclick\", \"keydown\"]);\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        // This stuff is hard to test: if something is changed here, please\n        // test with the following PDF file:\n        //  - freetexts.pdf\n        //  - rotated_freetexts.pdf\n        // Only small variations between the original annotation and its editor\n        // are allowed.\n\n        // position is the position of the first glyph in the annotation\n        // and it's relative to its container.\n        const { position } = this.#initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX =\n              baseX +\n              (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY =\n              baseY +\n              (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this.setAt(\n          baseX * parentWidth,\n          baseY * parentHeight,\n          this.width * parentWidth,\n          this.height * parentHeight\n        );\n      }\n\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.div.setAttribute(\"annotation-id\", this.annotationElementId);\n    }\n\n    return this.div;\n  }\n\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(\n        line ? document.createTextNode(line) : document.createElement(\"br\")\n      );\n      this.editorDiv.append(div);\n    }\n  }\n\n  get contentDiv() {\n    return this.editorDiv;\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: { fontSize, fontColor },\n          rect,\n          rotation,\n          id,\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: { pageNumber },\n        },\n      } = data;\n      // textContent is supposed to be an array of strings containing each line\n      // of text. However, it can be null or empty.\n      if (!textContent || textContent.length === 0) {\n        // Empty annotation.\n        return null;\n      }\n      initialData = data = {\n        annotationType: AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect,\n        rotation,\n        id,\n        deleted: false,\n      };\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.#fontSize = data.fontSize;\n    editor.#color = Util.makeHexColor(...data.color);\n    editor.#content = data.value;\n    editor.annotationElementId = data.id || null;\n    editor.#initialData = initialData;\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    if (this.deleted) {\n      return {\n        pageIndex: this.pageIndex,\n        id: this.annotationElementId,\n        deleted: true,\n      };\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    const rect = this.getRect(padding, padding);\n    const color = AnnotationEditor._colorManager.convert(\n      this.isAttachedToDOM\n        ? getComputedStyle(this.editorDiv).color\n        : this.#color\n    );\n\n    const serialized = {\n      annotationType: AnnotationEditorType.FREETEXT,\n      color,\n      fontSize: this.#fontSize,\n      value: this.#content,\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // Don't add the id when copying because the pasted editor mustn't be\n      // linked to an existing annotation.\n      return serialized;\n    }\n\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n\n    serialized.id = this.annotationElementId;\n\n    return serialized;\n  }\n\n  #hasElementChanged(serialized) {\n    const { value, fontSize, color, rect, pageIndex } = this.#initialData;\n\n    return (\n      serialized.value !== value ||\n      serialized.fontSize !== fontSize ||\n      serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) ||\n      serialized.color.some((c, i) => c !== color[i]) ||\n      serialized.pageIndex !== pageIndex\n    );\n  }\n\n  #cheatInitialRect(delayed = false) {\n    // The annotation has a rect but the editor has an other one.\n    // When we want to know if the annotation has changed (e.g. has been moved)\n    // we must compare the editor initial rect with the current one.\n    // So this method is a hack to have a way to compare the real rects.\n    if (!this.annotationElementId) {\n      return;\n    }\n\n    this.#setEditorDimensions();\n    if (!delayed && (this.width === 0 || this.height === 0)) {\n      setTimeout(() => this.#cheatInitialRect(/* delayed = */ true), 0);\n      return;\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    this.#initialData.rect = this.getRect(padding, padding);\n  }\n}\n\nexport { FreeTextEditor };\n",
      "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationEditorType,\n  AnnotationPrefix,\n  AnnotationType,\n  FeatureTest,\n  LINE_FACTOR,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n  setLayerDimensions,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { NullL10n } from \"display-l10n_utils\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  #hasBorder = false;\n\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n\n  static _hasPopupData({ titleObj, contentsObj, richText }) {\n    return !!(titleObj?.str || contentsObj?.str || richText?.str);\n  }\n\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data);\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLElement} A section element.\n   */\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: { page, viewport },\n    } = this;\n\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement)) {\n      container.tabIndex = DEFAULT_TAB_INDEX;\n    }\n\n    // The accessibility manager will move the annotation in the DOM in\n    // order to match the visual ordering.\n    // But if an annotation is above an other one, then we must draw it\n    // after the other one whatever the order is in the DOM, hence the\n    // use of the z-index.\n    container.style.zIndex = this.parent.zIndex++;\n\n    if (this.data.popupRef) {\n      container.setAttribute(\"aria-haspopup\", \"dialog\");\n    }\n\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const { rotation } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n\n    const { width, height } = getRectDims(data.rect);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        container.style.borderColor = Util.makeHexColor(\n          borderColor[0] | 0,\n          borderColor[1] | 0,\n          borderColor[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n    container.style.top = `${(100 * (rect[1] - pageY)) / pageHeight}%`;\n\n    const { rotation } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      container.style.width = `${(100 * width) / pageWidth}%`;\n      container.style.height = `${(100 * height) / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n\n    return container;\n  }\n\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n    const { width, height } = getRectDims(this.data.rect);\n\n    let elementWidth, elementHeight;\n    if (angle % 180 === 0) {\n      elementWidth = (100 * width) / pageWidth;\n      elementHeight = (100 * height) / pageHeight;\n    } else {\n      elementWidth = (100 * height) / pageWidth;\n      elementHeight = (100 * width) / pageHeight;\n    }\n\n    container.style.width = `${elementWidth}%`;\n    container.style.height = `${elementHeight}%`;\n\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] =\n        ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: ColorConverters[`${colorType}_rgb`](colorArray),\n      });\n    };\n\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const { display } = event.detail;\n        // See scripting/constants.js for the values of `Display`.\n        // 0 = visible, 1 = hidden, 2 = noPrint and 3 = noView.\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print,\n        });\n      },\n      hidden: event => {\n        const { hidden } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle,\n        });\n      },\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    // Some properties may have been updated thanks to JS.\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail,\n          },\n          target: element,\n        };\n        action(eventProxy);\n        // The action has been consumed: no need to keep it.\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const { quadPoints } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n\n    if (quadPoints.length === 1) {\n      const [, { x: trX, y: trY }, { x: blX, y: blY }] = quadPoints[0];\n      if (\n        rectTrX === trX &&\n        rectTrY === trY &&\n        rectBlX === blX &&\n        rectBlY === blY\n      ) {\n        // The quadpoints cover the whole annotation rectangle, so no need to\n        // create a quadrilateral.\n        return;\n      }\n    }\n\n    const { style } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const { borderColor, borderWidth } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\n        \"url('data:image/svg+xml;utf8,\",\n        `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n        ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n        `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`,\n      ];\n      this.container.classList.add(\"hasBorder\");\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.container.classList.add(\"hasClipPath\");\n    }\n\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n\n    const { svgFactory } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n\n    for (const [, { x: trX, y: trY }, { x: blX, y: blY }] of quadPoints) {\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(\n        `<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`\n      );\n    }\n\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createPopup() {\n    const { container, data } = this;\n    container.setAttribute(\"aria-haspopup\", \"dialog\");\n\n    const popup = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate: data.modificationDate,\n        contentsObj: data.contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation,\n      },\n      parent: this.parent,\n      elements: [this],\n    });\n    this.parent.div.append(popup.render());\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.querySelector(\n            `[data-element-id=\"${id}\"]`\n          );\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { exportValue } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n\n  /**\n   * Get the HTML element(s) which can trigger a popup when clicked or hovered.\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLElement>|HTMLElement} An array of elements or an\n   *          element.\n   */\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n\n  _editOnDoubleClick() {\n    const {\n      annotationEditorType: mode,\n      data: { id: editId },\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId,\n      });\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n      isBound = true;\n    } else if (data.attachment) {\n      this._bindAttachment(link, data.attachment);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n      isBound = true;\n    } else {\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n\n    return this.container;\n  }\n\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      this.#setInternalLink();\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind attachments to the link element.\n   * @param {Object} link\n   * @param {Object} attachment\n   */\n  _bindAttachment(link, attachment) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(\n        this.container,\n        attachment.content,\n        attachment.filename\n      );\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind SetOCGState actions to the link element.\n   * @param {Object} link\n   * @param {Object} action\n   */\n  #bindSetOCGState(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      otherClickAction?.();\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          warn(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n  }\n\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n\n    const image = document.createElement(\"img\");\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.append(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = FeatureTest.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non-mouse events\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n\n        if (!valueGetter) {\n          return;\n        }\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= { focused: false };\n        }\n        this._setEventListener(\n          element,\n          elementData,\n          baseName,\n          eventName,\n          getter\n        );\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          // Ensure that elementData will have the correct value.\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontColor } = this.data.defaultAppearanceData;\n    const fontSize =\n      this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n\n    // We don't use the font, as specified in the PDF document, for the <input>\n    // element. Hence using the original `fontSize` could look bad, which is why\n    // it's instead based on the field height.\n    // If the height is \"big\" then it could lead to a too big font size\n    // so in this case use the one we've in the pdf (hence the min).\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(lineHeight / LINE_FACTOR)\n      );\n    } else {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(height / LINE_FACTOR)\n      );\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.classList.add(\"textWidgetAnnotation\");\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen,\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n\n      let fieldFormattedValues =\n        storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      this._setRequired(element, this.data.required);\n\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n        elementData.formattedValue = null;\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const { formattedValue } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const { target } = event;\n          if (elementData.userValue) {\n            target.value = elementData.userValue;\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          elementData.focused = true;\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const { formattedValue } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (\n                formattedValue !== null &&\n                formattedValue !== undefined &&\n                event.target !== document.activeElement\n              ) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue,\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const { charLimit } = event.detail;\n              const { target } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, { value });\n\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd,\n                },\n              });\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          // If the key is one of Escape, Enter then the data are committed.\n          // If we've a Tab then data will be committed on blur.\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            // When we've a multiline field, \"Enter\" key is a key as the other\n            // hence we don't commit the data (Acrobat behaves the same way)\n            // (see issue #15627).\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const { value } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          // Save the entered value\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n          const { value } = event.target;\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n              case \"deleteWordBackward\": {\n                const match = value\n                  .substring(0, selectionStart)\n                  .match(/\\w*[^\\w]*$/);\n                if (match) {\n                  selStart -= match[0].length;\n                }\n                break;\n              }\n              case \"deleteWordForward\": {\n                const match = value\n                  .substring(selectionStart)\n                  .match(/^[^\\w]*\\w*/);\n                if (match) {\n                  selEnd += match[0].length;\n                }\n                break;\n              }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n\n            // We handle the event ourselves.\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          elementData,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: !!parameters.data.hasOwnCanvas });\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const { options, multiple } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    let selectedValues = getValue(/* isExport */ false);\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(/* isExport */ true);\n        storage.setValue(id, { value: exportValue });\n\n        event.preventDefault();\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        null,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n          [\"input\", \"Validate\"],\n        ],\n        event => event.target.value\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(/* isExport */ true) });\n      });\n    }\n\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {\n      // Just use the default font size...\n      // it's a bit hard to guess what is a good size.\n    }\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const { data, elements } = parameters;\n    super(parameters, { isRenderable: AnnotationElement._hasPopupData(data) });\n    this.elements = elements;\n  }\n\n  render() {\n    this.container.classList.add(\"popupAnnotation\");\n\n    const popup = new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open,\n    });\n\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n\n    this.container.setAttribute(\n      \"aria-controls\",\n      elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\")\n    );\n\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  #dateTimePromise = null;\n\n  #boundKeyDown = this.#keyDown.bind(this);\n\n  #boundHide = this.#hide.bind(this);\n\n  #boundShow = this.#show.bind(this);\n\n  #boundToggle = this.#toggle.bind(this);\n\n  #color = null;\n\n  #container = null;\n\n  #contentsObj = null;\n\n  #elements = null;\n\n  #parent = null;\n\n  #parentRect = null;\n\n  #pinned = false;\n\n  #popup = null;\n\n  #rect = null;\n\n  #richText = null;\n\n  #titleObj = null;\n\n  #wasVisible = false;\n\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open,\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n\n    const dateObject = PDFDateString.toDateObject(modificationDate);\n    if (dateObject) {\n      // The modification date is shown in the popup instead of the creation\n      // date if it is available and can be parsed correctly, which is\n      // consistent with other viewers such as Adobe Acrobat.\n      this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n    }\n\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle);\n      element.addEventListener(\"mouseenter\", this.#boundShow);\n      element.addEventListener(\"mouseleave\", this.#boundHide);\n      element.classList.add(\"popupTriggerArea\");\n    }\n\n    // Attach the event listener to toggle the popup with the keyboard.\n    for (const element of elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n    }\n\n    this.#container.hidden = true;\n    if (open) {\n      this.#toggle();\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // Since the popup is lazily created, we need to ensure that it'll be\n      // created and displayed during reference tests.\n      this.#parent.popupShow.push(async () => {\n        if (this.#container.hidden) {\n          this.#show();\n        }\n        if (this.#dateTimePromise) {\n          await this.#dateTimePromise;\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.#popup) {\n      return;\n    }\n\n    const {\n      page: { view },\n      viewport: {\n        rawDims: { pageWidth, pageHeight, pageX, pageY },\n      },\n    } = this.#parent;\n    const popup = (this.#popup = document.createElement(\"div\"));\n    popup.className = \"popup\";\n\n    if (this.#color) {\n      const baseColor = (popup.style.outlineColor = Util.makeHexColor(\n        ...this.#color\n      ));\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")\n      ) {\n        popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n      } else {\n        // color-mix isn't supported in some browsers hence this version.\n        // See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix#browser_compatibility\n        // TODO: Use color-mix when it's supported everywhere.\n        // Enlighten the color.\n        const BACKGROUND_ENLIGHT = 0.7;\n        popup.style.backgroundColor = Util.makeHexColor(\n          ...this.#color.map(c =>\n            Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)\n          )\n        );\n      }\n    }\n\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    const title = document.createElement(\"h1\");\n    header.append(title);\n    ({ dir: title.dir, str: title.textContent } = this.#titleObj);\n    popup.append(header);\n\n    if (this.#dateTimePromise) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.classList.add(\"popupDate\");\n      this.#dateTimePromise.then(localized => {\n        modificationDate.textContent = localized;\n      });\n      header.append(modificationDate);\n    }\n\n    const contentsObj = this.#contentsObj;\n    const richText = this.#richText;\n    if (\n      richText?.str &&\n      (!contentsObj?.str || contentsObj.str === richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.classList.add(\"richText\", \"popupContent\");\n    } else {\n      const contents = this._formatContents(contentsObj);\n      popup.append(contents);\n    }\n\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n\n    const normalizedRect = Util.normalizeRect([\n      rect[0],\n      view[3] - rect[1] + view[1],\n      rect[2],\n      view[3] - rect[3] + view[1],\n    ]);\n\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect\n      ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION\n      : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n\n    const { style } = this.#container;\n    style.left = `${(100 * (popupLeft - pageX)) / pageWidth}%`;\n    style.top = `${(100 * (popupTop - pageY)) / pageHeight}%`;\n\n    this.#container.append(popup);\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.classList.add(\"popupContent\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    if (event.key === \"Enter\" || (event.key === \"Escape\" && this.#pinned)) {\n      this.#toggle();\n    }\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   */\n  #toggle() {\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n\n  /**\n   * Show the popup.\n   */\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#container.hidden = false;\n      this.#container.style.zIndex =\n        parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n\n  /**\n   * Hide the popup.\n   */\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex =\n      parseInt(this.#container.style.zIndex) - 1000;\n  }\n\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n\n  maybeShow() {\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n\n  get isVisible() {\n    return this.#container.hidden === false;\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = AnnotationEditorType.FREETEXT;\n  }\n\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this._editOnDoubleClick();\n\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = (this.#line = this.svgFactory.createElement(\"svg:line\"));\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = (this.#square = this.svgFactory.createElement(\"svg:rect\"));\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = (this.#circle =\n      this.svgFactory.createElement(\"svg:ellipse\"));\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = (this.#polyline = this.svgFactory.createElement(\n      this.svgElementName\n    ));\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  #polylines = [];\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = AnnotationEditorType.INK;\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      if (!data.popupRef && this.hasPopupData) {\n        this._createPopup();\n      }\n\n      svg.append(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"highlightAnnotation\");\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"underlineAnnotation\");\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"squigglyAnnotation\");\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"strikeoutAnnotation\");\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename, /* onlyStripPath = */ true);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n\n    const { container, data } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      // Unfortunately it seems that it's not clearly specified exactly what\n      // names are actually valid, since Table 184 contains:\n      //   Conforming readers shall provide predefined icon appearances for at\n      //   least the following standard names: GraphPushPin, PaperclipTag.\n      //   Additional names may be supported as well. Default value: PushPin.\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${\n        /paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"\n      }.svg`;\n\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(\n          data.fillAlpha * 100\n        )}%);`;\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          this.container.classList.add(\"hasFillAlpha\");\n        }\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n\n    const { isMac } = FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n\n    container.append(trigger);\n    return container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   */\n  #download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Object<string, Array<Object>> | null} [fieldObjects]\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n * @property {TextAccessibilityManager} [accessibilityManager]\n */\n\n/**\n * Manage the layer containing all the annotations.\n */\nclass AnnotationLayer {\n  #accessibilityManager = null;\n\n  #annotationCanvasMap = null;\n\n  #editableAnnotations = new Map();\n\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    l10n,\n    page,\n    viewport,\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.l10n = l10n;\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC && !TESTING\")\n    ) {\n      this.l10n ||= NullL10n;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"showPopups\", {\n        value: async () => {\n          for (const show of this.popupShow) {\n            await show();\n          }\n        },\n      });\n      this.popupShow = [];\n    }\n  }\n\n  #appendElement(element, id) {\n    const contentElement = element.firstChild || element;\n    contentElement.id = `${AnnotationPrefix}${id}`;\n\n    this.div.append(element);\n    this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      element,\n      contentElement,\n      /* isRemovable = */ false\n    );\n  }\n\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @param {AnnotationLayerParameters} params\n   * @memberof AnnotationLayer\n   */\n  async render(params) {\n    const { annotations } = params;\n    const layer = this.div;\n    setLayerDimensions(layer, this.viewport);\n\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: params.linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new DOMSVGFactory(),\n      annotationStorage: params.annotationStorage || new AnnotationStorage(),\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null,\n    };\n\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        const { width, height } = getRectDims(data.rect);\n        if (width <= 0 || height <= 0) {\n          continue; // Ignore empty annotations.\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          // Ignore popup annotations without a corresponding annotation.\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n\n      if (!element.isRenderable) {\n        continue;\n      }\n\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n\n      if (element.annotationEditorType > 0) {\n        this.#editableAnnotations.set(element.data.id, element);\n      }\n\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      this.#appendElement(rendered, data.id);\n    }\n\n    this.#setAnnotationCanvasMap();\n\n    await this.l10n.translate(layer);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @param {AnnotationLayerParameters} viewport\n   * @memberof AnnotationLayer\n   */\n  update({ viewport }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    setLayerDimensions(layer, { rotation: viewport.rotation });\n\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else {\n        firstChild.before(canvas);\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n}\n\nexport {\n  AnnotationLayer,\n  FreeTextAnnotationElement,\n  InkAnnotationElement,\n  StampAnnotationElement,\n};\n",
      "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static T_rgb() {\n    return [null];\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_rgb([c, y, m, k]) {\n    return [\n      scaleAndClamp(1 - Math.min(1, c + k)),\n      scaleAndClamp(1 - Math.min(1, m + k)),\n      scaleAndClamp(1 - Math.min(1, y + k)),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n",
      "/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `web/` and\n *              `src/display/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\n/**\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\n */\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string:\n    \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string:\n    \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n  rendering_error: \"An error occurred while rendering the page.\",\n\n  annotation_date_string: \"{{date}}, {{time}}\",\n\n  printing_not_supported:\n    \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled:\n    \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n\n  free_text2_default_content: \"Start typing…\",\n  editor_free_text2_aria_label: \"Text Editor\",\n  editor_ink2_aria_label: \"Draw Editor\",\n  editor_ink_canvas_aria_label: \"User-created image\",\n  editor_alt_text_button_label: \"Alt text\",\n  editor_alt_text_edit_button_label: \"Edit alt text\",\n  editor_alt_text_decorative_tooltip: \"Marked as decorative\",\n};\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n  DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n}\n\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\nexport { getL10nFallback, NullL10n };\n",
      "/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_storage\").AnnotationStorage} AnnotationStorage */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          // We don't need to add dataId in the html object but it can\n          // be useful to know its value when writing printing tests:\n          // in this case, don't skip dataId to have its value.\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || (key !== \"href\" && key !== \"newWindow\")) {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure to overwrite any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n\n      const childHtml = child?.attributes?.xmlns\n        ? document.createElementNS(child.attributes.xmlns, name)\n        : document.createElement(name);\n\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  Util,\n} from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { InkAnnotationElement } from \"../annotation_layer.js\";\nimport { noContextMenu } from \"../display_utils.js\";\nimport { opacityToHex } from \"./tools.js\";\n\n/**\n * Basic draw editor in order to generate an Ink annotation.\n */\nclass InkEditor extends AnnotationEditor {\n  #baseHeight = 0;\n\n  #baseWidth = 0;\n\n  #boundCanvasPointermove = this.canvasPointermove.bind(this);\n\n  #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n\n  #boundCanvasPointerup = this.canvasPointerup.bind(this);\n\n  #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n\n  #currentPath2D = new Path2D();\n\n  #disableEditing = false;\n\n  #hasSomethingToDraw = false;\n\n  #isCanvasInitialized = false;\n\n  #observer = null;\n\n  #realWidth = 0;\n\n  #realHeight = 0;\n\n  #requestFrameCallback = null;\n\n  static _defaultColor = null;\n\n  static _defaultOpacity = 1;\n\n  static _defaultThickness = 1;\n\n  static _type = \"ink\";\n\n  constructor(params) {\n    super({ ...params, name: \"inkEditor\" });\n    this.color = params.color || null;\n    this.thickness = params.thickness || null;\n    this.opacity = params.opacity || null;\n    this.paths = [];\n    this.bezierPath2D = [];\n    this.allRawPaths = [];\n    this.currentPath = [];\n    this.scaleFactor = 1;\n    this.translationX = this.translationY = 0;\n    this.x = 0;\n    this.y = 0;\n    this._willKeepAspectRatio = true;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"],\n    });\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        InkEditor._defaultThickness = value;\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        InkEditor._defaultColor = value;\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        InkEditor._defaultOpacity = value / 100;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        this.#updateThickness(value);\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        this.#updateColor(value);\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        this.#updateOpacity(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(InkEditor._defaultOpacity * 100),\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.INK_THICKNESS,\n        this.thickness || InkEditor._defaultThickness,\n      ],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        this.color ||\n          InkEditor._defaultColor ||\n          AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity)),\n      ],\n    ];\n  }\n\n  /**\n   * Update the thickness and make this action undoable.\n   * @param {number} thickness\n   */\n  #updateThickness(thickness) {\n    const savedThickness = this.thickness;\n    this.addCommands({\n      cmd: () => {\n        this.thickness = thickness;\n        this.#fitToContent();\n      },\n      undo: () => {\n        this.thickness = savedThickness;\n        this.#fitToContent();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: () => {\n        this.color = color;\n        this.#redraw();\n      },\n      undo: () => {\n        this.color = savedColor;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the opacity and make this action undoable.\n   * @param {number} opacity\n   */\n  #updateOpacity(opacity) {\n    opacity /= 100;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: () => {\n        this.opacity = opacity;\n        this.#redraw();\n      },\n      undo: () => {\n        this.opacity = savedOpacity;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_OPACITY,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.canvas) {\n      this.#createCanvas();\n      this.#createObserver();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilding it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n      this.#setCanvasDims();\n    }\n    this.#fitToContent();\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.canvas === null) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n\n    // Destroy the canvas.\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.remove();\n    this.canvas = null;\n\n    this.#observer.disconnect();\n    this.#observer = null;\n\n    super.remove();\n  }\n\n  setParent(parent) {\n    if (!this.parent && parent) {\n      // We've a parent hence the rescale will be handled thanks to the\n      // ResizeObserver.\n      this._uiManager.removeShouldRescale(this);\n    } else if (this.parent && parent === null) {\n      // The editor is removed from the DOM, hence we handle the rescale thanks\n      // to the onScaleChanging callback.\n      // This way, it'll be saved/printed correctly.\n      this._uiManager.addShouldRescale(this);\n    }\n    super.setParent(parent);\n  }\n\n  onScaleChanging() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const width = this.width * parentWidth;\n    const height = this.height * parentHeight;\n    this.setDimensions(width, height);\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.#disableEditing || this.canvas === null) {\n      return;\n    }\n\n    super.enableEditMode();\n    this._isDraggable = false;\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode() || this.canvas === null) {\n      return;\n    }\n\n    super.disableEditMode();\n    this._isDraggable = !this.isEmpty();\n    this.div.classList.remove(\"editing\");\n\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = !this.isEmpty();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return (\n      this.paths.length === 0 ||\n      (this.paths.length === 1 && this.paths[0].length === 0)\n    );\n  }\n\n  #getInitialBBox() {\n    const {\n      parentRotation,\n      parentDimensions: [width, height],\n    } = this;\n    switch (parentRotation) {\n      case 90:\n        return [0, height, height, width];\n      case 180:\n        return [width, height, width, height];\n      case 270:\n        return [width, 0, height, width];\n      default:\n        return [0, 0, width, height];\n    }\n  }\n\n  /**\n   * Set line styles.\n   */\n  #setStroke() {\n    const { ctx, color, opacity, thickness, parentScale, scaleFactor } = this;\n    ctx.lineWidth = (thickness * parentScale) / scaleFactor;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 10;\n    ctx.strokeStyle = `${color}${opacityToHex(opacity)}`;\n  }\n\n  /**\n   * Start to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #startDrawing(x, y) {\n    this.canvas.addEventListener(\"contextmenu\", noContextMenu);\n    this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n\n    this.isEditing = true;\n    if (!this.#isCanvasInitialized) {\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.thickness ||= InkEditor._defaultThickness;\n      this.color ||=\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor;\n      this.opacity ??= InkEditor._defaultOpacity;\n    }\n    this.currentPath.push([x, y]);\n    this.#hasSomethingToDraw = false;\n    this.#setStroke();\n\n    this.#requestFrameCallback = () => {\n      this.#drawPoints();\n      if (this.#requestFrameCallback) {\n        window.requestAnimationFrame(this.#requestFrameCallback);\n      }\n    };\n    window.requestAnimationFrame(this.#requestFrameCallback);\n  }\n\n  /**\n   * Draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #draw(x, y) {\n    const [lastX, lastY] = this.currentPath.at(-1);\n    if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n      return;\n    }\n    const currentPath = this.currentPath;\n    let path2D = this.#currentPath2D;\n    currentPath.push([x, y]);\n    this.#hasSomethingToDraw = true;\n\n    if (currentPath.length <= 2) {\n      path2D.moveTo(...currentPath[0]);\n      path2D.lineTo(x, y);\n      return;\n    }\n\n    if (currentPath.length === 3) {\n      this.#currentPath2D = path2D = new Path2D();\n      path2D.moveTo(...currentPath[0]);\n    }\n\n    this.#makeBezierCurve(\n      path2D,\n      ...currentPath.at(-3),\n      ...currentPath.at(-2),\n      x,\n      y\n    );\n  }\n\n  #endPath() {\n    if (this.currentPath.length === 0) {\n      return;\n    }\n    const lastPoint = this.currentPath.at(-1);\n    this.#currentPath2D.lineTo(...lastPoint);\n  }\n\n  /**\n   * Stop to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #stopDrawing(x, y) {\n    this.#requestFrameCallback = null;\n\n    x = Math.min(Math.max(x, 0), this.canvas.width);\n    y = Math.min(Math.max(y, 0), this.canvas.height);\n\n    this.#draw(x, y);\n    this.#endPath();\n\n    // Interpolate the path entered by the user with some\n    // Bezier's curves in order to have a smoother path and\n    // to reduce the data size used to draw it in the PDF.\n    let bezier;\n    if (this.currentPath.length !== 1) {\n      bezier = this.#generateBezierPoints();\n    } else {\n      // We have only one point finally.\n      const xy = [x, y];\n      bezier = [[xy, xy.slice(), xy.slice(), xy]];\n    }\n    const path2D = this.#currentPath2D;\n    const currentPath = this.currentPath;\n    this.currentPath = [];\n    this.#currentPath2D = new Path2D();\n\n    const cmd = () => {\n      this.allRawPaths.push(currentPath);\n      this.paths.push(bezier);\n      this.bezierPath2D.push(path2D);\n      this.rebuild();\n    };\n\n    const undo = () => {\n      this.allRawPaths.pop();\n      this.paths.pop();\n      this.bezierPath2D.pop();\n      if (this.paths.length === 0) {\n        this.remove();\n      } else {\n        if (!this.canvas) {\n          this.#createCanvas();\n          this.#createObserver();\n        }\n        this.#fitToContent();\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  #drawPoints() {\n    if (!this.#hasSomethingToDraw) {\n      return;\n    }\n    this.#hasSomethingToDraw = false;\n\n    const thickness = Math.ceil(this.thickness * this.parentScale);\n    const lastPoints = this.currentPath.slice(-3);\n    const x = lastPoints.map(xy => xy[0]);\n    const y = lastPoints.map(xy => xy[1]);\n    const xMin = Math.min(...x) - thickness;\n    const xMax = Math.max(...x) + thickness;\n    const yMin = Math.min(...y) - thickness;\n    const yMax = Math.max(...y) + thickness;\n\n    const { ctx } = this;\n    ctx.save();\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      // In Chrome, the clip() method doesn't work as expected.\n      ctx.clearRect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.beginPath();\n      ctx.rect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.clip();\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n    ctx.stroke(this.#currentPath2D);\n\n    ctx.restore();\n  }\n\n  #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n    const prevX = (x0 + x1) / 2;\n    const prevY = (y0 + y1) / 2;\n    const x3 = (x1 + x2) / 2;\n    const y3 = (y1 + y2) / 2;\n\n    path2D.bezierCurveTo(\n      prevX + (2 * (x1 - prevX)) / 3,\n      prevY + (2 * (y1 - prevY)) / 3,\n      x3 + (2 * (x1 - x3)) / 3,\n      y3 + (2 * (y1 - y3)) / 3,\n      x3,\n      y3\n    );\n  }\n\n  #generateBezierPoints() {\n    const path = this.currentPath;\n    if (path.length <= 2) {\n      return [[path[0], path[0], path.at(-1), path.at(-1)]];\n    }\n\n    const bezierPoints = [];\n    let i;\n    let [x0, y0] = path[0];\n    for (i = 1; i < path.length - 2; i++) {\n      const [x1, y1] = path[i];\n      const [x2, y2] = path[i + 1];\n      const x3 = (x1 + x2) / 2;\n      const y3 = (y1 + y2) / 2;\n\n      // The quadratic is: [[x0, y0], [x1, y1], [x3, y3]].\n      // Convert the quadratic to a cubic\n      // (see https://fontforge.org/docs/techref/bezier.html#converting-truetype-to-postscript)\n      const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n      const control2 = [x3 + (2 * (x1 - x3)) / 3, y3 + (2 * (y1 - y3)) / 3];\n\n      bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n\n      [x0, y0] = [x3, y3];\n    }\n\n    const [x1, y1] = path[i];\n    const [x2, y2] = path[i + 1];\n\n    // The quadratic is: [[x0, y0], [x1, y1], [x2, y2]].\n    const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n    const control2 = [x2 + (2 * (x1 - x2)) / 3, y2 + (2 * (y1 - y2)) / 3];\n\n    bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n    return bezierPoints;\n  }\n\n  /**\n   * Redraw all the paths.\n   */\n  #redraw() {\n    if (this.isEmpty()) {\n      this.#updateTransform();\n      return;\n    }\n    this.#setStroke();\n\n    const { canvas, ctx } = this;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.#updateTransform();\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n  }\n\n  /**\n   * Commit the curves we have in this editor.\n   */\n  commit() {\n    if (this.#disableEditing) {\n      return;\n    }\n\n    super.commit();\n\n    this.isEditing = false;\n    this.disableEditMode();\n\n    // This editor must be on top of the main ink editor.\n    this.setInForeground();\n\n    this.#disableEditing = true;\n    this.div.classList.add(\"disabled\");\n\n    this.#fitToContent(/* firstTime = */ true);\n    this.makeResizable();\n\n    this.parent.addInkEditorIfNeeded(/* isCommitting = */ true);\n\n    // When commiting, the position of this editor is changed, hence we must\n    // move it to the right position in the DOM.\n    this.moveInDOM();\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    this.enableEditMode();\n  }\n\n  /**\n   * onpointerdown callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerdown(event) {\n    if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n      return;\n    }\n\n    // We want to draw on top of any other editors.\n    // Since it's the last child, there's no need to give it a higher z-index.\n    this.setInForeground();\n\n    event.preventDefault();\n\n    if (event.type !== \"mouse\") {\n      this.div.focus();\n    }\n\n    this.#startDrawing(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointermove callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointermove(event) {\n    event.preventDefault();\n    this.#draw(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointerup callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerup(event) {\n    event.preventDefault();\n    this.#endDrawing(event);\n  }\n\n  /**\n   * onpointerleave callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerleave(event) {\n    this.#endDrawing(event);\n  }\n\n  /**\n   * End the drawing.\n   * @param {PointerEvent} event\n   */\n  #endDrawing(event) {\n    this.canvas.removeEventListener(\n      \"pointerleave\",\n      this.#boundCanvasPointerleave\n    );\n    this.canvas.removeEventListener(\n      \"pointermove\",\n      this.#boundCanvasPointermove\n    );\n    this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n\n    // Slight delay to avoid the context menu to appear (it can happen on a long\n    // tap with a pen).\n    setTimeout(() => {\n      this.canvas.removeEventListener(\"contextmenu\", noContextMenu);\n    }, 10);\n\n    this.#stopDrawing(event.offsetX, event.offsetY);\n\n    this.addToAnnotationStorage();\n\n    // Since the ink editor covers all of the page and we want to be able\n    // to select another editor, we just put this one in the background.\n    this.setInBackground();\n  }\n\n  /**\n   * Create the canvas element.\n   */\n  #createCanvas() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.className = \"inkEditorCanvas\";\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink_canvas_aria_label\")\n      .then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n    this.div.append(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return !this.isEmpty() && this.#disableEditing;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink2_aria_label\")\n      .then(msg => this.div?.setAttribute(\"aria-label\", msg));\n\n    const [x, y, w, h] = this.#getInitialBBox();\n    this.setAt(x, y, 0, 0);\n    this.setDims(w, h);\n\n    this.#createCanvas();\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.setDims(this.width * parentWidth, this.height * parentHeight);\n      this.#redraw();\n      this.div.classList.add(\"disabled\");\n    } else {\n      this.div.classList.add(\"editing\");\n      this.enableEditMode();\n    }\n\n    this.#createObserver();\n\n    return this.div;\n  }\n\n  #setCanvasDims() {\n    if (!this.#isCanvasInitialized) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.canvas.width = Math.ceil(this.width * parentWidth);\n    this.canvas.height = Math.ceil(this.height * parentHeight);\n    this.#updateTransform();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  setDimensions(width, height) {\n    const roundedWidth = Math.round(width);\n    const roundedHeight = Math.round(height);\n    if (\n      this.#realWidth === roundedWidth &&\n      this.#realHeight === roundedHeight\n    ) {\n      return;\n    }\n\n    this.#realWidth = roundedWidth;\n    this.#realHeight = roundedHeight;\n\n    this.canvas.style.visibility = \"hidden\";\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.fixAndSetPosition();\n\n    if (this.#disableEditing) {\n      this.#setScaleFactor(width, height);\n    }\n\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.canvas.style.visibility = \"visible\";\n\n    // For any reason the dimensions couldn't be in percent but in pixels, hence\n    // we must fix them.\n    this.fixDims();\n  }\n\n  #setScaleFactor(width, height) {\n    const padding = this.#getPadding();\n    const scaleFactorW = (width - padding) / this.#baseWidth;\n    const scaleFactorH = (height - padding) / this.#baseHeight;\n    this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n  }\n\n  /**\n   * Update the canvas transform.\n   */\n  #updateTransform() {\n    const padding = this.#getPadding() / 2;\n    this.ctx.setTransform(\n      this.scaleFactor,\n      0,\n      0,\n      this.scaleFactor,\n      this.translationX * this.scaleFactor + padding,\n      this.translationY * this.scaleFactor + padding\n    );\n  }\n\n  /**\n   * Convert into a Path2D.\n   * @param {Array<Array<number>>} bezier\n   * @returns {Path2D}\n   */\n  static #buildPath2D(bezier) {\n    const path2D = new Path2D();\n    for (let i = 0, ii = bezier.length; i < ii; i++) {\n      const [first, control1, control2, second] = bezier[i];\n      if (i === 0) {\n        path2D.moveTo(...first);\n      }\n      path2D.bezierCurveTo(\n        control1[0],\n        control1[1],\n        control2[0],\n        control2[1],\n        second[0],\n        second[1]\n      );\n    }\n    return path2D;\n  }\n\n  static #toPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] += blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] + blX;\n          points[i + 1] = x + blY;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] += blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trX - points[i + 1];\n          points[i + 1] = trY - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  static #fromPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] -= blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] - blY;\n          points[i + 1] = x - blX;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] -= blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trY - points[i + 1];\n          points[i + 1] = trX - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  /**\n   * Transform and serialize the paths.\n   * @param {number} s - scale factor\n   * @param {number} tx - abscissa of the translation\n   * @param {number} ty - ordinate of the translation\n   * @param {Array<number>} rect - the bounding box of the annotation\n   */\n  #serializePaths(s, tx, ty, rect) {\n    const paths = [];\n    const padding = this.thickness / 2;\n    const shiftX = s * tx + padding;\n    const shiftY = s * ty + padding;\n    for (const bezier of this.paths) {\n      const buffer = [];\n      const points = [];\n      for (let j = 0, jj = bezier.length; j < jj; j++) {\n        const [first, control1, control2, second] = bezier[j];\n        const p10 = s * first[0] + shiftX;\n        const p11 = s * first[1] + shiftY;\n        const p20 = s * control1[0] + shiftX;\n        const p21 = s * control1[1] + shiftY;\n        const p30 = s * control2[0] + shiftX;\n        const p31 = s * control2[1] + shiftY;\n        const p40 = s * second[0] + shiftX;\n        const p41 = s * second[1] + shiftY;\n\n        if (j === 0) {\n          buffer.push(p10, p11);\n          points.push(p10, p11);\n        }\n        buffer.push(p20, p21, p30, p31, p40, p41);\n        points.push(p20, p21);\n        if (j === jj - 1) {\n          points.push(p40, p41);\n        }\n      }\n      paths.push({\n        bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n        points: InkEditor.#toPDFCoordinates(points, rect, this.rotation),\n      });\n    }\n\n    return paths;\n  }\n\n  /**\n   * Get the bounding box containing all the paths.\n   * @returns {Array<number>}\n   */\n  #getBbox() {\n    let xMin = Infinity;\n    let xMax = -Infinity;\n    let yMin = Infinity;\n    let yMax = -Infinity;\n\n    for (const path of this.paths) {\n      for (const [first, control1, control2, second] of path) {\n        const bbox = Util.bezierBoundingBox(\n          ...first,\n          ...control1,\n          ...control2,\n          ...second\n        );\n        xMin = Math.min(xMin, bbox[0]);\n        yMin = Math.min(yMin, bbox[1]);\n        xMax = Math.max(xMax, bbox[2]);\n        yMax = Math.max(yMax, bbox[3]);\n      }\n    }\n\n    return [xMin, yMin, xMax, yMax];\n  }\n\n  /**\n   * The bounding box is computed with null thickness, so we must take\n   * it into account for the display.\n   * It corresponds to the total padding, hence it should be divided by 2\n   * in order to have left/right paddings.\n   * @returns {number}\n   */\n  #getPadding() {\n    return this.#disableEditing\n      ? Math.ceil(this.thickness * this.parentScale)\n      : 0;\n  }\n\n  /**\n   * Set the div position and dimensions in order to fit to\n   * the bounding box of the contents.\n   * @returns {undefined}\n   */\n  #fitToContent(firstTime = false) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    if (!this.#disableEditing) {\n      this.#redraw();\n      return;\n    }\n\n    const bbox = this.#getBbox();\n    const padding = this.#getPadding();\n    this.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    this.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n\n    const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n    const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n\n    this.setAspectRatio(width, height);\n\n    const prevTranslationX = this.translationX;\n    const prevTranslationY = this.translationY;\n\n    this.translationX = -bbox[0];\n    this.translationY = -bbox[1];\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.#realWidth = width;\n    this.#realHeight = height;\n\n    this.setDims(width, height);\n    const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n    this.translate(\n      prevTranslationX - this.translationX - unscaledPadding,\n      prevTranslationY - this.translationY - unscaledPadding\n    );\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof InkAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.thickness = data.thickness;\n    editor.color = Util.makeHexColor(...data.color);\n    editor.opacity = data.opacity;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const width = editor.width * pageWidth;\n    const height = editor.height * pageHeight;\n    const scaleFactor = editor.parentScale;\n    const padding = data.thickness / 2;\n\n    editor.#disableEditing = true;\n    editor.#realWidth = Math.round(width);\n    editor.#realHeight = Math.round(height);\n\n    const { paths, rect, rotation } = data;\n\n    for (let { bezier } of paths) {\n      bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n      const path = [];\n      editor.paths.push(path);\n      let p0 = scaleFactor * (bezier[0] - padding);\n      let p1 = scaleFactor * (bezier[1] - padding);\n      for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n        const p10 = scaleFactor * (bezier[i] - padding);\n        const p11 = scaleFactor * (bezier[i + 1] - padding);\n        const p20 = scaleFactor * (bezier[i + 2] - padding);\n        const p21 = scaleFactor * (bezier[i + 3] - padding);\n        const p30 = scaleFactor * (bezier[i + 4] - padding);\n        const p31 = scaleFactor * (bezier[i + 5] - padding);\n        path.push([\n          [p0, p1],\n          [p10, p11],\n          [p20, p21],\n          [p30, p31],\n        ]);\n        p0 = p30;\n        p1 = p31;\n      }\n      const path2D = this.#buildPath2D(path);\n      editor.bezierPath2D.push(path2D);\n    }\n\n    const bbox = editor.#getBbox();\n    editor.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    editor.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    editor.#setScaleFactor(width, height);\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize() {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const rect = this.getRect(0, 0);\n    const color = AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n\n    return {\n      annotationType: AnnotationEditorType.INK,\n      color,\n      thickness: this.thickness,\n      opacity: this.opacity,\n      paths: this.#serializePaths(\n        this.scaleFactor / this.parentScale,\n        this.translationX,\n        this.translationY,\n        rect\n      ),\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n  }\n}\n\nexport { InkEditor };\n",
      "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationEditorType, shadow } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { PixelsPerInch } from \"../display_utils.js\";\nimport { StampAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass StampEditor extends AnnotationEditor {\n  #bitmap = null;\n\n  #bitmapId = null;\n\n  #bitmapPromise = null;\n\n  #bitmapUrl = null;\n\n  #bitmapFile = null;\n\n  #canvas = null;\n\n  #observer = null;\n\n  #resizeTimeoutId = null;\n\n  #isSvg = false;\n\n  #hasBeenAddedInUndoStack = false;\n\n  static _type = \"stamp\";\n\n  constructor(params) {\n    super({ ...params, name: \"stampEditor\" });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n);\n  }\n\n  static get supportedTypes() {\n    // See https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types\n    // to know which types are supported by the browser.\n    const types = [\n      \"apng\",\n      \"avif\",\n      \"bmp\",\n      \"gif\",\n      \"jpeg\",\n      \"png\",\n      \"svg+xml\",\n      \"webp\",\n      \"x-icon\",\n    ];\n    return shadow(\n      this,\n      \"supportedTypes\",\n      types.map(type => `image/${type}`)\n    );\n  }\n\n  static get supportedTypesStr() {\n    return shadow(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n  }\n\n  /** @inheritdoc */\n  static isHandlingMimeForPasting(mime) {\n    return this.supportedTypes.includes(mime);\n  }\n\n  /** @inheritdoc */\n  static paste(item, parent) {\n    parent.pasteEditor(AnnotationEditorType.STAMP, {\n      bitmapFile: item.getAsFile(),\n    });\n  }\n\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    this.#createCanvas();\n  }\n\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (this.#canvas) {\n      this.div.focus();\n    }\n  }\n\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager\n        .getFromId(this.#bitmapId)\n        .then(data => this.#getBitmapFetched(data, /* fromId = */ true))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromUrl(url)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromFile(file)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    const input = document.createElement(\"input\");\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      input.hidden = true;\n      input.id = \"stampEditorFileInput\";\n      document.body.append(input);\n    }\n    input.type = \"file\";\n    input.accept = StampEditor.supportedTypesStr;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(\n            input.files[0]\n          );\n          this.#getBitmapFetched(data);\n        }\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          input.remove();\n        }\n        resolve();\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      });\n    }).finally(() => this.#getBitmapDone());\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"TESTING\")) {\n      input.click();\n    }\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      this.#observer?.disconnect();\n      this.#observer = null;\n    }\n    super.remove();\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      // It's possible to have to rebuild an editor which is not on a visible\n      // page.\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (this.#bitmapId) {\n      this.#getBitmap();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = true;\n    this.div.focus();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !(\n      this.#bitmapPromise ||\n      this.#bitmap ||\n      this.#bitmapUrl ||\n      this.#bitmapFile\n    );\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return true;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.div.hidden = true;\n\n    if (this.#bitmap) {\n      this.#createCanvas();\n    } else {\n      this.#getBitmap();\n    }\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n    }\n\n    return this.div;\n  }\n\n  #createCanvas() {\n    const { div } = this;\n    let { width, height } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (\n      width > MAX_RATIO * pageWidth ||\n      height > MAX_RATIO * pageHeight\n    ) {\n      // If the the image is too big compared to the page dimensions\n      // (more than MAX_RATIO) then we scale it down.\n      const factor = Math.min(\n        (MAX_RATIO * pageWidth) / width,\n        (MAX_RATIO * pageHeight) / height\n      );\n      width *= factor;\n      height *= factor;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setDims(\n      (width * parentWidth) / pageWidth,\n      (height * parentHeight) / pageHeight\n    );\n\n    this._uiManager.enableWaiting(false);\n    const canvas = (this.#canvas = document.createElement(\"canvas\"));\n    div.append(canvas);\n    div.hidden = false;\n    this.#drawBitmap(width, height);\n    this.#createObserver();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n\n    // There are multiple ways to add an image to the page, so here we just\n    // count the number of times an image is added to the page whatever the way\n    // is.\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        subtype: this.editorType,\n        data: {\n          action: \"inserted_image\",\n        },\n      },\n    });\n    this.addAltTextButton();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  #setDimensions(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setDims(width, height);\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    // When the user is resizing the editor we just use CSS to scale the image\n    // to avoid redrawing it too often.\n    // And once the user stops resizing the editor we redraw the image in\n    // rescaling it correctly (see this.#scaleBitmap).\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap(width, height);\n    }, TIME_TO_WAIT);\n  }\n\n  #scaleBitmap(width, height) {\n    const { width: bitmapWidth, height: bitmapHeight } = this.#bitmap;\n\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n\n      if (newWidth > 2 * width) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(newWidth / 2);\n        newWidth =\n          newWidth >= 16384\n            ? Math.floor(newWidth / 2) - 1\n            : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight =\n          newHeight >= 16384\n            ? Math.floor(newHeight / 2) - 1\n            : Math.ceil(newHeight / 2);\n      }\n\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        bitmap,\n        0,\n        0,\n        prevWidth,\n        prevHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      bitmap = offscreen.transferToImageBitmap();\n    }\n\n    return bitmap;\n  }\n\n  #drawBitmap(width, height) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    const canvas = this.#canvas;\n    if (!canvas || (canvas.width === width && canvas.height === height)) {\n      return;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    const bitmap = this.#isSvg\n      ? this.#bitmap\n      : this.#scaleBitmap(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(\n      bitmap,\n      0,\n      0,\n      bitmap.width,\n      bitmap.height,\n      0,\n      0,\n      width,\n      height\n    );\n  }\n\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      // We convert to a data url because it's sync and the url can live in the\n      // clipboard.\n      const canvas = document.createElement(\"canvas\");\n      ({ width: canvas.width, height: canvas.height } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n\n      return canvas.toDataURL();\n    }\n\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      // Multiply by PixelsPerInch.PDF_TO_CSS_UNITS in order to increase the\n      // image resolution when rasterizing it.\n      const width = Math.round(\n        this.width * pageWidth * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const height = Math.round(\n        this.height * pageHeight * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        this.#bitmap,\n        0,\n        0,\n        this.#bitmap.width,\n        this.#bitmap.height,\n        0,\n        0,\n        width,\n        height\n      );\n      return offscreen.transferToImageBitmap();\n    }\n\n    return structuredClone(this.#bitmap);\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.#setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof StampAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    const { rect, bitmapUrl, bitmapId, isSvg, accessibilityData } = data;\n    if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const serialized = {\n      annotationType: AnnotationEditorType.STAMP,\n      bitmapId: this.#bitmapId,\n      pageIndex: this.pageIndex,\n      rect: this.getRect(0, 0),\n      rotation: this.rotation,\n      isSvg: this.#isSvg,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // We don't know what's the final destination (this pdf or another one)\n      // of this annotation and the clipboard doesn't support ImageBitmaps,\n      // hence we serialize the bitmap to a data url.\n      serialized.bitmapUrl = this.#serializeBitmap(/* toUrl = */ true);\n      serialized.accessibilityData = this.altTextData;\n      return serialized;\n    }\n\n    const { decorative, altText } = this.altTextData;\n    if (!decorative && altText) {\n      serialized.accessibilityData = { type: \"Figure\", alt: altText };\n    }\n\n    if (context === null) {\n      return serialized;\n    }\n\n    context.stamps ||= new Map();\n    const area = this.#isSvg\n      ? (serialized.rect[2] - serialized.rect[0]) *\n        (serialized.rect[3] - serialized.rect[1])\n      : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      // We don't want to have multiple copies of the same bitmap in the\n      // annotationMap, hence we only add the bitmap the first time we meet it.\n      context.stamps.set(this.#bitmapId, { area, serialized });\n      serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n    } else if (this.#isSvg) {\n      // If we have multiple copies of the same svg but with different sizes,\n      // then we want to keep the biggest one.\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n      }\n    }\n    return serialized;\n  }\n}\n\nexport { StampEditor };\n",
      "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n",
      "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").OnProgressParameters} OnProgressParameters */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/text_layer\").TextLayerRenderTask} TextLayerRenderTask */\n\nimport {\n  AbortException,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationMode,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  FeatureTest,\n  ImageKind,\n  InvalidPDFException,\n  MissingPDFException,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  shadow,\n  UnexpectedResponseException,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  PDFDataRangeTransport,\n  PDFWorker,\n  SVGGraphics,\n  version,\n} from \"./display/api.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  noContextMenu,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n} from \"./display/display_utils.js\";\nimport { renderTextLayer, updateTextLayer } from \"./display/text_layer.js\";\nimport { AnnotationEditorLayer } from \"./display/editor/annotation_editor_layer.js\";\nimport { AnnotationEditorUIManager } from \"./display/editor/tools.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nexport {\n  AbortException,\n  AnnotationEditorLayer,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationEditorUIManager,\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DOMSVGFactory,\n  FeatureTest,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  ImageKind,\n  InvalidPDFException,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  MissingPDFException,\n  noContextMenu,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  PromiseCapability,\n  RenderingCancelledException,\n  renderTextLayer,\n  setLayerDimensions,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  updateTextLayer,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
